// Generic confirmation (Confirm? [yes/ok/delete, cancel])
confirm = "Potvrdit?";
// Answer to a question (Are you sure you want to do that? [yes, cancel])
confirm.yes = "Ano";
// Answer to a question (Are you sure you want to do that? [yes, no, cancel])
confirm.no = "Ne";
// The generic ok in a confirm box (The next operation is dangerous. [ok, cancel])
confirm.ok = "Ok";
// Cancel something after being asked (Question? [answer, cancel])
confirm.cancel = "Zrušit";

// Experimental feature
experimental = "Experimentální!";

status.exit = "Neuložené změny! Uložit před zavřením?";
status.exit.yes = "Uložit";
status.exit.no = "Neukládat";

// On single tap (should be short)
ontap = "Na dotek";

all = "Vše";
error = "Chyba";

reset = "Resetovat";
resetOrder = "Resetovat pořadí";

clipboard = "Schránka";
clipboard.copy = "Kopírovat";
clipboard.paste = "Vložit";

// memory size
bytes = "bajtů";
kB = "kB";
MB = "MB";
GB = "GB";
TB = "TB";

// Noun
instance = "Instance";
object = "Objekt";

// Same value (usually for axis, e.g: x == y == z)
uniform = "Jednotný";

sync = "Synchronizovat";

// position
position.top = "Horní";
position.bottom = "Dolní";
position.left = "Levý";
position.right = "Pravý";
position.center = "Střed";
// direction
direction.up = "Nahoru";
direction.down = "Dolů";
direction.left = "Vlevo";
direction.right = "Vpravo";
// 3d cube
cube.top = "Horní";
cube.bottom = "Spodní";
cube.left = "Levá";
cube.right = "Pravá";
cube.front = "Přední";
cube.back = "Zadní";

// Name of an item (object, tool, etc)
item.name = "Název";
// Add a new item (object, tool, etc)
item.new = "Nový";
// Rename an item (object, tool, etc)
item.rename = "Přejmenovat";
// Add a new item (object, tool, project, etc)
item.add = "Přidat";
// Update an item image with a new image (synonym: Update)
item.replace = "Nahradit";
// Save an item (object, tool, etc)
item.save = "Uložit";
item.save.confirm = "Potvrdit uložení?";
// Update an item (update camera view point, etc)
item.update = "Aktualizovat";
// Reload last save of an item (object, tool, etc)
item.lastSave = "Poslední uložené";
// Reload last save of an item (object, tool, etc)
item.lastSave.confirm = "Načíst poslední uložené?";
// Reset an item to its initial value (object, tool, etc)
item.reset = "Vynulovat";
item.reset.confirm = "Potvrdit resetování?";
// Make an item instance, similar to clone but keeps the underlying geometry (Synonym: link? soft clone?)
item.instance = "Instance";
// Uninstance the object, make the object real
item.uninstance = "Zrušit instance";
// Clone an item (object, tool, etc)
item.clone = "Klonovat";
// Delete an item (object, tool, etc)
item.delete = "Smazat";
item.delete.confirm = "Potvrdit smazání?";
item.delete.confirm.yes = "Ano, smazat";
// When we delete the item but the image is used somewhere
item.delete.used = "Použitý obrázek";
// Convert the item type (mesh, light) to a simple Node type
item.toNode = "Na Nod";
// Item visibility (object, layer, etc)
item.visible = "Viditelný";
// Show an item (object, layer, etc)
item.show = "Zobrazit";
// Hide an item (object, layer, etc)
item.hide = "Skrýt";
// Select an item (object, layer, etc)
item.select = "Vybrat";
// Unselect an item (object, layer, etc)
item.unselect = "Zrušit výběr";
// Merge an item with another one below (layer)
item.mergeDown = "Sloučit dolů";
// The order of an item in a list
item.order = "Pořadí";
// Focus on previous item
item.previous = "Předchozí";
// Focus on next item
item.next = "Další";
// The item is locked (either it cannot be selected, edited, or we preserve its details)
item.lock = "Zámek";
// No item selected
item.none = "Žádný";

// Search something (text entry to filter item)
search = "Hledat";

// Three-state toggle button (Auto, Off, On)
toggle.on = "Zapnuto";
// Three-state toggle button (Auto, Off, On)
toggle.off = "Vypnuto";
// Three-state toggle button (Auto, Off, On)
toggle.auto = "Automaticky";

// When you launch the app and we need to reprocess some resource thumbnails
loading.reprocess = "Chybějící miniatury, zpracování souborů...";
loading.reprocess.cancel = "Přeskočit generaci náhledů?";

access.title = "Přístupnost";
access.window = "Asistenční okno";
access.pinch = "Štípnutí";
access.drag = "Táhnout";
access.rotate = "Otočit";
access.roll = "Váleček";

// Color of an object
material.color = "Barva";
// Defines how blurry or sharp the reflection on a material is (opposite of glossiness)
material.roughness = "Drsnost";
// Defines how blurry or sharp the reflection on a material is (opposite of roughness)
material.glossiness = "Lesk";
// Whether the material is a metal or not
material.metalness = "Kovovost";
// How much light a surface will reflect
material.specular = "Speculární odrazivost";
// Light that the surface can emit (glow)
material.emissive = "Emise";
// Normal map (synonym: detail, bump)
material.normal = "Normála";
// flip y coordinate
material.normal.flipY = "FlipY";
// Ambient Occlusion (AO)
material.occlusion = "Okluze";
// Textures, basically images wrapped on models (synonym: Maps, Texture maps)
material.textures = "Textury";
// Textures/Image
material.texture = "Textura";
// A warning indicating that the mesh has no UVs
material.warningNoUVs = "Žádné UV!";
// Texture filtering https://en.wikipedia.org/wiki/Texture_filtering
material.texture.filter = "Filtr";
// Nearest Filtering (closest sample)
material.texture.nearest = "Nejbližší";
// Bilinear Filter
material.texture.linear = "Lineární";
// Mipmap filtering
material.texture.mipmap = "Mipmap";
// Triplanar mapping
material.projection = "Projekce";
material.projection.triplanar = "Triplanar";

// Prefer low power
about.lowPower = "Nízká spotřeba GPU";
about.lowPower.confirm = "Po změně této hodnoty, musíte restartovat Nomad.";
// Wintab wacom API
about.wintab = "Použijte WinTab";
about.wintab.help = "Pokud je WinTab povolen, měli byste ve svých nastaveních Wacom pravděpodobně deaktivovat Windows Ink.

Podobně, pokud je WinTab deaktivován, měl by být ve vašich nastaveních Wacom povolen Windows Ink.";
// Prefer low power
about.fullScreen = "Na celou obrazovku";
// Minify
about.minify = "Minimalizovat UI";
about.minify.help = "Můžete také klepnout na obrazovku 4 prsty, pokud to vaše zařízení podporuje.";
// Turntable will rotate the whole scene on itself (as it if was on a turntable)
about.turntable = "Gramofon";
// Rotation center of the turntable
about.turntable.pivot = "Střed otáčení";
// Keep current pivot
about.turntable.pivot.keep = "Zachovat aktuální";
// Turntable pivot will be at the center of the scene
about.turntable.pivot.scene = "Scéna";
// Make the entire scene turn around (speed of the animation)
about.turntable.speed = "Rychlost";
// Stuffs that I used to make the app
about.credits = "Kredity";
// Link to open source projects that I used for the app
about.credits.openSource = "Otevřený Zdroj";
// Only translate the &
about.credits.arts = "MatCaps a HDRIs";
// Change languages of the app
about.languages = "Jazyky";
about.languages.help = "Překladové soubory jsou k dispozici na $0";
// Link to the App Website
about.website = "Webová stránka";
// Link to the App Forum
about.forum = "Fórum";
// Link to the App Manual
about.manual = "Manuál";
// Link to the App Email
about.mail = "Podpora";
// Link to the App Twitter account
about.twitter = "Twitter";
// Link to the App Instagram account
about.instagram = "Instagram";
// Link to the App Facebook account
about.facebook = "Facebook";
// Link to the App Discord account
about.discord = "Discord";
// Link to the App Threads account
about.threads = "Threads";

// The user canceled an operation that was running
alert.aborted = "Operace zrušena!";
// Error when an algorithm needs the object to have an hole (usually to fill it)
alert.hole.nothing = "Objekt nemá žádné otvory!";
// No operation occured because the mesh is already manifold
alert.manifold.already = "Síťka je již spojitá!";
// Visibility of the object is off (but should be on)
alert.shape.notVisible = "Aktuální objekt je neviditelný!";
// The user tried to trim an object but the selected region didn't touch the object
alert.trim.nothing = "Není co oříznout.";
// The user tried to trim an object but the selected region completely encompassed the object
alert.trim.full = "Přerušeno oříznutí: objekt je zcela oříznut.";
// In order to extract something, the mesh needs to have painted mask
alert.extract.none = "Není co extrahovat!";
// In order to split something, the mesh needs to have painted mask
alert.extract.split.none = "Není co rozdělit!";
// List of disabled features when View Mode is selected
alert.view.disabled = "Funkce zakázány v režimu zobrazení:";
// Primitive Widgets are small ui stuffs in the viewport that the user can interact with to modify an object
alert.view.disabled.widgetPrimitive = "Primární widgety";
// The object needs to have two parts disconnected
alert.separate.fail = "Nelze oddělit: objekt má pouze jednu část!";
// Remesh is when you create a new topology (mesh) on an object
alert.voxelRemesh.success = "Přeinicializováno!";
alert.voxelRemesh.empty = "Přerušeno přepracování: výsledek nemá žádné stěny.";
// Should not happen or very rarely, input here is an object
alert.voxelRemesh.invalidInput = "Neplatný vstup!";
// Helper popup to tell the users the object will cloned
alert.matrix.clone = "Objekt bude duplikován";
// Helper popup to tell the users the object will cloned
alert.matrix.instance = "Objekt bude vytvořen";
// A pivot refers the gizmo 3d position, this mode means we are moving the pivot
alert.gizmo.editPivot = "Upravit režim otočného bodu.";
alert.mask.full = "Maska = 100%!";
// A pivot refers the gizmo 3d position
alert.gizmo.editObject = "Upravit režim objektu.";
// See Glossary (DynTopo)
alert.dynamic.enable = "Dynamická topologie ZAPNUTA";
// See Glossary (DynTopo)
alert.dynamic.disable = "Dynamická topologie VYPNUTA";
alert.colorPicker = "Táhněte po objektu a vyberte barvu.";
// Transform mode is when the user can move the reference (image in the background) with its two fingers
alert.backgroundTransform = "Jednoduché klepnutí pro ukončení režimu transformace.";
// Edit the symmetry plane with the gizmo
alert.editSymmetry = "Jednoduché klepnutí pro ukončení režimu úpravy symetrie.";
// Show the painted mask on the mesh
alert.mask.show = "Zobrazit masku";
// Hide the painted mask on the mesh
alert.mask.hide = "Skrýt masku";
// Selection refers to the objects that are currently selected
alert.selection.lock = "Uzamknout výběr";
// Selection refers to the objects that are currently selected
alert.selection.unlock = "Odemknout výběr";
// Hide the objects that are not selected
alert.selection.isolate = "Izolovat výběr";
// Show the objects that are hidden
alert.selection.showAll = "Zobrazit vše";
// Project quick saving
alert.quickSave = "Ukládání...";
// Painting on the object was hidden but the user did paint the object
alert.forcePainting.fill = "Zobrazení malby aktivováno, bylo použito [Maluj vše].";
// Painting on the object was hidden but the user started to paint on the object
alert.forcePainting.tool = "Zobrazení malby aktivováno, objekt byl namalován.";
// See Glossary (Multiresolution)
alert.multiresLost = "Multirezoluce bude ztracena!";
// Boolean cut mode will ignore some features
alert.booleanIgnored = "Boolean ignoruje maskovanou nebo skrytou oblast!";
// The user is starting an operation that can lead to a crash
alert.range.warning = "Hodnota detailu je vysoká a může vyžadovat hodně paměti!";
// Autosave popup
alert.autoSave.auto = "Auto Uložit za... $0s";
// The selected object doesn't have any layers
alert.needLayer = "Aktuální nástroj vyžaduje aktivní vrstvu.";
// The user decided to hide the painting on the objects
alert.paintingHidden = "Malba je skrytá!";
// The user decided to hide the masking on the objects
alert.maskingHidden = "Maska je skrytá!";
// The user decided to display hidden faces
alert.hideIgnored = "Ignorování skrytí!";
// The selected object doesn't have any layers
alert.noPartialWireframe = "Částečné kreslení je zakázáno, když je zobrazen drátový model.";
// The user has selected a tool that is more intuitive to use when the camera is in orthographic mode
alert.shapeOrthographic = "Zvažte použití ortografické kamery, pokud se chcete vyhnout zkreslení perspektivní pyramidy při použití projekčního přístroje.";
// Trial version has a limited number of undo
alert.state.trial = "Zkušební verze: zrušení vráceno";

background = "Pozadí";
// A flat color will be displayed in the background of the scene
background.color = "Barva";
// 2 color with rotation
background.gradient = "Přechod";
// The environment (HDRI) will be displayed in the background
background.environment = "Prostředí";
background.blur = "Rozmazání";
background.exposure = "Expozice";

// Image that the artist uses as a reference
background.imageEnable = "Referenční obrázek";
// The image will be displayed in overlay (used as a reference by the artist)
background.imageOverlay = "Překrytí";
// Opposite of transparency (Alpha)
background.imageAlpha = "Neprůhlednost";
background.imageReset = "Resetovat nastavení";
background.imageTransform = "Transformace";
// X screen coordinate of the image reference
background.imageX = "Pozice X";
// Y screen coordinate of the image reference
background.imageY = "Pozice Y";
// Rotation of the reference image
background.imageRotation = "Rotace";
// Scale of the reference image
background.imageScale = "Měřítko";
// Auto adjust the reference when moving the camera
background.syncLock = "Synchronizovat s uzamčením kamery";

// Blend: normal
blend.normal = "Normální";
// Blend: darker
blend.darker = "Tmavší";
blend.darker.darken = "Ztmavit";
blend.darker.multiply = "Násobit";
blend.darker.linearBurn = "Lineár vypálení";
blend.darker.colorBurn = "Redukce barvy";
// Blend: lighter
blend.lighter = "Zesvětlovač";
blend.lighter.lighten = "Zesvětlit";
blend.lighter.screen = "Obrazovka";
blend.lighter.linearDodge = "Lineární dodávka";
blend.lighter.colorDodge = "Zvýraznění barvy";
// Blend: contrast
blend.contrast = "Kontrast";
blend.contrast.hardLight = "Tvrdé světlo";
blend.contrast.softLight = "Měkké světlo";
blend.contrast.overlay = "Překrytí";
blend.contrast.hardMix = "Tvrdá směs";
blend.contrast.linearLight = "Lineární světlo";
blend.contrast.vividLight = "Živé světlo";
blend.contrast.average = "Průměr";
// Blend: inversion
blend.inversion = "Inverze";
blend.inversion.exclusion = "Vyloučení";
blend.inversion.difference = "Rozdíl";
// Blend: cancelation
blend.cancelation = "Zrušení";
blend.cancelation.divide = "Dělení";
blend.cancelation.subtract = "Odečítání";
// Blend: component
blend.component = "Komponent";
blend.component.luminosity = "Světlost";

// Camera (point of view in 3d)
camera = "Kamera";
cameras = "Kamery";
camera.view = "Zobrazení";
// Copy the views
camera.updateView = "Aktualizovat výhled?";
// Add a new camera
camera.addView = "Přidat výhled";
// Focus on the camera
camera.focus = "Ostření";
// Add on the camera camera
camera.focusOn = "Ostření na $0";
// Camera projection, Orthographic or Perspective
camera.projection = "Projekce";
// Camera projection, Orthographic or Perspective
camera.projection.orthographic = "Ortografický";
// Camera projection, Orthographic or Perspective
camera.projection.perspective = "Perspektiva";
// camera Vertical Field of View
camera.fov = "Vertikální Záběr zorného pole";
// Camera Field of View hint
camera.focal = "ohnisková $0mm (35 mm senzor)";
// Rotation mode controls how the user will interact with the camera rotation
camera.rotation = "Rotace";
// Camera interaction mode, 2 degrees of freedom (synonym: Orbit)
camera.rotation.orbit = "Gramofon";
// Camera interaction mode, 3 degrees of freedom
camera.rotation.trackball = "Kuličková myš";
camera.rotation.trackball.help = "Kuličková myš poskytuje vyšší stupeň volnosti, můžete také otáčet kamerou dvěma prsty.";
// Camera interaction mode, 1st person view
camera.firstPerson = "První osoba";
// How sensitive the camera is (synonym: sensitivity)
camera.speed = "Rychlost";
// Camera rotation sensitivity
camera.speed.rotation = "Rotace";
// Camera translation sensitivity
camera.speed.panning = "Přesun";
// Camera zooming sensitivity
camera.speed.zooming = "Zvětšování";
// Reset camera position
camera.resetView = "Obnovit pohled";
// Align the view (snap to nearest 90° angle)
camera.snapView = "Uchycený pohled";
// Warning (camera is snapped and it switched to orthographic)
camera.snapOrthographic.warning = "Kamera je uchycena (ortografická)";
// Switch to orthographic view when the view is snapped
camera.snapOrthographic = "Ortografické uchycení";
camera.snapOrthographic.help = "Tato možnost funguje i při použití orientační kostky v rohu.";
// The Camera pivot is the point around which the camera rotates
camera.pivot = "Aktualizovat střed otočení...";
// When we double tap on the object with the finger/stylus
camera.doubleTapMesh = "Dvakrát klepněte na objekt";
// When we double tap on the background with the finger/stylus
camera.doubleTapBackground = "Dvakrát klepněte na pozadí";
// When we double tap on the background with the finger/stylus
camera.doubleTapBackgroundFocus.toggle = "Přepnout";
// Focus on the selection
camera.doubleTapBackgroundFocus.selection = "Výběr";
// Focus on the entire scene
camera.doubleTapBackgroundFocus.scene = "Scéna";
// When double tapping with the finger/stylus, the camera pivot will be updated
camera.doubleTapPivot = "Při dvojitém klepnutí";
camera.doubleTapPivot.help = "Aktualizujte pivot rotace při dvojitém klepnutí na povrch objektu.";
// Allow new pivot even when zooming outside the object surface
camera.airPivot = "Povolit vzdušný pivot";
camera.airPivot.help = "Povolit nový pivot i při přibližování mimo povrch objektu.";
// Update the pivot when you start interacting with the camera
camera.autoPivot = "Když se kamera začne pohybovat";
camera.autoPivot.help = "Aktualizujte pivot při zahájení interakce s kamerou.";
// Move the camera so that it focus on the intersection point
camera.doubleTapFocus = "Zaměření";
camera.doubleTapFocus.help = "Při dvojitém klepnutí na objekt se kamera zaměří a zaostří na vybrané místo.";
// Disable XY panning when unzomming
camera.centerZoomOut = "Centrování pohledu při oddalování";
camera.panZoomOut.help = "Pokud je tato možnost zakázána, tato poloha pivotu zůstane nezměněna.";

// Toolbox context (when expanded), multiple objects are selected
context.multiselection = "Vícenásobný výběr";
// There is 0 nodes/items selected
context.noSelection = "Žádný výběr";

// Curve type, presets lets the user chooses between predefined curves
curve.preset = "Přednastavení";
// Quick curve x side shift
curve.shift = "Posun";
// Curve type, https://en.wikipedia.org/wiki/Centripetal_Catmull%E2%80%93Rom_spline
curve.catmull = "Catmull-Rom";
// Curve curve, https://en.wikipedia.org/wiki/Spline_(mathematics)
curve.spline = "Splajn";
curve.bspline = "B-splajn";
curve.precision = "Přesnost";
// merge or collapse 1 point into another
curve.merge = "Sloučit";
// snap
curve.snap = "Zachycení";
curve.snap.offset = "Posunutí";
curve.snap.offset.help = "Hodnota 100 % odpovídá poloměru trubice.";
curve.snap.surface = "Povrch";
curve.snap.vertex = "Vrchol";
curve.snap.grid = "Mřížka (pokud připojeno)";
// Regular spaced sampling
curve.uniform = "Jednotný";
curve.uniform.help = "Křivka bude vzorkována v pravidelných intervalech, aby byla zajištěna jednotná hustota.

Můžete tuto možnost vypnout a přidáním nových řídicích bodů na křivku mírně ovlivnit smyčky hran.";
// Display the falloff curve in a symmetric way
curve.symmetric.help = "Zobrazte útlum symetrickým způsobem.

Tato volba je pouze vizuální pomůcka, neovlivňuje samotný útlum.";
curve.radius = "Poloměr";
curve.twist = "Zkrut";
curve.spiral = "Spirála";
curve.spiral.twist = "Úhel zkrutu";
curve.spiral.scale = "Míra";
curve.spiral.offset = "Posun";
curve.spiral.angle = "Odsazení úhlu";
curve.pivot = "Otočný bod";
curve.pivot.self = "Vlastní";
curve.pivot.children = "Děti";

// Set the desired FPS (frame per second, refresh rate)
debug.limitFps = "Cílové FPS";
debug.limitFps.help = "Když je funkce deaktivována, výchozí hodnota znamená, že bude synchronizována s obnovovací frekvencí displeje.";

// Warning about UVs (using extra memory)
debug.uvPrimitive.warning = "Deaktivujte tuto volbu, pokud nepotřebujete UV.

Sítě s UV využijí více paměti.";
// Debug option, Normalize means transforming the data so that it fits in [0-1] the range
debug.uvNormalize = "Normalizace UV";
debug.uvNormalize.help = "Nomad normalizuje UVs uvnitř oblasti [0-1].";

// Debug option, display an window with some debugging logs
debug.logs = "Záznamy";
// Model shortcut window
debug.shortcut = "Okno zkratek";
// Debug option, overrides the rendering to display the depth buffer
debug.heightmap = "Výšková mapa";
// Debug options, graphical stuffs
debug.graphics = "Grafika";
// Debug options, generate screenshots with size compatible with the iOS store
debug.thumbnails = "Vytvořit náhledy obchodu";

// Open file explorer
file.explore = "Prozkoumat";
// Empty list: there is no projects
file.project.load = "Znovu načíst projekt při spuštění";
// Empty list: there is no projects
file.project.empty = "Zatím nemáte uložený žádný projekt!";
// The current opened project has some unsaved changes
file.project.unsaved = "Neuložené změny!";
// The user will loose its project's unsaved changes
file.project.loseUnsaved = "Přijdete o neuložené změny!";
// Indicates to the user that the project thumbnail corresponds to the last manual save
file.project.lastManualSave = "Náhled posledního ručního uložení";

file.project = "Projekt";
// Save current project (or overwrite if the project has already been saved once)
file.project.save = "Uložit";
// E.g: Save "my_project"?
file.project.save.confirm = "Uložit $0?";
// Make a copy
file.project.saveAs = "Uložit jako";
// Overwrite another project
file.project.overwrite = "Přepsat";
// E.g: Overwrite "my_other_project"?
file.project.overwrite.confirm = "Přepsat $0?";
// Open a project
file.project.open = "Otevřít";
// E.g: Open "my_project"?
file.project.open.confirm = "Otevřít $0?";
// E.g: Clone "my_project"?
file.project.clone.confirm = "Naklonovat $0?";
// Load another project and add/append all its data to the current scene
file.project.add = "Přidat do scény";
// E;g: Add "my_other_project" to the scene?
file.project.add.confirm = "Přidat $0 do scény?";
// Reset the scene and create a new project
file.project.new = "Nový";
file.project.new.confirm = "Vytvořit novou scénu?";
// Delete a project (not corresponding to the currently opened one)
file.project.delete.confirm = "Smazat $0?";
// Delete a project (corresponding to the currently opened one)
file.project.delete.confirmActive = "Smazat $0?

Tohle je aktuální aktivní projekt!";

// Auto save section
file.autoSave = "Automatické ukládání";
file.autoSave.confirm = "Zakázat automatické ukládání?";
file.autoSave.help = "Uložte svůj projekt do samostatného souboru v pravidelných intervalech.

Automaticky uložený soubor naleznete na:";
// Interval in minutes in which the auto save popup will appear
file.autoSave.popup = "Čas vypršel u automatického ukládání";
// In minutes
file.autoSave.minutes = "Časovač vyskakovacího okna";
// Delete the current autoSave data
file.autoSave.delete = "Zrušení automatického ukládání";
// Open the outdated auto save
file.autoSave.open.manual = "Otevřít zastaralé ruční uložení";
file.autoSave.open.auto = "Otevřít zastaralé automatické uložení";

// color space (linear or srgb), do not translate linear/srgb if there is a doubt
file.colorSpace = "Barevný prostor";
file.colorSpace.help = "Pokuste se přepnout tuto možnost, pokud se barvy zdají nesprávné.";
file.colorSpace.linear = "Lineární";
file.colorSpace.srgb = "sRGB";

// Configure imports option
file.importSettings = "Možnosti importu";

// Load interface preference settings when opening a scene file
file.import.guiSettings = "Zachovat nastavení gui";
file.import.guiSettings.help = "Při otevírání nebo importu souboru projektu se načtou všechna nastavení související s gui, která jsou v projektu zabudována.";
// OBJ have "groups" and "objects", by default groups are ignored, use this option to consider groups as separate objects
file.import.obj.splitByGroup = "Rozdělit OBJ podle skupin";
file.import.obj.splitByGroup.help = "Když je povoleno, Nomad rozdělí skupiny OBJ na samostatné objekty.";
// Merge all the object layers at when loading a file (deleting them in the process)
file.import.mergeLayers = "Sloučit vrstvy";
// Ignore the textures present in the file to load
file.import.skipTextures = "Přeskočit textury";
// Do not fiddle with the object topology when loading the file
file.import.keepTopology = "Zachovat topologii";
file.import.keepTopology.help = "Použijte tuto možnost, pokud nechcete, aby Nomad zasahoval do topologie importovaného mesh.

Tím se deaktivuje přerovnání vrcholů/plošek, odstranění duplicit vrcholů/plošek a odstranění nepoužitých vrcholů.";

// Import file section
file.import.title = "Importovat";
file.import.title.help = "Podporovaný formát:";
// The user imports a scene file that will replace the current scene
file.import.open = "Otevřít";
file.import.open.confirm = "Importovat nový soubor?";
// The user imports a scene file that will be added/appended the current scene
file.import.add = "Přidat do scény";
file.import.add.confirm = "Importovat nový soubor?";

// Export scene file
file.export = "Export";

// Filter nodes that we want to export
file.select.include = "Zahrnout";
file.select.all = "Vše";
file.select.visible = "Viditelné";
file.select.selected = "Vybrané";
file.select.unselected = "Nevybrané";

// Export each node in a separate file
file.export.separate = "Jeden soubor na objekt";

// Export the current selected objects instead of the entire scene
file.onlySelection = "Zahrnout pouze vybrané objekty";
file.onlySelection.help = "Zahrnout pouze výběr, místo celé scény.";
// Tries to generate quad (rectangle polygon) from triangles
file.convertToQuad = "Rekonstruovat čtyřúhelník";
file.convertToQuad.help = "Rekonstruujte čtyřúhelníky z trojúhelníků spárováním trojúhelníků (pokud jsou v souborech sousední).";
// ----------------------------------------------
// Whether we include the textures in the exported file
file.export.texture = "Textury";
// Baking means transfering/converting
file.export.texture.help = "Tato volba nezapéká barvy vrcholů do textur.

Include textury pouze, pokud má objekt textury na svém materiálu.";
// ----------------------------------------------
file.export.color0 = "Barvy vrcholů";
file.export.color1 = "PBR barva";
file.export.color1.help = "Exportujte drsnost, kovovost a malování masky. To bude ignorováno jiným softwarem.";
// ----------------------------------------------
// Whether we include normals vector in the exported file
file.export.normal = "Normály";
file.export.normal.help = "Zkontrolujte tuto volbu, pokud chcete otevřít soubor v jiných softwarech.

Nomad vždy ignoruje normály, protože je znovu přepočítává.";
// ----------------------------------------------
file.export.tangent = "Tečny";
file.export.tangent.help = "Zvolte tuto možnost, pokud chcete otevřít soubor v jiných programech.

Tečny jsou použity pouze pokud má model normální mapu.

Nomad vždy ignoruje tečny, protože je přepočítá.";
// ----------------------------------------------
file.export.nomad.help = "Vnitřní formát souborů Nomad Sculpt.

Tento formát se nebude načítat v jiných softwarech, je to hlavně pro účely znovuimportování.";
// ----------------------------------------------
// Whether we include layers in the exported file (see glossary for layer)
file.export.gltf.layer = "Vrstvy";
file.export.gltf.layer.help = "Exportujte vrstvy jako morphy. Oficiálně podporováno glTF, takže by to mělo fungovat i v jiných softwarech.";
// Whether we include painting of layers in the exported file (see glossary for layer)
file.export.gltf.layerPaint = "Malování vrstev";
file.export.gltf.layerPaint.help = "Exportujte malování vrstev. Obecně to jiné softwary ignorují.";
// ----------------------------------------------
file.export.obj.warning = "Vrstvy a další malování (hrubost, kovovost a maska) budou ztraceny.";
// Whether we include the vertex color in the exported file
file.export.obj.color = "Barvy vrcholů";
file.export.obj.color.help = "Některé 3D software je dokážou přečíst, ale ne všechny.";
file.export.obj.color.help.append = "Připojit informace o barvě za vrcholy.";
file.export.obj.color.help.hexa = "Alternativní způsob kódování barev. Podporuje také maskovací data.";
file.export.obj.faceGroup = "Skupina tváří";
file.export.obj.object = "Zapsat objekty";
file.export.obj.object.help = "Nechat objekty oddělené.

Zakázání této možnosti exportuje všechno jako jednu entitu.
Pokud chcete použít funkci žMesh ID / Polygroupž v Substance Painter, musíte tuto možnost zakázat.";
file.export.obj.archive = "Typ";
file.export.obj.archive.folder = "Složka";
file.export.obj.archive.zip = "Zip";
file.export.obj.archive.help = "Některé aplikace (Google Drive, One Drive atd.) nepodporují import složek, takže místo toho můžete použít Zip.";
// ----------------------------------------------
file.export.ply.warning = "Vrstvy a další malování (hrubost, kovovost atd.) budou ztraceny.";
// ----------------------------------------------
file.export.stl.warning = "Vrstvy a další malování (hrubost, kovovost atd.) budou ztraceny.";
// Whether we include the vertex color in the exported file
file.export.stl.color = "Barvy vrcholů";
file.export.stl.color.help = "Některé 3D softwary to budou umět přečíst, ale ne všechny.";
// ----------------------------------------------
file.export.usd.skew = "Povolit zkosení";
file.export.usd.skew.help = "Povolit zkosení v maticových transformacích.

Pokud je deaktivováno, Nomad rozdělí matice zkosení na dvě samostatné transformace škálování a rotace.";
// ----------------------------------------------
// Advanced settings
settings.advanced = "Rozšířené";
// Means that all these options will be resetted when the app restarts
settings.notSaved = "Tyto možnosti nejsou uloženy v nastavení.";
settings.reset.title = "Nastavení";
settings.reset.title.help = "Tímto se obnoví nastavení preferencí aplikace.

Některé zdroje jsou uloženy samostatně a NEBUDOU obnoveny, zahrnuje to:
• Projekty
• Přirazení kláves
• Předvolby nástrojů
• HDR prostředí
• MatCapy
• Alphy
• Textury (štětec)
• Referenční obrázky

Všimněte si, že vše, co je spojeno s projektem, zůstane zachováno, jako osvětlení, Post Process, pohledy kamery atd.";

// Reset preference settings button
settings.reset = "Obnovit na výchozí";
settings.reset.confirm = "Obnovit předvolby?";

// Render a screenshot of the scene
file.render = "Vykreslit";
// If we include the App Interface in the exported screenshot
file.render.showInterface = "Zobrazit rozhraní";
// Resolution ratio of the exported screenshot
file.render.renderRatio = "Poměr vykreslování";
file.render.renderRatio.help = "Hodnota 1.0 znamená, že Nomad bude renderovat ve stejném rozlišení, jako je velikost obrázku níže.

Použijte tuto možnost, pokud nemůžete renderovat při určitém rozlišení (pád kvůli nedostatku paměti).";
// Desired size of the exported screenshot
file.render.size = "Konečná velikost";
// Desired size of the exported screenshot (custom vs predefined size)
file.render.size.custom = "Vlastní";
// Screen resolution parameters for the export screenshot features
file.render.screenResolution = "Obrazovka";
// width of exported screenshot
file.render.width = "Šířka";
// height of exported screenshot
file.render.height = "Výška";
// export screenshot of the scene
file.render.warn = "Rozlišení exportu je vysoké ($0x$1)!

Ujistěte se, že jste uložili váš projekt pro případ, že by váš přístroj došel VRAM a zkolaboval.";
// If true, then the exported screenshot will have transparency data in the image
file.render.transparent = "Průhledné pozadí";
file.render.transparent.help = "Tato možnost může být užitečná, pokud chcete vložit síť do 2D softwaru pro tvorbu.

Částečná průhlednost objektů zatím není podporována.";

// Disable this option to have per-tool pressure settings (instead of shared settings)
pressure.useGlobal = "Použít globální nastavení";
pressure.useGlobal.help = "Ve výchozím nastavení nástroje sdílejí stejná nastavení tlaku.

Zrušte zaškrtnutí této možnosti, pokud chcete pro tento nástroj specifická nastavení tlaku.";

// Pencil pressure
pressure.title = "Tlak";
// Pencil/Stylus pressure will be ignored
pressure.noTool = "Tento nástroj nepoužívá tlak tužky.";
// The tool can support pressure but its selected stroke type will ignore it
pressure.noGrab = "Typ tahu Grab bude ignorovat nastavení tlaku.";
// The stylus pressure will impact the tool radius (more pressure -> bigger radius)
pressure.radius = "Poloměr";
// The stylus pressure will impact the tool intensity (more pressure -> stronger intensity)
pressure.intensity = "Intenzita";
// Average pencil pressure event to get smoother result
pressure.average = "Vyhlazování tlaku";
pressure.average.help = "Průměrná událost tlaku tužky pro dosažení hladších výsledků.";
// Limit pressure to 100%
pressure.limit = "Omezit tlak na 100%";
pressure.limit.help = "Jedná se o globální nastavení.

Použijte tuto možnost k zajištění, že tlak stylusu nikdy nepřekročí 100%.";

// list of inputs allowing camera interaction
gesture.camera = "Kamera";
// list of inputs allowing sculpting interaction
gesture.sculpt = "Socha";
// Select object
gesture.select = "Vyberte objekt";
// Finger/Touch input
gesture.finger = "Prst";
// Stylus/Pencil
gesture.stylus = "Stylus";
// Mouse/Trackpad
gesture.mouse = "Myš";

// long press to pick the color/material under the cursor
gesture.dropper = "Výběr materiálu";
gesture.dropper.help = "Výběr barev/materiálů lze aktivovat dlouhým stiskem na plátně.

Upozorňujeme, že to funguje pouze, pokud je v současném štětci povoleno malování.";

camera.airStroke = "Povolit vzduchový tah";
camera.airStroke.help = "Povolit začátek sochařského tahu i když počáteční kurzor mine síť.

Tato volba je aktivní pouze pro vstupy s povoleným sochařením a deaktivovanou kamerou.";

// Three fingers on screen
gesture.three.title = "Tři prsty";
gesture.three.light = "Otočte osvětlení";
gesture.three.light.help = "Otočte prostředí, osvětlení a MatCap.";
gesture.three.radius = "Poloměr nástroje";
gesture.three.intensity = "Intenzita nástroje";

// If this option is enabled, finger inputs on screen will use the smoothing tool
gesture.finger.smooth = "Prst vždy vyhlazuje";
gesture.finger.smooth.help = "Tato možnost je aktivní pouze, pokud je aktivní nástroj pro sochaření.";
// If enabled, the pressure will be taken into account even if it's not coming from a recognized stylus
gesture.unknownPressure = "Povolit neznámý tlak";
gesture.unknownPressure.help = "Zaškrtněte tuto možnost, pokud tlak nefunguje s vaší tužkou nebo pokud potřebujete tlak prstu.";

// Action when we press an Android pencil button
gesture.pencilAction.android = "Tlačítko tužky";
// Action when we use the Pencil double Tap
gesture.pencilAction.ios = "Dvojité poklepání tužky";
gesture.pencilAction.ios.help = "Aktivní pouze pro Apple Pencil 2. generace.";
// Pencil button (or iOS pencil double tap) action: Nothing
gesture.pencilAction.none = "Žádné";
// Pencil button (or iOS pencil double tap) action: flip adding/substracting sculpt matter setting
gesture.pencilAction.alt = "Přidat/Odebrat";

// Enable Mask gesture by tapping once on the screen
gesture.mask.oneTap = "Zkratky jedním dotykem";
gesture.mask.oneTap.help = "Povolit zkratku Masky klepnutím na obrazovku jednou, aniž by bylo nutné držet zkratku tlačítka masky.

To povolí následující gesta:
• klepněte na pozadí pro invertování masky
• klepněte na maskovanou oblast pro rozostření masky
• klepněte na nemaskovanou oblast pro zostření masky";
// Hold the finger on screen to toggle between two tools: Mask and SelMask
gesture.mask.holdStroke = "Tah";
gesture.mask.holdStroke.help = "Dlouhým stisknutím přepnete mezi Mask a SelMask a začne nový tah.

Na konci tahu se znovu vybere předchozí nástroj.";
gesture.mask.holdIdle = "Nástroj";
gesture.mask.holdIdle.help = "Dlouhé stisknutí a uvolnění bez pohybu pro přepínání mezi Mask a SelMask.";

// Shortcut customization, choose the action that the shortcut will performan (select tool, etc)
gesture.shortcut = "Zkratka";

// Shortcuts to undo/redo
gesture.history = "Historie zkratek";
gesture.history.help = "• Zpět: klepnout dvěma prsty
• Znovu: klepnout třemi prsty";
gesture.history.hold = "Dlouhý stisk";
gesture.history.hold.help = "Podržet 2/3 prsty.";

// Size rejection is when we try to ignore the palm of the hand when we interact with a tablet
gesture.palmRejection = "Vyloučení dlaně";
gesture.palmRejection.confirm = "Ujistěte se, že je tato možnost deaktivována, pokud máte potíže s interakcí s plátnem!";
gesture.palmRejection.help = "Odmítněte vstup, pokud je velikost kontaktní plochy větší než tato hodnota.

Možná nebude fungovat na každém zařízení.";
// Size in pixel for the palm rejection feature
gesture.palmRejection.size = "Maximální práh velikosti";

// Smoothing strategy
extract.polish.all = "Vše";
extract.polish.sharp = "Ostrá hrana";
extract.polish.border = "Pouze hranice";
// Smooth the border in a way that it matches completely with its dual
extract.polish.syncBorder = "Synchronizovat hranici";
// topology of extracted mesh
extract.edgeLoop = "Slučka hran (bok)";
extract.edgeLoop.auto = "Automatická slučka hrany";
extract.edgeLoop.division = "Divize";
// The thickness of the extracted mesh (from the painted mask)
extract.thickness = "Tloušťka";
// Carve the mask into the surface
extract.carve = "Ryt";
// Extract a new mesh from the painted mask
extract = "Extrakt";
// Preview extract
extract.preview = "Náhled";
// Extract two new mesh from the painted mask and from the unmasked area
extract.split = "Rozděl";
// How should we close the topology of the extracted object
extract.action = "Uzavírací akce";
extract.action.help = "• Žádné
Jednoduše extrahujte část a nechte extrahovanou část otevřenou.

• Vyplnit
Otvor je vyplněn a vyhlazen.
Nepoužívejte tuto možnost pro rovné povrchy.

• Skořápka
Uzavřete extrahovaný tvar pomocí hodnoty tloušťky.

• Vrstva
Extrahujte rozdíl ve vrstvě (pouze podmenu vrstva).";
// Do not close the mesh (leave it open)
extract.action.none = "Žádné";
// Close the mesh with a hole-filling algorithm
extract.action.fill = "Vyplnit";
// Close the mesh by adding a thickness on the surface
extract.action.shell = "Kryt";
// Close the mesh by using the layer data as a difference thickness
extract.action.layer = "Vrstva";

// uv part of revolution surface
genus.main = "Hlavní";
genus.hole = "Díra";
genus.bottom = "Dno";
genus.top = "Vrchol";

// History, list of undo/redo
history = "Historie";
// First "undo" state
history.root = "Kořen";
history.undoConfirm = "Potvrzujete, že chcete zrušit všechny tyto operace?";
history.undoWarning = "Pokud provedete úpravu poté, můžete přijít o mnoho změn.";
// Settings concerning the history stack of undo/redo
history.stack = "Stapel";
// Actions to include in the undo/redo stack
history.include = "Zahrnout akce";
// include lighting editing in the undo/redo
history.includeLights = "Světla";
history.includeLights.help = "Pokud je tato možnost zakázána, pohyb světel pomocí Gizmo se stále započítává, protože to může mít vliv na další objekty v hierarchii scény.";
// include postProcess editing in the undo/redo
history.includePostProcess = "PostProcess";
// include shading parameters (MatCap & HDRIs) editing in the undo/redo
history.includeShading = "MatCaps & HDRIs";
// Can limit the stack of undo/redo size
history.limitSize = "Limit historie";
history.limitSize.help = "Maximální velikost historie. Historie bude aktualizována při dalším zaznamenaném úkonu.";
// Limit the number of undo in the history stack
history.limitStack = "Limit zásobníku";
history.limitStack.help = "Maximální počet operací, které aplikace může uchovat. Historie bude aktualizována při dalším zaznamenaném úkonu.";
// Value where you define how many operations you can undo before it displays a warning
history.rangeProtect = "Maximální počet vrácených akcí";
history.rangeProtect.help = "Pokud zajdete daleko do historie, objeví se dialog s potvrzením před vrácením mnoha operací.";
// When enabled, each time the user undo an operation it will undo the camera position as well
history.restoreCamera = "Obnovit kameru";
history.restoreCamera.help = "Povolte tuto možnost pro obnovení uloženého pohledu kamery při zpět/vpřed akci.";
// Undo
history.undo = "Zpět";
// Redo
history.redo = "Vpřed";
// Shown during undo
history.state.undo = "Zpět: $0";
// Shown during redo
history.state.redo = "Vpřed: $0";
// Shown during undo/redo
history.state.symmetrySplit = "Rozdělení symetrie";
// Shown during undo/redo
history.state.voxelRemesh = "Voxel remesh";
// Shown during undo/redo
history.state.surfaceRemesh = "Povrchový remesh";
// Shown during undo/redo
history.state.multiresLevel = "Změna rozlišení";

// Debugging/Inspect object material (view channel separately color, roughness, normal, uv, etc)
inspect = "Inspektor";
// Inspector but SHORT
inspect.short = "Inspect";
// Display the material channel on the background
inspect.onBackground = "Na pozadí";
// Display the material channel on the mesh
inspect.onMesh = "Na síti";
// Show UV seams
inspect.seams = "Švy";

// Interface customization
interface = "Rozhraní";

// UI customization: one item row will stands on one line (synonym: Inlined)
interface.compact = "UI: Kompaktní";

// UI customization: each row of the list will be bigger
interface.expandList = "UI: Rozšířit seznam";
// UI customization: each row of the list will be bigger
interface.expandList.help = "Jen volba UI pro jednodušší správu seznamu.";

// Add shortcuts buttons to the bottom of the screen
interface.shortcut.bottom = "Přidat zkratky (spodní část)...";
// Floating window
interface.shortcut.float = "Přidat zkratky (okno)...";

// Interface option (main base color)
interface.colorBase = "Základní barva";
// Interface option (accent widget color)
interface.colorSelect = "Barevný widget";
// Interface option (if the menus are transparent or opaque)
interface.panelTransparent = "Průhledný panel";
// Interface option (panel blurriness, if the menus are transparent)
interface.blurFactor = "Intenzita rozostření";
// Interface option (color of panels, if the menus are transparent)
interface.colorBaseTransparent = "Barva panelu";

// Interface color style
interface.preset.title = "Přednastavení";

// Reset interface settings
interface.resetAll = "Resetovat styl";
interface.resetAll.confirm = "Resetovat nastavení rozhraní?";
// help popup when hovering
interface.hoverHelp = "Vyskakovací okno nápovědy při přejíždění kurzorem";
// Interface option (main base color)
interface.iconSupport = "Tlačítko vysokého kontrastu";
interface.iconSupport.help = "Alternativní styl pro tlačítka, který je činí viditelnějšími při aktivaci.

 Při nastavení na automatiku Nomad použije tento režim, když je kontrast barev UI mezi aktivními a neaktivními nízký.";
// Interface customization
interface.flipTop = "Zrcadlit horní panel";
// Interface customization
interface.flipBottom = "Zrcadlit dolní panel";
// Interface customization
interface.flipMiddle = "Zrcadlit boční panely";
// list of tools
interface.toolbox = "Nástroje";
// hide toolbox by default
interface.toolbox.hide = "Skryto";
// Interface customization (the toolbox is a grid, we can adjust the column count)
interface.toolbox.columns = "Sloupce";
// Interface customization (the toolbox is a grid, we can adjust the column count)
interface.toolbox.rows = "Řádky";
// Reset the tool's order in the toolbox
interface.toolbox.resetOrder = "Resetovat pořadí";
// Colored text and icon
interface.toolbox.color = "Barevné";
// Scale the interface
interface.scale = "Celková škála";
// Spacing between widgets
interface.cursorStep = "Vertikální rozestupy";
// Width of the interface panels
interface.panelWidth = "Šířka panelu";
// Size of fonts
interface.fontScale = "Škála písma";
// Inset
interface.inset.title = "Posuny okrajů";
interface.inset.title.help = "Tyto hodnoty můžete měnit pouze v případě, že máte problémy s interakcí s tlačítky na okrajích obrazovky.

Pokud je posuvník deaktivován, Nomad použije hodnoty bezpečných oblastí vrácené samotným zařízením.";

// (see Glossary for Layer)
layer = "Vrstva";
layers.syncTransform = "Synchronizace transformace";
layers.syncTransform.help = "Pokud je povoleno, všechny nevybrané vrstvy budou upraveny podle rotace, měřítka a zkosení transformace.

Tuto volbu deaktivujte, pokud mají být ostatní vrstvy používány bez nové transformace, kterou aplikujete.

Při nastavení na auto budou upraveny pouze viditelné vrstvy.";
// (see Glossary for Layer)
layers.lock = "Zachovat detaily horních vrstev";
// (see Glossary for Layer)
layers.lock.yes = "Uzamknout horní vrstvy?";
// (see Glossary for Layer)
layers.lock.warning = "Během modelování bude deformace pocházející z horních vrstev ignorována.

Detaily těchto vrstev však budou stále viditelné.

Tato volba funguje pouze v případě, že horní vrstvy mají relativně malé detaily.";
// (see Glossary for Layer)
layers.addLayer = "Přidat vrstvu";
// (see Glossary for Layer)
layer.factors = "Faktory kanálu";
// (see Glossary for Layer)
layer.factor = "Faktor";
// (see Glossary for Layer)
layer.offset = "Offset";
// Layer blend mode
layer.blendMode = "Režim vrstvy";
// (see Glossary for Layer)
layer.base = "Základ";
layer.base.nothing = "Nic k extrahování!";
layer.base.background = "Podkladový materiál";
layer.base.background.help = "Pokud je aktivní, budou extrahovány pouze hodnoty materiálů, které se liší od podkladového materiálu.";
// (see Glossary for Layer)
layers = "Vrstvy";
layers.title = "Vrstvy";
// (see Glossary for Layer)
layers.title.help = "Vrstvy mohou zaznamenávat polohové posuny a malby, což může být užitečné pro nelinární pracovní postup.
Například experimentováním s různými výrazy obličeje bez spoléhání na historii pro zrušení změn.

Pro data malby jsou vrstvy tříděny shora dolů; takže horní vrstvy skryjí ty spodní.

Část vrstvy můžete vymazat pomocí nástroje `DelLayer`.";
layers.primitive = "Vrstvy nejsou dostupné pro primitiva.";
// When there is no layer selected (see Glossary for Layer)
layers.baseSelected = "Žádná";

light = "Světlo";
lights = "Světla";
// Intensity of light
light.intensity = "Intenzita";
// Color of light
light.color = "Barva";
// Kelvin (the temperature unit)
light.kelvin = "Kelvin";
// Temperature in Kelvin (Alternative way to compute the color of the light)
light.temperature = "Teplota";
// The attachment of a light defines how it will move when the user moves the camera
light.attachment = "Připojení";
// The light will stay still even if the user moves the camera
light.attachment.fixed = "Pevně";
// The light will move along the camera
light.attachment.camera = "Kamera";
light.attachment.help = "• Fixní
Orientace světla se nezmění.

• Kamera
Orientace světla závisí na pohledu kamery.";
// Light type (directional, spot, point)
light.type = "Typ";
// Directional light (synonym: sun light)
light.type.directional = "Směrové";
light.type.sun = "Slunce";
// Directional light (synonym: sun light)
light.type.environment = "Prostředí";
light.type.hdri = "HDRI";
// Spot light emits light in a single direction, restricted by a cone shape.
light.type.spot = "Bodové";
// Point light emits lights everywhere (synonym: omni, omnidirectional)
light.type.point = "Bodové";
// For directional light (angle jitter)
light.angle = "Úhel";
// For point/spot light (offset jitter)
light.size = "Velikost";
// Cone angle for spot angles
light.spot.angle = "Kuželový úhel";
// Softness of the spot light
light.spot.softness = "Měkkost";
// Position of the light
light.position = "Pozice";
// Enable or disable shadows for a light
light.shadow.cast = "Stín";
// Point light only works with "screenspace" shadow type (not "shadow map")
light.shadow.pointTip = "Bodové světlo podporuje pouze stíny ve zkratce obrazovky.";
light.shadow.type = "Typ stínu";
// https://en.wikipedia.org/wiki/Shadow_mapping
light.shadow.type.shadowMap = "Stínová mapa";
// Shadows computed with only the information visible on screen
light.shadow.type.screenspace = "Oblast obrazovky";
light.shadow.type.screenspace.help = "Experimentální funkce, může být odstraněna v budoucím vydání.

Tato možnost je určena pro použití s funkcí měkkosti stínu.";
// Adjustment to fix artefacts
light.shadow.bias = "Shledání";
// How blurry the shadow is
light.shadow.softness = "Měkkost";
// Contact shadows are more precise shadows on small distance (synonym: cavity shadows?)
light.contact = "Kontaktní";
light.contact.help = "Pokud je vybrána automatická volba, bude mít kontaktní stín pouze nejdominantnější světlo.";
// Thickness threshold for screen-space shadows (synonym: threshold, bias)
light.shadow.tolerance = "Tolerance";
// Activated the light
light.visible = "Zobrazit";
// Move the light in front of the camera (but keeps its inner orientation)
light.resetPosition = "Přeumístění";

// Object's material
material = "Materiál";
// See glossary
material.pbrRoughnessMetalness.warning = "Drsnost a kovost vyžadují režim osvětlení PBR.";
// See glossary
material.pbrReflectance.warning = "Odrazivost vyžaduje režim osvětlení PBR.";
// See glossary
material.pbrRefraction.warning = "Refrakce vyžaduje režim osvětlení PBR.";
// See glossary
material.pbrSubsurface.warning = "Podpovrchová distribuce vyžaduje režim osvětlení PBR.";
// Value that says how much light will change direction when hitting the surface
material.ior = "Index lomu";
// an object-level value that overrides the roughness interior/surface of the mesh
material.paintingOverride = "Přepsat drsnost";
// The roughness in the inside is turbidity
material.paintingOverride.help = "Na povrchu a uvnitř působí dvě drsnosti.

Existuje však pouze jedna malovatelná drsnost, takže obě drsnosti mají stejné hodnoty.";
// Glossiness is simply the opposite of roughness
material.refraction.surface = "Povrch";
// Synonym: turbidity
material.refraction.interior = "Interiér";
// Set the roughness of the object with a value of 0
material.paintGlossy = "Lesklý nátěr";
material.paintGlossy.help = "Malování objektu s drsností a kovovostí 0, což umožňuje ostrý lom.

To odpovídá použití funkce malování vše s deaktivovanou barvou v malovacím menu.";
// Simulate the light being absorbed when it travels through the volume.
material.absorptionEnable = "Absorpce";
material.absorptionEnable.help = "Simulujte absorpci světla, když prochází objemem.

Tenké části budou jasnější, protože umožní průchod více světla, zatímco silné oblasti budou tmavší.

Efekt silně závisí na tvaru objektu, použije se pouze přibližný odhad tloušťky objektu.";
material.absorptionFactor = "Faktor";
// Depth means how far the light can travel under the surface
material.subsurfaceDepth = "Hloubka";
// Enable translucency (same as subsurface but only affect lights that enter a solid and escape from the other side)
material.translucency = "Průsvitnost";
material.translucency.help = "K zobrazení průsvitnosti potřebujete světlo, které vrhá stíny.";
// Opacity factor, the opposite of transparency (synonym: Alpha)
material.opacity = "Neprůhlednost";
// Fully opaque material
material.type.opaque = "Neprůhledný";
material.type.opaque.help = "Toto je výchozí typ materiálu.

 Na malované vrcholy alpha, textury neprůhlednosti nebo alpha kanál barevného kanálu se přesto pohlíží pomocí přerušování.

 Ignorovat se bude pouze hlavní posuvník neprůhlednosti.";
// Fully opaque material
material.type.shadowCatcher = "Stínový zachytávač";
material.type.shadowCatcher.help = "Způsobí, že objekt je zcela průhledný, kromě stínů, které vrhají světla.

 Tento režim se obvykle používá na rovinné geometrii.";
material.type.shadowCatcher.warning = "Ve vaší scéně nejsou žádná světla se stíny, Shadow Caster bude neaktivní.

Pokud je stínochytač plně kovový, může stínochytač odrážet scénu, pokud je aktivován Post Process SSR (Reflexe).";
// See glossary
material.type.subsurface = "Podpovrchová";
material.type.subsurface.help = "Pro dosažení nejlepšího výsledku můžete přejít na režim stínování PBR a použít alespoň jedno směrové světlo, ideálně s tlumeným prostředím.";
// Transparency mode, alpha blendingd
material.type.blending = "Míchání";
material.type.blending.help = "Nastavením hodnoty neprůhlednosti dosaďte objekt poloprůhledným.

Všimněte si, že kvůli omezením v reálném čase se mohou objevit viditelné artefakty, pokud má objekt složitý tvar.";
// Transparency mode
material.type.additive = "Přídavné";
material.type.additive.help = "Nastavením hodnoty neprůhlednosti dosaďte objekt poloprůhledným.

Tato metoda má méně artefaktů než metoda Míchání, ale objekt bude jasnější.";
// Transparency mode based on dithering
// https://en.wikipedia.org/wiki/Dither
material.type.dithering = "Zbarvení";
material.type.dithering.help = "Nastavením hodnoty neprůhlednosti dosaďte objekt poloprůhledným odstraněním některých pixelů náhodně.";
// Simulate glass-like material
material.type.refraction = "Lom světla";
material.type.refraction.help = "Tento režim může být použit k simulaci skla.

Vzhledem k omezením v reálném čase je samo-lom nebo vícevrstvý lom omezený.";
material.castShadows = "Vrhání stínů";
material.receiveShadows = "Příjem stínů";
// Lights are ignored, the object will be displayed with color only
material.alwaysUnlit = "Vždy nezapálené";
// Inverse the side of the object triangles
// https://en.wikipedia.org/wiki/Back-face_culling
material.flipCulling = "Inverzní odstranění";
// How much light a surface will reflect (synonym: specular)
material.reflectance = "Odrazivost";
material.reflectance.help = "Ovládací množství odrazu, které materiál přijme pro nemetalické materiály.

Většinou by měla být použita výchozí hodnota (která odpovídá standardnímu 4% odraženému světlu při normálním úhlu).";
// Material preview in the viewport
material.preview = "Náhled materiálu ve viewportu";
material.preview.help = "Při úpravě materiálu se v náhledu na zvoleném objektu zobrazí ve viewportu.

Náhled se zobrazuje při interakci se slidery barvy, hrubosti, kovovosti, neprůhlednosti a intenzity.";
// Menu name
menu.files = "Soubory";
// Menu name
menu.scene = "Scéna";
// Menu name
menu.multires = "Multires";
// Menu name
menu.voxel = "Voxel";
// Menu name
menu.dynamic = "DynTopo";
// Menu name (Synonym: Misc, Other)
menu.topology = "Míšeniny";
// Menu name
menu.primitive = "Primitive";
// Menu name
menu.render = "Render";
// Menu name
menu.material = "Materiál";
// Menu name
menu.postprocess = "PostProcess";
// Menu name
menu.camera = "Kamera";
// Menu name
menu.background = "Pozadí";
// Menu name
menu.tool = "Nástroj";
// Menu name
menu.stroke = "Tah";
// Menu name
menu.alpha = "Alfa";
// Menu name
menu.filter = "Filtr";
// Menu name
menu.falloff = "Pád";
// Menu name
menu.paint = "Barva";
// Menu name
menu.symmetry = "Symetrie";
// Menu name
menu.operation = "Operace";
// Menu name (pencil pressure)
menu.pressure = "Tlak";
// Menu name
menu.gesture = "Gesto";
// Menu name
menu.layers = "Vrstvy";
// Menu name
menu.settings = "Nastavení";
// Menu name
menu.interface = "Rozhraní";
// Menu name
menu.bindings = "Vazby";
// Menu name
menu.history = "Historie";
// Menu name
menu.historySettings = "Nastavení";
// Menu name
menu.about = "O aplikaci";
// Menu name
menu.debug = "Ladění";

// Operation on the object (action)
mesh.holes = "Otvy";
// If the object has holes, the algorithm will close them
mesh.holes.close = "Zavřít otvy";
// Says how dense (number of triangles) the algorithm will use in order to fill holes
mesh.holes.detail = "Detail";
// If the mesh has disconnected parts, it will be split/separated into objects
mesh.separate = "Oddělit";
// When converting the object to a triplanar primitive, some object features will be lost
mesh.triplanar.warning = "Vrstvy, malby a vícenásobné rozlišení se ztratí.";
// Resolution of the triplanar grid
mesh.triplanar.resolution = "Rozlišení";
// Make the triplanar a regular cube (all 3 dimension equal)
mesh.triplanar.cubic = "Přípustné kubické";
// Covnert an object to a triplanar primitive
mesh.triplanar.convert = "Převést";
// Static object means "static topology"
mesh.static = "Síť";
// See glossary
mesh.multires = "Multires";
// Dynamic topology
mesh.dynamic = "DynTopo";

// Disable this option to have per-tool material settings (instead of shared settings)
paint.useGlobal = "Globální materiál";
paint.useGlobal.help = "Je-li tato volba aktivována, vybraný materiál bude stejný jako u ostatních nástrojů.

Pouze se berou v úvahu nastavení drsnosti, kovovosti a barev.";
// The current tool will paint the object if this option is enabled
paint.usePainting = "Tahové malování";
// If true save the textures data into
paint.preset.embed = "Vložit textury";
paint.preset.embed.help = "Textury najdete ve složce Nomad textures/. Předvolby materiálu jsou ve složce Nomad materials/.

Když je tato možnost vypnutá, předvolba materiálu pouze odkazuje na textury uvnitř složky textures/.

Můžete zapnout tuto možnost pro vytvoření kopie textur uvnitř předvolby materiálu. To může být užitečné, pokud chcete sdílet texturovanou předvolbu, aniž byste poskytli související textury.";
paint.preset.embed.apply = "Použít na všechny materiály";
// Factor/Opacity of paint tool
paint.intensity = "Intenzita barvy";
// Apply the paint on the object
paint.paintAll = "Barva všeho";
paint.paintAll.help = "Aplikujte současný materiál na objekt.";
paint.paintAll.help.mask = "Zakrýtá oblast nebude ovlivněna.";
paint.paintAll.help.hide = "Skrytá oblast nebude ovlivněna.";
paint.paintAll.help.opacity = "Použijte faktor malby nástrojem výše.";
paint.paintAll.help.layer = "Nepobarevná oblast vrstvy nebude ovlivněna.";
paint.strokePainting.title = "Malování";
// Brush stroke texture
paint.texture.warningEnable = "Tahové malování musí být povoleno, aby bylo možné použít texturovou projekci (zaškrtávací políčko nahoře)!";
paint.texture.warningIgnored = "Současný nástroj nemůže používat textury!";
// use stencil mode
paint.stencil = "Šablona";
// Inherit stroke falloff option for the painting
paint.tool.help = "Použijte nástroj alpha, úbytek a náhodný generátor k modulaci intenzity tahu malby.

Tyto možnosti jsou ignorovány pro funkci malování všeho, ale alpha je zohledněna pro triplanární variantu.";
// when the user choose a new item name (through iOS/Android virtual keyboard)
input.name = "Nové jméno";
// when the user choose a new number value (through iOS/Android virtual keyboard)
input.number = "Nová hodnota";
// when the user choose a new color (through iOS/Android virtual keyboard)
input.hexcolor = "Nová barva (hex formát)";

// Post process effect
postprocess = "Post Process";
// Denoise
postprocess.denoise = "Odzvučovač";
postprocess.denoise.help = "Po akumulování všech snímků aplikujte odzvučovací průchod.";
postprocess.denoise.warning = "Toto je nákladná operace, tento efekt aktivujte pouze, pokud je obraz hlučný.";
// Quality vs performance
postprocess.quality = "Kvalita";
postprocess.quality.help = "Aktivujte tyto možnosti pro zvýšení kvality na úkor výkonu.";
// More samples means better quality but slower performance
postprocess.maxSamples = "Max vzorků";
// Full resolution (1:1 resolution) instead of half resolution
postprocess.fullResolution = "Plné rozlišení";
// Number of frames that we accumulate (higher value means better quality)
postprocess.accumulateCount = "Maximální vzorkování rámců";
postprocess.accumulateCount.help = "Maximální počet snímků k nahromadění před zastavením renderování.

Po zastavení renderování Nomad nic nedělá, čímž šetří životnost baterie.

Mnoho renderovacích funkcí těží z hromadění snímků, zejména:
• Měkké stíny
• Globální osvětlení
• Odrazy (SSR)
• Okolní uzavření
• Podsložka
• Hloubka ostrosti

Vysoký počet snímků je hlavně zapotřebí pro měkké stíny a globální osvětlení.
Nomad může zastavit renderování dříve, pokud jsou výše zmíněné funkce vypnuty.";
// The value is a ratio (0.5 means half resolution 2 means twice the resolution)
postprocess.renderRatio = "Rozlišení vykreslování";
postprocess.renderRatio.warning = "Převáženo účinkem Pixel Art.";
postprocess.renderRatio.help = "Tato volba výrazně ovlivňuje výkon.
Je doporučeno držet hodnotu pod x1.25.

Tato volba není uložena v nastavení.";
// Temporal Anti-Aliasing (no need to translate "TAA")
postprocess.taa = "Anti-aliasing (TAA)";
postprocess.taa.help = "Snižuje blikání při pohybu kamery.";
// Ditherhing pixel
postprocess.dithering = "Dithering";
postprocess.dithering.help = "Dithering pixelů pro snížení artefaktů fiskace.";
// Screen-Space Reflection (no need to translate "SSR")
postprocess.ssr = "Odraz (SSR)";
postprocess.ssr.warning = "SSR vyžaduje režim stínování PBR.";
// Screen-Space Global Illumination (no need to translate "SSGI")
postprocess.ssgi = "Globální osvětlení (SSGI)";
// Thickness threshold for ssgi tracing algorithm (synonym: threshold, bias)
postprocess.ssgi.tolerance = "Tolerance";
postprocess.ssgi.warning = "SSGI vyžaduje režim stínování PBR.";
// Screen-space ambient occlusion (SSAO)
// https://en.wikipedia.org/wiki/Ambient_occlusion
postprocess.ssao = "Ambientní okluze";
// How far the effect spreads
postprocess.ssao.radius = "Velikost";
// How strong the effect is
postprocess.ssao.factor = "Síla";
// Adjustment to fix artefacts
postprocess.ssao.bias = "Zkreslení zakřivení";
postprocess.ssao.bias.help = "Jak citlivý je efekt v závislosti na zakřivení povrchu.";
// Depth of Field (bokeh)
// https://en.wikipedia.org/wiki/Depth_of_field
postprocess.dof = "Hloubka ostrosti";
// The blur factor behind the focused point
postprocess.dof.blurFar = "Vzdálené rozmazání";
// The blur factor in front of the focused point
postprocess.dof.blurNear = "Blízké rozmazání";
postprocess.dof.focusTip = "Klepnutím na objekt změníte ohniskový bod.";
// Bloom (light bleeding)
// https://en.wikipedia.org/wiki/Bloom_(shader_effect)
postprocess.bloom = "Bloom";
// Intensity of the effect
postprocess.bloom.intensity = "Intenzita";
// How far the effect spreads
postprocess.bloom.radius = "Poloměr";
postprocess.bloom.radius.help = "Jak rozsáhlý je efekt bloom.";
// Luminosity threshold (below this value, no bloom is generated)
postprocess.bloom.threshold = "Prahová hodnota";
postprocess.bloom.threshold.help = "Luminositní práh pro stanovení, zda pixel bude vyzařovat bloom nebo ne.
Pokud je hodnota 0, vše získá efekt bloom.";
// https://en.wikipedia.org/wiki/Tone_mapping
postprocess.tone = "Mapování tónů";
postprocess.tone.exposure = "Expozice";
postprocess.tone.contrast = "Kontrast";
postprocess.tone.saturation = "Saturace";
postprocess.tone.hue = "Odstín";
// No tonemapping operator is used
postprocess.tone.mapping.none = "Žádný";
// A neutral tonemapping is used
postprocess.tone.mapping.neutral = "Neutrální";
// Color curves
postprocess.curve = "Obarvování";
// Curve for pixel luminance
postprocess.curve.luminance = "Hlavní";
postprocess.curve.red = "Červená";
postprocess.curve.green = "Zelená";
postprocess.curve.blue = "Modrá";
// Reset color grading curves
postprocess.curve.resetAll = "Resetovat vše";
// https://en.wikipedia.org/wiki/Chromatic_aberration
postprocess.chromatic = "Chromatická aberace";
postprocess.chromatic.factor = "Síla";
// Darking on the edges
postprocess.vignette = "Vinětace";
// How far the effect spreads
postprocess.vignette.size = "Velikost";
// How sharp the edge of the effect is
postprocess.vignette.hardness = "Tvrdost";
// Unblur the image (sharpening)
// https://en.wikipedia.org/wiki/Unsharp_masking
postprocess.sharpness = "Ostrost";
postprocess.sharpness.factor = "Síla";
// Filmic Grain
// https://en.wikipedia.org/wiki/Film_grain
postprocess.grain = "Zrno";
postprocess.grain.factor = "Síla";
// Accentuate the edges of the model
postprocess.curvature = "Zakřivení";
// main strength of curvatre
postprocess.curvature.factor = "Faktor";
// Color/Strength of concave curvature
postprocess.curvature.cavity = "Dutina";
// Color/Strength of convex curvature
postprocess.curvature.bump = "Hrbol";
// https://en.wikipedia.org/wiki/Pixel_art
postprocess.pixelArt = "Pixel Art";
// Override frame accumulation feature
postprocess.pixelArt.allowAccumulate = "Povolit vzorkování rámce";
// Simulate scanline rendering (horizontal line)
postprocess.scanline = "Rozprostření skenování";
postprocess.scanline.factor = "Faktor";
// Spacing between lines
postprocess.scanline.spacing = "Rozestupy";

// Geometry Primitive (box, sphere, cylinder, etc)
primitive = "Primitivní";
primitive.box = "Krabice";
primitive.sphereCube = "Kvádrová koule";
primitive.sphereUV = "UV Koule";
primitive.icosahedron = "Ikosahedron";
primitive.cylinder = "Válec";
primitive.cone = "Kužel";
primitive.torus = "Torus";
primitive.lathe = "Soustruh";
primitive.tube = "Trubka";
primitive.plane = "Rovina";
primitive.triplanar = "Trojpásmový";
primitive.needValidate = "Primitiv by měl být ověřen!";

// If enabled, we can edit primitive inside the viewport
primitive.edit = "Upravit";
primitive.edit.help = "Povolit 3D úpravy ve vizualizaci.

Tuto funkci můžete zakázat, pokud chcete pracovat s Gizmem nebo nástrojem pro transformaci bez úprav primitivy.";

// Primitive configuration
primitive.mainConfig = "Parametr";
// Interface section where we change the topology (number of triangles/polygons)
primitive.topology = "Topologie";
// Interface section where we change the geometry (shape of the primitive)
primitive.geometry = "Geometrie";

// Validating the primitive (then it can be sculpted)
primitive.validate = "Ověřit";
// Maximum number of faces of the primitives
primitive.maxFaces = "Maximální počet stran";
primitive.maxFaces.help = "Maximální počet stran, které může mít primitiva.

Tento limit je aktivní pouze, když primitiv není ověřen, po ověření limit zmizí.";
// Synonym: Flat subdivision
primitive.linear = "Lineární pododdíl";
// Post as "subdivision that occurs after the primitive computation"
primitive.subdivision = "Post-pododdíl";

// Radius (of a sphere, torus, etc)
primitive.radius = "Poloměr";
// Make sure the two end-point of a primitive (cylinder, tube, etc) have the same size
primitive.radius.sync = "Stejný poloměr";
primitive.radius.start = "Počáteční poloměr";
primitive.radius.end = "Koncový poloměr";
// Size (of cube x dimension)
primitive.size = "Velikost";
primitive.sizeX = "Velikost X";
primitive.sizeY = "Velikost Y";
primitive.sizeZ = "Velikost Z";
// Division only impacts the topology (synonym: resolution)
primitive.division = "Dělení";
primitive.divisionX = "Dělení X";
primitive.divisionY = "Dělení Y";
primitive.divisionZ = "Dělení Z";
// Angle of torus, etc
primitive.angleX = "Úhel X";
primitive.angleY = "Úhel Y";
primitive.angleZ = "Úhel Z";
// It means we try to keep regular sized quad (square) instead of highly distorted rectangule
primitive.constantDensity = "Konstantní hustota";
// Make sure the shape is perfectly spherical
primitive.projectOnSphere = "Projekce na kouli";
primitive.projectOnSphere.help = "Zachytí body na dokonalé kouli.";

// triplanar
primitive.triplanar.title = "Triplanar";
primitive.triplanar.title.help = "Triplanar používá informace z masky ze tří rovin k vyplnění mřížky voxelu, která se poté polybuje.

Pokud změníte rozdělení nebo velikost, informace o malbě se resetují (hladkost zůstane zachována).

Pravděpodobně byste měli zakázat symetrii, protože nemusí fungovat podle vašich očekávání.

V panelu s maskou můžete použít možnost `Topologicky spojené` k malování roviny, která ovlivňuje ostatní roviny.";
// Make sure the box is a regular cube (same 3 dimension)
primitive.triplanar.sameSize = "Stejná velikost (krychle)";
primitive.triplanar.polish = "Hladkost";
// Mask refers to the painted mask on the triplanar planes
primitive.triplanar.resetMask = "Resetovat masku";
// One side of a cube (the back plane)
primitive.isolate.back = "Zadní";
// One side of a cube (the right plane)
primitive.isolate.right = "Pravá";
// One side of a cube (the bottom plane)
primitive.isolate.bottom = "Dolní";
// Plane
primitive.planeSameSize = "Stejná velikost (čtverec)";
// Make the plane a disk/ellipse instead of a rectangle
primitive.planeDisk = "Disk";
// Box
primitive.boxRegular = "Stejná velikost (krychle)";
// Torus
primitive.torus.radiusOuter = "Vnější rádius";
primitive.torus.radiusInner = "Vnitřní rádius";
primitive.torus.angle = "Úhel";
primitive.torus.angleOffset = "Posun úhlu";
// Cylinder
primitive.cylinder.height = "Výška";
// Cone
primitive.cone.radius = "Poloměr";
primitive.cone.height = "Výška";
// Hole sub menu (cylinder, tube, etc)
primitive.hole = "Díra";
// Make a hole in the primitive to make it hollow
primitive.hasHole = "Má díru";
// Curve profile (synonym: profile, curve)
primitive.profile = "Profil";
primitive.profile.viewport = "Zobrazit ve viewportu";
// If the revolution surface has caps (E.g: cylinder)
primitive.cap = "Víčko";

// Singular of Repeaters (Nodes that make many copies of its children (type of mirror/curve/array/radial))
repeater = "Opakovač";
// All the new items will be inserted inside the bound rather than outside
repeater.array.fitInside = "Vložit dovnitř";
// The object will follow the curve
repeater.curve.align = "Zarovnat";

// Import resource (Alpha, Textures, MatCaps, etc)
resource.import = "Importovat...";
// iOS Photos gallery
resource.import.ios.photos = "Fotky";
// iOS Files App
resource.import.ios.files = "Soubory";

scene.title = "Scéna";
scene.title.help = "Při použití tlačítek viditelnosti/výběru, přidržte a táhněte prstem k snadnějšímu výběru dalších objektů.

Také můžete dlouze stisknout tlačítka viditelnosti/výběru pro ovlivnění i podřízených.";
// The view will focus on the item when we click on it
scene.focus = "UI: Zaměřit na položku při dvojím klepnutí";
// Add new object on gizmo position
scene.addOnGizmo = "Na gizmo";
scene.addOnGizmo.help = "Posuňte uzel na pozici gizmo (pokud je vybrán nástroj gizmo)";
// Select the gizmo tool after adding a new object
scene.addSelectGizmo = "Vybrat gizmo";
scene.addSelectGizmo.help = "Vyberte nástroj gizmo při přidání nového uzlu";
// Icon size in pixel (min/max)
scene.iconSize = "Velikost ikony";
// Min size of icon
scene.iconSize.min = "Min";
// Max size of icon
scene.iconSize.max = "Max";
// display hierarchy lines (visibility helper)
scene.showHierarchy = "Hierarchické linie";
scene.showHierarchy.help = "Zobrazit linii mezi rodičem a jeho potomky ve viewportu.";
scene.showHierarchyNomadPivot = "Použij Nomad pivot";
scene.showHierarchyNomadPivot.help = "Nomad pivot je pivot používaný nástroji Transform a Gizmo.

Pokud je tato možnost zakázána, bude použita přirozená základní otočná plocha.
V některých případech může být tento základní pivot daleko od středu objektu!";
// The view will focus on the item when we click on it
scene.syncVisible = "Synchronizovat viditelnost";
scene.syncVisible.help = "Pokud je povoleno, použití viditelné ikony (oko) ovlivní všechny vybrané položky.";
// Merge 2 objects without modifying the geometry or the topology
scene.join = "Spojit";
// Group the selected object with a new created Empty Node as a parent
scene.group = "Skupina";
// Move the item outside its parent (synonym: ungroup)
scene.unparent = "Odstranit rodiče";
// Mirror node type, a node that make many copies of its children (mirror symmetry)
scene.mirror = "Zrcadlit";
// Curve node type, a node that make many copies of its children (along a curve)
scene.curve = "Křivka";
// Array node type, a node that make many copies of its children (grid repetition pattern)
scene.array = "Pole";
// Radial node type, a node that make many copies of its children (radial symmetry)
scene.radial = "Radiální";
// Nodes that make many copies of its children (type of mirror/curve/array/radial)
scene.repeaters = "Opakovače";
scene.repeaters.help = "Opakovače, které vytvářejí instance jakýchkoli geometrií pod nimi ve struktuře scény.";
// Validate button
scene.validateGroup = "Ověřit";
// Keep instances in the scene
scene.validateGroup.keepInstances = "Zachovat instance";
// If we should join children
scene.validateGroup.joinChildren = "Spojit děti";
// Merge/weld 2 objects by recomputing all the topology and creating a new object
scene.mergeVoxel = "Slučit voxel";
scene.voxelResolution = "Rozlišení";
// The hidden objects will be "substracted" (the object will carve the other object)
scene.subtractionTip = "Odečítání: Skryté objekty";
// If all the objects are hidden, only the parts where they intersect (collide) will be kep
scene.intersectionTip = "Průnik: Všechny objekty skryty";

// Need at least to select one object
scene.noneButNeedAtLeastOne = "Žádný vybraný objekt, prosím vyberte alespoň jeden objekt.";
// Need to select one object only
scene.noneButNeedOne = "Žádný vybraný objekt, prosím vyberte jeden objekt.";
// Need to select one object only
scene.onlyOneObject = "Je vybráno více objektů, vyberte prosím pouze jeden objekt.";
// Boolean operation
scene.boolean = "Booleovský";
scene.boolean.help = "Slučte, odečtěte nebo protě se spojte objekty pomocí booleovské operace. 

Operace může selhat, pokud některé objekty nejsou uzavřené či nejsou vodotěsné.

Pokud booleovská operace selže, můžete vždy použít voxelový remesher na problematický objekt, aby se zajistilo, že je vodotěsný.";
// Weld intersection
scene.boolean.mergeIntersection = "Svařit průnik";

// General scene display settings
settings.display.title = "Nastavení zobrazení";
// Wireframe (show triangles and quad edges)
settings.wireframe = "Drátový model";
// Display the material texture
settings.debugChannel = "Zobrazit texturu";
// Display the material texture in the background
settings.debugChannel.onBackground = "Na pozadí";
// Display the material texture on the mesh
settings.debugChannel.onMesh = "Na Mříži";
// If the object is opened (a simple plane for example), two sided means we'll be able to see if from the two sides of the planes
settings.twoSided = "Oboustranné";
settings.twoSided.help = "Plošky budou viditelné z obou stran.";
// If we colorize the inverted side of faces
settings.backface.color = "Barva zadní strany";
// Color of the inverted side of faces
settings.backface.colored = "Zadní strana barevná";
// Outline (contour highlight around the selected object)
settings.outline = "Obrys";
// Outline (contour highlight around the selected object)
settings.outline.help = "Vybrané objekty budou obrysové.";
settings.outline.thickness = "Tloušťka";
// Navigation cube (easy to snap/align the view)
settings.snapCube = "Napnout kostku";
// Move the navigation cube to the bottom of the screen
settings.snapCube.bottom = "Dole";
// Move the navigation cube on the left side of the screen
settings.snapCube.left = "Vlevo";
// Flip the camera (rotate 180° to see the other side)
settings.snapCube.flip = "Překlopit 180°";
settings.snapCube.flip.help = "Překlopte pohled, pokud je již spjatý.";
// Alignment (can be auto/on/off)
settings.snapCube.align = "Omezit zarovnání";
settings.snapCube.align.help = "Zarovnejte pohledy na světové osy. Je-li povoleno, je možné pouze 6 pohledů.

Při automatickém omezení bude omezení platit pouze při režimu oběžné dráhy.";
// Stats (information logs about the scene displayed on screen)
settings.stats = "Statistiky";
settings.stats.right = "Vpravo";
settings.stats.all = "Zobrazit celou scénu";
// Grid
settings.grid = "Mřížka";
// Cursor
settings.cursor.title = "Kurzor";
settings.cursor.whileSculpting = "Zobrazit kruh při sochařství";
// A small indicator dot
settings.cursor.showDot = "Zobrazit malou tečku";
settings.cursor.showDot.help = "Tečka se může objevit jako výchozí bod kamery nebo při sochařství.";
settings.cursor.showRope = "Zobrazit stabilizátor lana";
// indicator
settings.indicator.title = "Indikátor";
settings.indicator.title.help = "Zobrazit vizuální indikátor (návody, záznam obrazovky atd.).";
settings.indicator.size = "Velikost";
// Highlight (the object glows when we select it)
settings.highlight.selection = "Zvýraznění výběru";
// Highlight settings
settings.highlight = "Zvýraznit";
settings.highlight.duration = "Doba trvání";
// Mesh that are not selected will be dark
settings.darkenUnselected = "Ztmavit nevybrané objekty";
// https://en.wikipedia.org/wiki/Shading
settings.smoothShading = "Hladké odstíny";
// Experimental feature
settings.partialDraw = "Částečné kreslení";
settings.partialDraw.help = "Experimentální funkce!

Používejte ji, pokud tvoříte relativně malou část modelu s velkým počtem polygóny.

Měla by působit tak, že sochání bude plynulejší, ale nesmíte povolit režim drátového modelu!

Také by mohlo dojít ke vzniku vizuálních artefaktů během tahů štětcem.";
settings.partialDraw.warning = "Nezapomeňte tuto možnost vypnout, pokud jsou vizuální artefakty příliš rušivé!";
// Disable this option to force a white uniform paint instead of showing the objects painting
settings.showPainting = "Zobrazit malbu";
// Show and use the masking on the mesh
settings.showMasking = "Zobrazit masku";
// Disable this option to force show the hidden faces
settings.showDiscard = "Použít Skrytí";
// Show icon on the canvas
settings.icon = "Ikona";
// Show icons on the canvas
settings.icons = "Ikony";
// Tooltip
settings.icons.help = "Zobrazit ikonu na plátně, aby bylo možné je přímo vybrat a upravit.";
// Hole filling settings
settings.hole = "Vyplňování děr";
// Allow the hole filling algorithm to handle non-manifold (non regular topology)
settings.hole.nonManifold = "Vyplňování ne-manifoldních";
settings.hole.nonManifold.help = "Pokuste se vyplnit síťovou díru.
Tato volba není uložena v nastaveních.";
// Maximum number of vertices (points)
settings.multires.maxVertices = "Maximální počet vrcholů";
settings.multires.maxVertices.help = "Nomad nekontroluje paměť před dělením, vysoký počet polygónů může snadno způsobit zhroucení.";
settings.multires.lowResVertices = "Práh nízkého rozlišení";
settings.multires.lowResVertices.help = "Nižší rozlišení sítě může být zobrazeno při pohybu kamerou.

Můžete tuto hodnotu zvýšit, pokud chcete zobrazit vyšší rozlišení sítě.";

// The main rendering mode
shading = "Stínování";
// Main rendering mode (PBR stands for Physically Based Rendering)
shading.pbr = "Osvětlené (PBR)";
shading.pbr.help = "V tomto režimu můžete přidat světla (s stíny), spolu s HDR prostředím.

Můžete také malovat míru kovovosti a drsnosti, což umožňuje lepší kontrolu nad vzhledem vašeho materiálu.";
// Fast rendering mode for sculpting purpose
shading.matcap = "MatCap";
shading.matcap.help = "Znamená zachycení materiálu (MATerial CAPture), MatCap se stará o osvětlení a materiálové informace v jediném obrázku.

Toto je rychlý režim renderování, především vhodný pro hrubé sochařství.";
// Unlit rendering mode, it simply displays a solid/flat color
shading.unlit = "Neosvětlené";
shading.unlit.help = "Režim stínování jednobarevné, bez osvětlení.";
// Helper rendering mode that display solid colors
shading.object = "ID objektu";
shading.object.help = "Nearénovaný režim s náhodně přidělenou barvou pro každý objekt.

Toto je většinou užitečné, když máte ve scéně více objektů.";
// Helper rendering mode that display solid colors
shading.instance = "ID instance";
shading.instance.help = "Stejné jako ID objektu, ale instance budou mít stejnou barvu.";
// Helper rendering mode that display solid colors
shading.material = "Materiál ID";
shading.material.help = "Zobrazit plnou barvu pro každý příklad materiálu.";
// Randomize colors
shading.id.randomize = "Náhodné ID";
shading.textures = "Použít textury";
shading.textures.help = "V současné době nemůžete v programu Nomad vytvářet ani upravovat textury.

Ale pokud importujete soubor, který obsahuje textury, měl by to fungovat.

• Podporované textury:
Průsvitnost: Podsvícený, MatCap, Nepodsvícený
Normál: Podsvícený, MatCap
Barva: Podsvícený, Nepodsvícený
Emise: Podsvícený
Drsnost: Podsvícený
Metalnost: Podsvícený";
// Lights
shading.lights = "Světla";
shading.lights.addLight = "Přidat světlo";
shading.lights.warning = "Světla vyžadují režim PBR stínování.";
// Environment based lighting (synonym: HDRI)
shading.environment = "Prostředí";
shading.environment.import = "Importovat HDR";
shading.environment.exposure = "Expozice";
shading.environment.backgroundBlur = "Rozostření (pozadí)";
shading.environment.rotation = "Rotace";
shading.environment.rotation.help = "Prostředí můžete otočit přetažením 3 prstů vodorovně na zobrazení.";
// The environment will always be aligned with the camera (so that the lighting is consistent)
shading.environment.attachedToCamera = "Připojeno ke kameře";
shading.environment.attachedToCamera.help = "Připojte prostředí ke kameře.

Tím přinutíte osvětlení být konzistentní, což může být užitečné při sochařství.";
shading.matcap.rotation = "Rotace";
shading.matcap.rotation.help = "MatCap můžete otočit přetažením 3 prstů vodorovně na zobrazení.";
shading.matcap.global = "Použít globální MatCap";
shading.matcap.global.help = "Zrušte zaškrtnutí této možnosti, pokud chcete použít jiný MatCap pro tuto konkrétní síť.";

// bottom shortcut buttons (should be SHORT)
shortcut.maskVisible = "Maska";
shortcut.solo = "Sólo";
shortcut.xray = "Rentgen";
shortcut.voxelRemesh = "Voxel";
shortcut.wireframe = "Drát";
shortcut.cameraReset = "Obnovit";
shortcut.cameraSnap = "Snímek";
shortcut.lockSelection = "Zamknout";
shortcut.lockSelection.help = "Když je povoleno, nemůžete změnit výběr klepnutím na síť.";
shortcut.grid = "Mřížka";

// Memory taken by the scene
stat.ramScene = "Scéna";
// Vram = Video RAM (Video Memory, the memory of the graphic card)
stat.vramScene = "Vram Scéna";
// Vram = Video RAM (Video Memory, the memory of the graphic card)
stat.vramRender = "VRAM vykreslování";
// Vram = Video RAM (Video Memory, the memory of the graphic card)
stat.vramTextures = "VRAM textury";
// Memory taken by the undo/redo history
stat.ramHistory = "Historie";
// Memory taken by other stuffs
stat.ramOther = "Jiné";
// Memory used by the app (RAM, not storage!)
stat.usedMemory = "Použitá paměť";
// Memory available for the app (RAM, not storage!)
stat.freeMemory = "Volná paměť";
// RAM, not storage!
stat.ram = "RAM";
stat.used = "Použito: $0";
stat.free = "Volno: $0";
stat.faces = "Plány";
stat.triangles = "Trojúhelníky";
stat.vertices = "Vrcholky";
// quadrangular polygon (polygon with 4 sides)
stat.quads = "Čtyřúhelníky";
stat.vertex = "Vrchol";
stat.scene.face = "Plochy scény";
stat.scene.vertex = "Vrcholky scény";

// Brush stroke
stroke = "Tah";
// The brush radius is either screen-space (fixed size on the screen) or world-space (fixed size in the scene)
stroke.useWorldRadius = "Poloměr ve světovém prostoru";
// The settings is shared among every tools
stroke.useWorldRadius.help = "Toto je společné pro všechny nástroje.";
// Share the radius value among every tools.
stroke.useShareRadius = "Sdílený poloměr";
stroke.useShareRadius.help = "Sdílet hodnotu poloměru mezi všemi nástroji.";
// When doing a brush stroke, the spacing is the distance between 2 sculpt operations
stroke.spacing = "Mezera mezi tahy";
// Adjust the brush intensity to ensure consistent deformation depending on the stroke spacing.
stroke.spacing.adjust = "Upravit intenzitu mezery";
stroke.minSpacingAdjustIntensity.help = "Upravit intenzitu štětce pro zajištění konzistentní deformace v závislosti na rozestupu tahů.";
stroke.minSpacing.help = "Mezera mezi jednotlivými tahy, vzhledem k poloměru nástroje.

Nižší hodnota umožní hladší tah, ale výkon se zhorší.";
// Brush stroke smoothing
stroke.lazySmooth = "Vyhlazování tahu";
stroke.lazySmooth.help = "Průměrná poloha více ukazatelů pro dosažení hladšího tahu.

Při vysokých hodnotách bude tah zaostávat za ukazatelem, ale nakonec se vyrovná.";
// Make the brush stroke lags behind the pointer cursor
stroke.lazyRadius = "Stabilizátor lano";
stroke.lazyRadius.help = "Tahy budou zaostávat za ukazatelem podle určité vzdálenosti.

Toto lze použít k vykreslení hladkých linií.";
// It is not a per-tool settings
stroke.globalSettings = "Toto je globální nastavení";
// Start the brush stroke from the last sculpted position to ensure there is no discontinuity
stroke.snapRadius = "Poloměr přichycení";
stroke.snapRadius.help = "Přichyťte tah, když je ukazovátko blízko posledního nahraného tahu.

To může být užitečné při kreslení dlouhých, souvislých čar, při opakovaných pauzách.";
// offset between the cursor and the brush stroke (for fat finger on small screen)
stroke.sculptOffset = "Posun tahu";
stroke.sculptOffset.help = "Naneste stálý posun na tah.

Tato volba je tu pro pomoc při použití prstů na malém displeji, aby váš prst nezakrýval tah.";
stroke.accumulate = "Akumulovat tah";
stroke.accumulate.help = "Pokud je tato volba povolena, není omezeno, kolik hmoty můžete přidat/odebrat na jeden tah.";
// The tool can use DynTopo
stroke.useDynamic = "Povolit dynamickou topologii";
// Only sculpt the part that are linked topologically
stroke.connect = "Propojená topologie";
stroke.connect.help = "Tato možnost bude sochat pouze vrcholy, které jsou spojeny s vybraným povrchem.

To se běžně používá s nástrojem Pohyb, například pokud chcete exkluzivně přesunout část, která se sama protíná s jinou částí.";
stroke.connect.short = "Připojené";
// sculpt on hide or mask
stroke.protect = "Chránit oblast";
stroke.protect.hide.help = "Když je nastaveno na automatiku, skryté plochy se upraví, pokud je viditelný drátový model na skrytých plochách (viz menu drátového modelu).";
// Only sculpt the vertex that points toward the camera
stroke.culling = "Pouze přivrácené vrcholy";
stroke.culling.help = "Tato možnost ignoruje vrcholy, které směřují dozadu.

Může to být užitečné při malování části tenké geometrie bez ovlivnění druhé strany.

Funguje to i pro sochařství, ale můžete narazit na některé artefakty.";
// Infinite depth, move everything under the circle, disregarding depth
stroke.silhouette = "Silueta";
stroke.silhouette.view = "Zobrazení";
stroke.silhouette.snapped = "Pokud přichycen";
stroke.silhouette.closest = "Nejbližší";
// Only sculpt the vertex that points toward the direction of the deformation
stroke.sameSide = "Pouze vrchol stejné strany";
stroke.sameSide.help = "Ignorujte vrcholy směřující opačným směrem deformace.";
stroke.onlyLasso = "Nastavení jsou aktivní pouze pro nástroj laso.";

// Here sampling refers to the app gathering information under the mouse
stroke.area = "Vzorkování oblasti";
stroke.area.help = "Některé štětce nebo možnosti tahu vyžadují povrch normálnosti k povrchu, aby fungovaly.
Můžete ovládat, jak vypočítat tuto průměrnou rovinu nastavením oblasti vzorkování jako poměr k poloměru nástroje.

Při 100 % jsou zohledněny všechny body uvnitř výběrového kruhu.
Při 0 % je zohledněn pouze nejbližší vrchol nebo trojúhelník.";
// Sampling radius size (percent)
stroke.area.normal.radius = "Poloměr normálnosti";
// Sampling radius size (percent)
stroke.area.point.radius = "Poloměr pozice";
// Sampling averaging
stroke.area.normal.average = "Průměr normálnosti";
// Sampling averaging
stroke.area.point.average = "Průměr pozice";
// Keep sharp edges
stroke.keepSharp = "Udržet ostré hrany";
stroke.keepSharp.help = "Vyloučit body, jejichž normálnosti se příliš liší od normálnosti povrchu.

To změní způsob, jakým se vypočítává oblast roviny (vzorkování oblasti).

Tato možnost může být užitečná pro nástroje založené na zploštění nebo pokud chcete barvit rovinný povrch bez rozlití.";

// Only paint the part of the mesh above a certain height
stroke.depthFilter = "Maskování hloubky";
stroke.depthFilter.help = "Vyloučit body, které jsou nad nebo pod určitou vzdáleností od vypočítané roviny (Vzorkování oblasti).

Například může být použito k malování hrbolů nebo dutin.";
stroke.depthFilter.max = "Horní oblast";
stroke.depthFilter.min = "Dolní oblast";
stroke.depthFilter.offset = "Převýšení výšky";

// Invert the pixel (black <-> white)
stroke.alpha.invert = "Invertovat pixely";
// Repeat the alpha image (pattern)
stroke.alpha.wrap = "Dláždění";
// No repeat pattern
stroke.alpha.wrap.none = "Nic";
// Repeat the alpha in a regular manner (tiles with seams)
stroke.alpha.wrap.repeat = "Opakovat";
// Repeat the alpha in a mirrored (seamless tiling)
stroke.alpha.wrap.mirror = "Zrcadlit";
// Tight fit when using tiling
stroke.alpha.fit = "Pevné uložení (nečtvercové obrázky)";
stroke.alpha.fit.help = "Tato možnost má smysl pouze v případě, že textury pro Alpha a štětce nejsou čtvercové.

Když je povoleno, každý obrázek se dlaždici nezávisle bez mezer.
Můžete tuto možnost zakázat, pokud chcete zachovat synchronizaci Alpha a jiných obrázků, případně pokud nejsou ve stejném poměru.";
// Alpha rotation
stroke.alpha.rotation = "Rotace";
stroke.alpha.rotation.lock.help = "Zamkněte orientaci alfy.

Pokud je rotace odemčena, orientace bude v reálném čase sledovat směr tahu.";
// Repeat the image
stroke.alpha.tiling = "Dláždění";
// Scale the image (make it bigger or smaller)
stroke.alpha.scale = "Stupnice";
stroke.alpha.scale.help = "Při minimální hodnotě je čtverec alfa uvnitř poloměru kruhu nástroje.";
// Middle-point value at which no deformation occurs
stroke.alpha.midValue = "Střední hodnota";
stroke.alpha.midValue.help = "Středová hodnota, při které nedochází k žádné deformaci.

(Střední hodnota = 0)
• Černá: žádný posun
• Bílá: pozitivní posun

(Střední hodnota = 0.5)
• Černá: negativní posun
• Bílá: pozitivní posun

(Střední hodnota = 1)
• Černá: negativní posun
• Bílá: žádný posun";
// Synonymous: Scatter/Jitter/Randomize
stroke.jitter = "Náhodně";
// Sculpt and paint along the brush stroke at regular spacing
stroke.type.dot = "Bod";
// Sculpt and paint along with alpha spaced by brush radius
stroke.type.roll = "Otáčet";
// Sculpt and paint with alpha projected on screen stencil
stroke.type.tile = "Dlaždice";
// Sculpt and paint with alpha projected on 3 axis
stroke.type.triplanar = "Triplanar";
// Sculpt continuously
stroke.type.drag = "Tah";
// Lock a region and move it around
stroke.type.grab = "Chytit";
// Lock a point of interest and sculpt it by changing the tool radius
stroke.type.grabRadius = "Zámek + poloměr";
// Lock a region and sculpt it by changing the tool intensity
stroke.type.grabIntensity = "Zámek + intenzita";

stroke.falloffProject = "Vliv";
stroke.falloffProject.help = "• Koule (3d)
Ovlivnění je počítáno na základě vzdálenosti od vrcholu k centru štětce.

• Kruh (2d)
Vrchol je nejprve promítnut na rovinu oblasti, před stanovením jeho vzdálenosti do centra štětce.
To je podobné způsobu, jakým jsou odebírány vzorky alf.";
stroke.falloffProject.sphere = "Koule";
stroke.falloffProject.circle = "Kruh";
stroke.falloffProject.cylinder = "Válec";

// Symmetry
symmetry = "Symetrie";
symmetry.enable = "Povoleno";
symmetry.primitiveWarning = "Symetrie štětce je k dispozici pouze pro primitivy, které jsou ověřeny, s výjimkou Triplanar.";
symmetry.plane.title = "Roviny";
symmetry.toolIgnore = "Aktuální nástroj ignoruje symetrii.";
// Instead of planar symmetry, use a radial symmetry
symmetry.radial.title = "Radiálně";
symmetry.radialX = "Radiálně X";
symmetry.radialY = "Radiálně Y";
symmetry.radialZ = "Radiálně Z";
// A warning indicating that we limit the number of repetitions ($0 is a number)
symmetry.limited = "Počet opakování omezen na $0!";
// Synonym: Offset
symmetry.offset.title = "Posun";
symmetry.offsetX = "Posun X";
symmetry.offsetY = "Posun Y";
symmetry.offsetZ = "Posun Z";
// Number of clones
symmetry.count.title = "Počet";
symmetry.countX = "Počet X";
symmetry.countY = "Počet Y";
symmetry.countZ = "Počet Z";
// method
symmetry.method = "Metoda:";
symmetry.method.help = "• Lokální
Rovina symetrie se pohybuje spolu s síťovým modelem, pokud použijete jeden z nástrojů transformace (Gizmo nebo Transformace).

• Světový
Rovina symetrie je pevná a nebude se pohybovat.";
// Local means: in the coordinate of the scene (synonym: absolute)
symmetry.method.world = "Svět";
// Local means: in the coordinate of the object (synonym: relative)
symmetry.method.local = "Lokální";
// Move the object to the other side of the symmetry (mirror it as well)
symmetry.flip = "Převrátit objekt";
// Mirror the mesh
symmetry.mirror = "Zrcadlení";
symmetry.mirror.help = "Zkuste znovu aplikovat symetrii, aniž by to ovlivnilo topologii.

Radiální symetrie bude ignorována.

Pokud nelze topologii udržet, protože není považována za symetrickou, budete mít možnost vynutit zrcadlení.";
symmetry.mirrorFail = "Nepodařilo se zjistit symetrii.

Chcete vynutit symetrii zrcadlením meshe?";
symmetry.mirrorUseMasking = "Chránit maskovanou oblast";
symmetry.mirrorUseMasking.help = "Udržet maskovanou oblast neporušenou.

Tato možnost bude ignorována u nesymetrické topologie (nebo odpojeného povrchu, jako je dvojice očí).";
symmetry.apply = "Zrcadlo
(udržet topologii)";
symmetry.splitMirror = "Rozdělit a zrcadlit
(nová topologie)";
// Reset the symmetry plane position
symmetry.reset = "Resetovat";
// Reset the symmetry plane positon to the object center
symmetry.reset.centerMesh = "Centrum objektu";
// Reset the symmetry plane positon to the scene (world) center
symmetry.reset.centerWorld = "Centrum světa";
// Reset the symmetry plane orientation
symmetry.reset.direction = "Orientace";
// Display a line on the object (to show where the symmetry lies)
symmetry.showLine = "Zobrazit čáru";
// Display the symmetry plane in 3d
symmetry.showPlane = "Zobrazit rovinu";
// Allow the editing of the symmetry plane with the gizmo
symmetry.edit = "Upravit Gizmo";
symmetry.edit.warning = "Úprava symetrie je experimentální.";
symmetry.edit.help = "Můžete volně nastavit rovinu symetrie.

Tato funkce je trochu experimentální a pravděpodobně byste ji neměli nikdy používat.";

// Ideally <10 chars
tool.dynamic = "DynTopo";
// Ideally <10 chars (Symmetry)
tool.symmetry = "Sym";
// Ideally <10 chars (Mirror primitive)
tool.mirror = "Zrcadlo";
// Ideally <10 chars
tool.clay = "Hlína";
// Ideally <10 chars (Subtract)
tool.clay.sub = "Méně";
// Ideally <10 chars
tool.brush = "Štětec";
// Ideally <10 chars
tool.move = "Přesunout";
// Ideally <10 chars (Normal vector, perpendicular to surface)
tool.move.normal = "Normální";
// Ideally <10 chars
tool.drag = "Táhnout";
// Ideally <10 chars (Smooth the surface by erasing the details)
tool.smooth = "Hladit";
// Ideally <10 chars (Tries to smooth the topology by making the polygons more regular)
tool.smooth.relax = "Uvolnit";
// Ideally <10 chars (Paint mask)
tool.mask = "Maska";
// Ideally <10 chars
tool.mask.unmask = "Odmaskovat";
// Ideally <10 chars (Selector Mask, use lasso/ellipse,etc shape to mask the mesh)
tool.maskSelector = "VybrMasuku";
// Ideally <10 chars (Smudge the paint of the object)
tool.smudge = "Rozmazat";
// Ideally <10 chars (Flatten the surface)
tool.flatten = "Zploštit";
// Ideally <10 chars (Flatten the surface, more strongly than Flatten)
tool.planar = "Planar";
// Ideally <10 chars (Flatten the surface by offsetting the surface in the opposite direction)
tool.flatten.fill = "Vyplnit";
// Ideally <10 chars (Layer brush)
tool.layer = "Vrstva";
// Ideally <10 chars
tool.crease = "Skládat";
// Ideally <10 chars (Cut part of the mesh cleanly)
tool.trim = "Oříznout";
// Ideally <10 chars (Cut part of the mesh cleanly into two separate meshes)
tool.split = "Rozdělit";
// Ideally <10 chars (Project part of the object onto a curve)
tool.project = "Projekt";
// Ideally <10 chars
tool.inflate = "Zvětšit";
// Ideally <10 chars
tool.pinch = "Štípnout";
// Ideally <10 chars
tool.nudge = "Posunout";
// Ideally <10 chars
tool.stamp = "Razítko";
// Ideally <10 chars (Delete Layer, a tool that can cancel the Layer deformation/paint)
tool.clearLayer = "SmazatVrstva";
// Ideally <10 chars (Select multiple objects with a lasso tool)
tool.select = "Vybrat";
// Ideally <10 chars (Rotate, Translate and Scale the object)
tool.gizmo = "Nástroj";
// Ideally <10 chars
tool.gizmo.editPivot = "Osa";
// Ideally <10 chars (Snap angle)
tool.gizmo.rotateSnap = "Přischnout";
// Ideally <10 chars (Snap translation)
tool.gizmo.moveSnap = "Přischnout";
// Ideally <10 chars (Local/Relative space)
tool.gizmo.local = "Lokální";
// Ideally <10 chars (Align/Snap the gizmo to world axis)
tool.gizmo.align = "Zarovnat";
// Ideally <10 chars (Pin the gizmo, so that it stays in place when switching between objects)
tool.gizmo.pin = "Zapíchnout";
// Ideally <10 chars (Rotate, Translate and Scale the object)
tool.transform = "Přeměnit";
// Ideally <10 chars (Translate the object)
tool.transform.move = "Přesunout";
// Ideally <10 chars (Rotate the object)
tool.transform.rotate = "Otočit";
// Ideally <10 chars (Scale the object)
tool.transform.scale = "Škála";
// Ideally <10 chars (Snap the object on another object surface)
tool.transform.snap = "Přischnout";
// Ideally <10 chars (Measure distance between 2 points)
tool.measure = "Měřit";
// Ideally <10 chars (Lattice, deformer)
tool.lattice = "Mřížka";
// If an option is shared among the tools
tool.all = "Vše";
// Ideally <10 chars (Quad Remesher)
tool.remesh = "Quad Remesh";
tool.remesh.guides = "Vodítka";
tool.remesh.density = "Hustota";
tool.remesh.same = "Stejný";
tool.remesh.half = "Poloviční";
// Ideally <10 chars (FaceGroup)
tool.faceGroup = "SkupinaPovrch";
tool.faceGroup.autoPick = "Auto-výběr";
tool.faceGroup.flush = "OdebratNepoužité";
tool.faceGroup.skip = "Přeskočit malé skupiny na základě:";
tool.faceGroup.skipFace = "Počet stěn";
tool.faceGroup.skipFace.help = "Nevytvářejte novou skupinu, pokud je počet stěn menší nebo roven této hranici.";
tool.faceGroup.skipArea = "Plocha povrchu";
tool.faceGroup.skipArea.help = "Nevytvářejte novou skupinu, pokud je plocha nového skupení menší než tento práh.

Práh je dán procentním vyjádřením z celkové plochy objektu.";
// Ideally <10 chars (Hide)
tool.hide = "Skrýt";
// Ideally <10 chars (View tool, do nothing in particular)
tool.view = "Zobrazit";
// Ideally <10 chars (Revolving surface along a line)
tool.lathe = "Soustruh";
// Ideally <10 chars (Revolving surface along a curve)
tool.tube = "Trubka";
// Ideally <10 chars (Insert object into the scene)
tool.insert = "Vložit";
// Ideally <10 chars (Flip/Invert/Negate the shape)
tool.shape.flip = "Převrátit";
// Ideally <10 chars (No shape selected, same as Camera mode, does nothing in particular)
tool.shape.view = "Zobrazit";
// Ideally <10 chars (Lasso selection)
tool.shape.lasso = "Laso";
// Ideally <10 chars (Curve selection, same as Lasso and it's an open shape)
tool.shape.curve = "Křivka";
// Ideally <10 chars (Polygon selection, same as Lasso but with more precision)
tool.shape.polygon = "Polygon";
// Ideally <10 chars (Path selection, same as Lasso but with more precision and it's an open shape)
tool.shape.path = "Cesta";
// Ideally <10 chars (Rectangular selection)
tool.shape.rectangle = "Obdélník";
// Ideally <10 chars (Ellipse selection)
tool.shape.ellipse = "Elipsa";
// Ideally <10 chars (Line selection, split the screen in half)
tool.shape.line = "Čára";
// Ideally <10 chars (Whether a shape is closed or not, a tube is open, a torus is closed)
tool.shape.closed = "Uzavřeno";

// Radius of the tool (size)
tool.radius = "Poloměr";
// Intensity of the tool (force)
tool.intensity = "Intenzita";

tool.settings = "Nastavení";
tool.settings.none = "Tento nástroj nemá žádná specifická nastavení.";

tool.crease.pinchFactor = "Faktor sevření";
tool.crease.offsetFactor = "Faktor posunutí";

tool.layer.removeInfluence = "Použít data vrstvy";
tool.layer.removeInfluence.help = "Tato volba je aktivní pouze při vybrané vrstvě.

Použije data vrstvy k omezení posunu přes tahy.";
tool.layer.noLayerSelected = "Tato volba je dostupná pouze při vybrané vrstvě.";

tool.flatten.planeLockOrigin = "Zamknout počátek roviny";
tool.flatten.planeLockNormal = "Zamknout směr roviny";

// Option for Tube, Lathe and Insert tool
tool.syncInstance = "Synchronizovat";
tool.syncInstance.message = "Nový objekt bude přidán na všechny ostatní instance!";

// The vertex on the border of the mesh will stay still even if we try to smooth the border
tool.smooth.stickyBorder = "Neek čára na okraji";
tool.smooth.screen = "Vyhlazování obrazovky";
tool.smooth.screen.help = "Použijte tuto volbu k dosažení vyhlazování nezávislého na topologii, i při vysokém polygonu.";
tool.smooth.screen.samples = "Ukázky obrazovky";
tool.smooth.stable = "Stabilní vyhlazení";
tool.smooth.stable.help = "Snaží se učinit vyhlazení nezávislým na topologii.

Tento režim funguje nejlépe s proměnlivou hustotou topologie a s vysokou hodnotou intenzity vyhlazení.";

tool.paint = "Malovat";
// Erase the painting
tool.paint.erase = "Vymazat";
// Only paint the part of the mesh that was already painted in the layer (repainting)
tool.paint.layerFilter = "Filtrovat vrstvu";
tool.paint.layerFilter.help = "Použijte tuto volbu, pokud chcete znovu namalovat pouze už malovanou oblast vrstvy.";

// Clear the painted mask
tool.mask.clear = "Vymazat";
tool.mask.clearAll = "Vymazat vše";
// Invert the painted mask
tool.mask.invert = "Obrátit";
// Mask or Unmask a region (leave other region that unconnected intact)
tool.mask.flipConnected = "Obrátit masku (připojenou)";
// Blur the painted mask
tool.mask.blur = "Rozmazat";
// Sharpen the edge of the painted mask area
tool.mask.sharpen = "Zaostřit";
// Transform/Matrix
tool.matrix = "Matice";
// The target of the transform is either the Matrix or the Vertex of the object
tool.matrix.target = "Cíl";
// Automatic
tool.matrix.target.auto = "Automaticky";
tool.matrix.target.auto.help = "Ve výchozím nastavení to funguje podobně jako možnost Skupina.
Pokud má mřížka maskování nebo je povolena symetrie, bude fungovat stejně jako Vrchol.";
// Auto apply the transform on the vertices
tool.matrix.target.vertex = "Vrchol";
tool.matrix.target.vertex.help = "Zkuste použít transformaci na vrcholy, nebude fungovat na neověřených primitivech.
Ovlivněny budou i instance.";
// Transform the object alone (the children stands still)
tool.matrix.target.object = "Objekt";
tool.matrix.target.object.help = "Pohybujte pouze objektem, ignorujte symetrii a maskování.
Pohybuje se pouze upravený uzel, děti zůstanou na místě.";
// Transform the object and its children
tool.matrix.target.group = "Skupina";
tool.matrix.target.group.help = "Pohybujte uzlem, ignorujte symetrii a maskování.
Zbytek hierarchie bude také transformován.";
// Operation on the mesh
tool.matrix.action = "Operace";
tool.matrix.action.origin = "Přesunout počátek";
tool.matrix.action.origin.help = "Přesuňte mřížku na světový počátek.";
tool.matrix.action.bake = "Vypéct";
tool.matrix.action.bake.help = "Aplikujte matici na vrchol a resetujte matici. Vizualně by se nic nemělo změnit.";
tool.matrix.action.reset = "Resetovat";
tool.matrix.action.reset.help = "Resetuje transformaci mřížky na identitu.";

// Synonym: shear, https://en.wikipedia.org/wiki/Shear_matrix or https://en.wikipedia.org/wiki/Shear_mapping
tool.matrix.skew = "Klopení";
tool.matrix.translation = "Translační pohyb";
tool.matrix.rotation = "Rotace";
tool.matrix.scale = "Měřítko";
tool.matrix.uniformScale = "Jednotné měřítko";

tool.transform.tip = "Jedním klepnutím druhým prstem pro změnu režimu";

// Size of the gizmo
tool.gizmo.size = "Velikost Gizmo";
// If true, there is less spacing between gizmo handlers (rotate, scale, etc)
tool.gizmo.compact = "Kompaktní";
// When enabled, tapping one the gizmo widget will open a numerical input popup
tool.gizmo.allowInput = "Číselný vstup";
tool.gizmo.allowInput.help = "Povolí číselný vstup při klepnutí na jeden z widgetů Gizmo";
// Angle threshold
tool.gizmo.linearRollThreshold = "Práh sklopení tangenty";
tool.gizmo.linearRollThreshold.help = "Práh úhlu pro volbu mezi lineární nebo kruhovou metodou sklopení. Hodnoty nad tímto prahem budou používat kruhovou metodu. Pokud upřednostňujete lineární sklopení (směr tangenty), nastavte tuto hodnotu na 90°.";
// Partially hide/fade the gizmo when we interact with it
tool.gizmo.autoHide = "Skrýt při interakci";
tool.gizmo.tap = "Při klepnutí";
tool.gizmo.tap.help = "Tato možnost ovládá, jak se pohybuje osa při prvním klepnutí na povrch mesh.";
tool.gizmo.tap.none = "Žádný";
tool.gizmo.tap.none.help = "Po klepnutí na mesh se nic nestane.";
tool.gizmo.tap.normal = "Normální";
tool.gizmo.tap.normal.help = "Přesuňte gizmo na první průsečík a zarovnejte podle normály povrchu.";
tool.gizmo.tap.first = "První";
tool.gizmo.tap.first.help = "Přesuňte gizmo na první průsečík.";
tool.gizmo.tap.medial = "Medián";
tool.gizmo.tap.medial.help = "Přesuňte gizmo na střed prvních dvou průsečíků.";

// The lathe generator is a vertical line and cannot be rotated
tool.lathe.axisFixed = "Pevná";
tool.lathe.axisOnly = "Pouze osa";
tool.lathe.stable = "Stabilní";
tool.lathe.axis = "Osa";

// Fill the object's hole
tool.hole = "Plnění otvoru";
tool.hole.fillHoles = "Vyplnit otvory";
// synonym: Alternative method
tool.hole.method.fill = "Vyplnit";
tool.hole.method.legacy = "Legacy";
tool.hole.method.boolean = "Bool";
tool.hole.bridges = "Boolean v prostoru obrazovky";
tool.hole.bridges.help = "Pokud je tato možnost povolena, můžete v objemu vyřezat otvory. Naklonění řezu bude rovněž více odpovídat tvaru řezu.";
tool.hole.threshold = "Epsilon prahu";
tool.hole.threshold.help = "Upravení této hodnoty může pomoci s algoritmem vyplňování děr.";
tool.hole.smoothing = "Vyhlazení otvorů";

tool.smudge.quality = "Kvalita";
tool.smudge.quality.help = "Mění rozlišení promítaných pixelů, nižší hodnoty znamenají rychlejší tahy.";

// Shape for the tools: Trim / Split / Project / SelMask
tool.shape = "Tvar";
// Auto-validate the drawn shape
tool.shape.autoValidate = "Automatické ověření";
// Force the rectangle selection to be a square
tool.shape.rectangleSquare = "Čtverec";
// The selection rectangle will be centered around the cursor
tool.shape.rectangleCentered = "Centrovaný";
// Force the ellipse selection to be a circle
tool.shape.ellipseCircle = "Kruh";
// The selection ellipse will be centered around the cursor
tool.shape.ellipseCentered = "Centrovaný";
// Rotate by step (angle value)
tool.shape.lineRotateStep = "Krok otáčení";

// Show a yellow dot on the golden ratio point
tool.measure.goldenRatio = "Zlatý řez";
// volume of a mesh
tool.measure.volume = "Objem";
// Surface of a mesh
tool.measure.surface = "Povrch";

// Always display the camera shortcut buttons on the viewport
tool.view.stickyCamera = "Zkratka kamery (vždy)";

// Topology
topology = "Topologie";
// Synynom: detail value, density
topology.dynamic.detail = "Detail";
// See glossary
topology.multires = "Multirezoluce";
topology.multires.help = "Udržuje několik rozlišení síťoviny.

Pokud provedete změny v nižším rozlišení, detaily z vyšších rozlišení budou znovu promítnuty, když se vrátíte zpět.

Vrstvy jsou k dispozici na každém rozlišení.";
// Synonym: Unsubdivide, Un-subdivide
topology.multires.reverse = "Opačný";
topology.multires.reverse.confirm = "Nelze vytvořit základní dělení.

Aktuální topologie pravděpodobně není výsledkem dělení.";
topology.multires.subdivide = "Poddělení";
topology.multires.subdivide.confirm = "Síť bude mít $0M vrcholů, jste si jistý?";
// Prevents the user from subdivide the object again, a warning is displayed (with a UI link to increase this limit)
topology.multires.subdivide.limit = "Překročen limit dělení, viz $0";
topology.multires.deleteLower = "Smazat nižší";
topology.multires.deleteHigher = "Smazat vyšší";
topology.multires.keepTriangles = "Udržet trojúhelníky";
topology.multires.lock = "Zámek (LV0)";
// Navigate toward multiple resolutions (go to higher level)
topology.multires.up = "Úroveň Multirez →";
// Navigate toward multiple resolutions (go to lower level)
topology.multires.down = "Úroveň Multirez ←";
// Synonym: Flat subdivision
topology.multires.linear = "Lineární poddělení";
topology.multires.linear.help = "Jednoduše rozdělte síť bez jakéhokoli hladění";
// Only show the lowest resolution wireframe
topology.multires.minWireframe = "Pouze úroveň 0";
// Create a new object by recomputing a new topology
topology.remesh = "Remesh";
// Create a new object by recomputing a new topology, by using voxels (see Glossary)
topology.voxel = "Voxel remeshing";
topology.voxel.help = "Nanovo vznikající síť v měřítku se vzorkováním sítě na mřížce.

Pokud objekt není uzavřen (nepropustný), nejprve se použije algoritmus pro vyplňování otvorů.

Vrstvy se po hen programu znovu projektují, ale kvalita se zhorší.";
topology.voxel.resolution = "Rozlišení";
topology.voxel.sharp = "Udržovat ostré hrany";
topology.voxel.sharp.help = "Tato volba je užitečná hlavně pro jednoduché primitivní booleovské operace.

Způsobí zkreslení v některých oblastech kvůli tomu, že body jsou přichyceny na hranych.";
topology.voxel.subLevel = "Vytvořit multirezoluci";
topology.voxel.subLevel.help = "Můžete znovu vytvořit hierarchii multirezoluce z výstupu voxel remesheru.

Bude také rychlejší a použije méně paměti, zejména pokud je voxel detail vysoký.
Nicméně když je hodnota detailu voxel nízká a požadujete mnoho úrovní multirez přijdete o detaily.";
// Dynamic topology (DynTopo)
topology.surface.remesh = "Remesh";
topology.surface.detail = "Detail";
topology.surface.detail.help = "Na rozdíl od remeshing voxelu povrchové remeshing nevyžaduje, aby síť byla uzavřena.

Může také podporovat maskování, abyste mohli chránit některé části sítě před změnami topologie.

Vrstvy jsou správně aktualizovány.";
topology.surface.method = "Metoda";
// Uniformisation means we can both add and remove triangles/quads
topology.surface.method.uniformisation = "Unifikace";
// We can only add triangles/quads (synonym: Refine)
topology.surface.method.subdivision = "Rozdělení";
// We can only remove triangles/quads (synonym: Simplify)
topology.surface.method.decimation = "Decimace";
topology.surface.method.help = "Chování dynamické topologie:
• Unifikace: přidání a odstranění detailů
• Dílčí divize: přidání detailů
• Decimace: odstranění detailů";
topology.surface.useMasking = "Chránit maskovanou oblast";
topology.surface.useMasking.help = "Maskované oblasti ochrání topologii před změnami.";
topology.surface.extrapolate = "Extrapolace vrcholů";
// DynTopo
topology.dynamic = "Dynamická topologie";
topology.dynamic.global = "Globálně zap/ vyp.";
topology.dynamic.activate = "Povolená";
topology.dynamic.activate.help = "S dynamickou topologií mohou nástroje pro sochání pododílet nebo zjednodušovat síť lokálně v reálném čase.

Tato funkce může mít znatelný dopad na výkon.

Vrstvy jsou správně aktualizovány.";
topology.dynamic.method = "Detail based on...";
topology.dynamic.method.screen = "Obrazovka";
topology.dynamic.method.radius = "Poloměr";
topology.dynamic.method.constant = "Konstantní";
topology.dynamic.method.help = "• Zoom
Úroveň detailů je založena na tom, jak daleko jste od povrchu.

• Poloměr
Poloměr nástroje určuje množství detailů.

• Konstanta
Details are fixed, hodnota detailů je také sdílena s posuvníkem voxelů.";
topology.dynamic.quality = "Upřednostnit...";
topology.dynamic.quality.help = "Pokud zvolíte Kvalitu, hlavní rozdíly jsou:
• zjemnění je aplikováno před operátorem sochaření, při malování nebo sochaření velmi malých detailů budete mít méně interpolujících artefaktů
• zjemnění není aplikováno postupně, pokud socháte velmi malé detaily nebo rychlé tahy, topologie bude vždy správně vylepšena";
topology.dynamic.quality.speed = "Rychlost";
topology.dynamic.quality.quality = "Kvalita";
// Whether the pencil pressure can impact the level of detail
topology.dynamic.usePressure = "Použít tlak na poloměru";
topology.dynamic.usePressure.help = "Použijte tuto možnost, pokud chcete, aby tlak pera na poloměr nástroje ovlivnil úroveň detailu.";
topology.dynamic.useFalloff = "Použít útlum tahu";
// Decimate
topology.decimate.title = "Decimace";
topology.decimate.title.help = "Snižte počet polygonů při zachování co nejvíce detailů.

Tato funkce může být užitečná, pokud chcete exportovat pro 3D tisk.
Nicméně, pokud chcete pokračovat ve sochání, pravděpodobně byste ji neměli použít, protože může vytvářet nerovné trojúhelníky.

Poznamenejte si, že maskovaná oblast nebude decimována.";
// Synonym: Simplify (Decimate reduce the number of triangles/quads while retaining details as much as possible)
topology.decimate = "Decimace";
topology.decimatePaintWeight = "Zachovat malbu";
topology.decimatePaintWeight.help = "Vyšší hodnota se snaží zachovat malbu. Nastavte tuto hodnotu na 0, pokud se o malbu nestaráte.";
topology.decimateUniform = "Jednotné plochy";
topology.decimateUniform.help = "Vyšší hodnota bude generovat trojúhelníky stejné velikosti.";
topology.decimatePreserveBorders = "Zachovat hranice";
topology.decimatePreserveBorders.help = "Nesnižuj hranici mřížky.";
// Target a certain number of triangles, faces and vertices
topology.target.triangles = "Cílové trojúhelníky";
topology.target.faces = "Cílové plochy";
topology.target.quads = "Cílové čtyřúhelníky";
topology.target.points = "Cílové body";
// Quad remesher
topology.qremesh = "Čtyřúhelníková přepletka";
topology.qremesh.angle = "Úhlouna";
topology.qremesh.border = "Zachovat hranice";
topology.qremesh.onlyQuad = "Pouze čtyřúhelníky";
topology.qremesh.hole = "Maximální vyplnění otvorů";
topology.qremesh.hole.help = "Algoritmus může někdy vyprodukovat nechtěné otvory. Pokud má otvor méně vrcholů než tato hodnota, bude vyplněn.";

// Unwrapping means compute UV (texture coordinates), with uvs you can appliy (wrap) a texture onto the model
topology.uv.title = "UV Rozbalení";
// UV Unwrap but as a Verb
topology.uv.unwrap = "Rozbalit";
// The operation can be very slow
topology.uv.atlas.warning = "Může být velmi pomalý, cílové <100k vrcholů!";
// Handles are topological holes (synonym: genus, hole)
topology.uv.bff.warning = "Může dojít k překrytí, pokud mřížka má údržby!";
// Solo patch
topology.uv.bff.seamless = "Bezešvé záplaty";
topology.uv.bff.seamless.help = "Tato možnost může způsobit významné zkreslení.

Typicky se používá, když jsou skupiny obličejů pečlivě nastaveny.";
// Synonym: Point count? Singularity count ?
topology.uv.bff.cones = "Počet kuželů";
topology.uv.bff.help = "Vyšší hodnota sníží deformaci pro složité objekty. Vyšší hodnota znamená delší dobu výpočtu.";
topology.uv.delete = "Smazat UV";

// Transfer the vertex painting in the texture, bake means "create texture (from mesh data)"
topology.bake.title = "Péct";
// Bake here means "create texture (from mesh data)"
topology.bake.title.help = "Textura pečení vytvoří textury promítáním jiných viditelných objektů ve scéně.

Typický pracovní postup pro pečení je následující:
• Máte síť s jemnými detaily a malbou
• Zkopírujte ji
• Snižte ji (nastavte `Zachovat malování` na 0!)
• UV unwrap ji
• Upečte!

Nyní byste měli mít síť s nízkým rozlišením, která zachovává většinu barvy a detailů vašeho předchozího objektu.

Po operaci budou barvy vrcholů přesunuty do nové vypnuté vrstvy, takže budou ignorovány místo násobení s barevnou texturou.

K určení, které objekty se použijí pro pečení, platí následující logika:
- budou upečeny všechny vybrané objekty a hlavní vybraný objekt (nejsilnější zvýraznění v menu scény)
- pokud je vybraný pouze jeden objekt, Nomad místo toho zvažují všechny viditelné objekty
- pokud jsou všechny objekty skryté (například pomocí Solo), zvažuje se celá scéna.";
// Bake here means "create texture (from mesh data)"
topology.bake.self = "Z něj samotného";
// Bake here means "create texture (from another mesh data)"
topology.bake.other = "Z vysokého rozlišení";
topology.bake.resolution = "Rozlišení";
// Cage is a specific term, synonyom: "Bake offset"
topology.bake.offset = "Posunutí paprsku";
topology.bake.radius = "Poloměr klece";
// Bake opacity (from mask data)
topology.bake.opacityFromMask = "Maska -> Neprůhlednost";
topology.bake.backup = "Záloha";

// project a high resolution mesh details onto another
topology.reproject.title = "Přeprojektovat";
topology.reproject.title.help = "Projektujte vysochané detaily, malování a vrstvy z nejbližších viditelných objektů.

Toto je většinou určeno k použití na vysokorozlišovacím meshi, typicky s čistou topologií.";
// tweaking value
topology.reproject.rayBias = "Vyvažování paprsku";
topology.reproject.rayBias.help = "Pro reprojekci se používají dvě metody:
• nejbližší: nejbližší bod na povrchu
• paprsek: průsečíkový bod skrz normální směr

Vyšší hodnoty zkreslení budou upřednostňovat průsečík paprsku místo nejbližšího povrchu.";
topology.reproject.normalOffset = "Normální odsazení";
topology.reproject.shpereCast = "Záložní volba projekce koule";
topology.reproject.shpereCast.help = "Pokud selže normální paprsková reprojekce, Nomad přejde na nejbližší průsečík povrchu.";
// number of iteration the algorithm will take
topology.reproject.iterations = "Iterace";
topology.reproject.relax = "Uvolnit";
topology.reproject.relax.help = "Uvolnění by mělo být preferováno, když je mřížka nízko-poly.";
topology.reproject.layers.help = "Přenést další vrstvy na vybraný mesh.";

topology.manifold = "Mnohočetnost";
topology.nonManifold = "Ne-mnohočetnost";
topology.manifold.clean = "Vyčistit";
topology.manifold.collapse = "Smazat malé plochy";
topology.manifold.title = "Vynutit mnohočetnost";
topology.manifold.title.help = "Pokouší se vyčistit nemnohočetné hrany.

To se může hodit pro externí programy, které nepodporují hrany, které sdílí více než 2 plochy.";

// Reset key-bindings/shortcuts
binding.reset = "Resetovat přiřazení kláves";
// Add node in a sync mode (synchronize instance)
binding.addSync = "Synchronizovat";
binding.addSync.help = "Ve výchozím nastavení se použije hodnota synchronizace nastavená v menu scény.";
// Binding option
binding.context.toggle = "Přepnout kontext";
binding.toggleTool = "Přepnout klávesové zkratky nástroje";
binding.toggleTool.help = "Při použití jedné z klávesových zkratek nástrojů bude vybrán předchozí nástroj, pokud je současný zkratkový nástroj aktivní.";
// When the key is tap once, the value will be toggled
binding.toggleTap = "Předvolba pro přepnutí klávesové zkratky";
// The binding force camera movement
binding.forceCamera = "Vynutit kameru";
binding.forceCamera.help = "Vynutit interakci s kamerou v případě konfliktu s jiným bindingem.

To se může typicky stát, pokud je stejný binding přiřazen zkratce nástroje nebo Přidat/Odečítat.";
// Same as Color Picker but it pick the material (color, roughness, metalness, etc)
binding.pickMaterial = "Vybrat materiál";
// Same as Color Picker but it pick the material (color, roughness, metalness, etc)
binding.pickFaceGroup = "Vybrat skupinu ploch";
// Edit the tool brush size/radius
binding.editRadius = "Poloměr nástroje";
// Edit the tool brush size/radius
binding.editIntensity = "Intenzita nástroje";
// Controller dead zone
binding.joystick = "Joystick";
binding.controller.deadZone = "Mrtvá zóna ovladače joysticku";
binding.controller.deadZone.help = "Zvyšte tuto hodnotu, pokud se kamera pohybuje, i když se s ovladačem nic neděje.";
// Snap the camera
binding.view.front = "Přední pohled";
binding.view.left = "Levý pohled";
binding.view.top = "Horní pohled";
// Move/Translate the view
binding.pan.left = "Posun doleva";
binding.pan.right = "Posun doprava";
binding.pan.forward = "Posun dopředu";
binding.pan.backward = "Posun dozadu";
binding.pan.up = "Posun nahoru";
binding.pan.down = "Posun dolů";
// Snap the view (while rotating)
binding.snapViewOnRotate = "Přichycení pohledu (při otáčení)";
// Open a Nomad internal project (replace current scene)
binding.project.open = "Otevřít (projekt)";
// Open a Nomad internal project (add it to the current scene)
binding.project.add = "Přidat (projekt)";
// Select all the objects in the scene
binding.selectAll = "Vybrat vše";
// Rotate environment and the lighting
binding.rotateLighting = "Otočit osvětlení";
// The Camera pivot is the point around which the camera rotates
binding.updatePivot = "Aktualizovat pivot...";

quadremesh.adaptQuadCount = "Přizpůsobivý počet kvádrů";
quadremesh.curvatureAdaptivness = "Adaptivní velikost";
quadremesh.curvatureAdaptivness.help = "Při 100 % se velikost čtverců mění v závislosti na křivosti objektu, což umožňuje menší čtverce na vysokých křivkách.
Při 0 % bude velikost čtverců jednotná.";
quadremesh.useVertexColors = "Zachovat malování";
quadremesh.autoDetectHardEdges = "Automatické zjišťování tvrdých hran";
quadremesh.autoDetectHardEdges.short = "Tvrdé hrany";
quadremesh.reprojectVertex = "Znovuprojektovat vrchol";
quadremesh.reprojectVertex.short = "Znovuprojektovat vrchol";
quadremesh.reprojectVertex.label = "Když je povoleno, Nomad znovuprojektuje pozici na předchozí mřížku.

Mějte na paměti, že pokud má mřížka vrstvy, znovuprojekce bude vždy použita.";

// Privacy policy
privacyPolicy.title = "Zásady ochrany osobních údajů";
privacyPolicy.reject = "Odmítnout";
// Hexanomad is the company name
privacyPolicy = "Hexanomad neshromažďuje žádná data z Nomad Sculpt.";

sonar.disconnect = "Odpojit SonarPen";
sonar.connect = "Připojit SonarPen";
sonar.connect.confirm = "Připojit SonarPen?";
sonar.connect.confirm.warning = "Sonar Pen použije mikrofon (zpětná vazba zvuku) k detekci tlaku pera.";

// Color disc mode
widget.color.disc = "Disk";
widget.color.ring = "Kruh";
widget.color.square = "Čtverec";

nomad.mainFolder = "Hlavní složka Nomad";
nomad.mainFolder.warning = "Soubory zůstávají nedotčené.
Nejsou kopírovány, mazány ani přesouvány.";
nomad.mainFolder.error = "Po výběru ano se Nomad zavře a můžete jej jednoduše znovu spustit.";

license.title = "Licence";
license.retry = "Opakovat pokus";
license.key = "Licenční klíč";
license.activate = "Aktivovat licenci";
// ----------------------------------------------
license.newest = "Nová verze k dispozici!";
// ----------------------------------------------
license.portal.title = "Stávající uživatelé";
license.portal.label = "Portál licencí";
// ----------------------------------------------
license.checkout.title = "Noví uživatelé";
license.checkout.label = "Zakoupit Nomad";
// ----------------------------------------------
license.device.error = "Nelze získat ID zařízení.";
license.device.mismatch = "Nesoulad ID zařízení!";
// ----------------------------------------------
license.validate.error404 = "Licenční klíč nebyl nalezen.";
license.validate.error422 = "Nezpracovatelný subjekt.";
// ----------------------------------------------
license.activate.error403 = "Byl dosažen maximální počet zařízení!
Na svém portálu licencí můžete deaktivovat jiné zařízení.";
license.activate.error404 = "Licenční klíč nebyl nalezen.";
license.activate.error422 = "Nezpracovatelný subjekt.";
// ----------------------------------------------
// version trial
version.restore = "Obnovit nákup";
version.buyWeb = "Webová verze je pouze ukázka";
version.buyFull = "Upgradovat na plnou verzi";
version.buyQR = "Koupit";
version.buyQR.promo = "
Quad Remesher je algoritmus, který vytváří síť převážně složenou z kvadratických tvarů.
Rozložení čtverců se bude snažit sledovat přirozené zakřivení objektu.

Algoritmus může také upravit velikost čtverců v závislosti na místním zakřivení.

Můžete také řídit výslednou topologii pomocí:

• Skupina Tvárí $0 (ujistěte se, že jejich hranice jsou hladké pro lepší výsledek!)

• Rovinná symetrie X/Y/Z $1

• Vodiče křivek $2

• Malování hustoty $3

Quad Remesher vyvíjí https://exoside.com/.";

version.trialHistory = "Zkušební verze: Možné 4 kroky zpět/znovu";
version.trialLayer = "Zkušební verze: 1 vrstva na objekt";
version.trialNoImport = "Zkušební verze: Nelze importovat";
version.trialNoExport = "Zkušební verze: Nelze exportovat";

version.fullFeatures = "• Jednorázový nákup
• Neomezené vrátit/znovu
• Neomezené vrstvy
• Export & import";

version.demo.purpose = "Tato verze byla vytvořena specificky pro demonstrační účely.";
version.demo.disable = "Funkce není dostupná v demoverzi.";

// app store main page
store.name = "Nomad Sculpt";
store.headline = "Sculptujte, malujte a tvořte ve 3D";
store.tag = "sclupt, 3d, nomad, malování, modelování";
// ----------------------------------------------
store.description.sculpt = "• Nástroje pro sochání
Jíl, vyrovnání, uhlazení, maska a mnoho dalších štětců umožní tvarovat vaši tvorbu.
Pro potřeby tvrdších povrchů můžete také použít nástroj pro ořezávání boolean řezáním s lasem, obdélníkem a dalšími tvary.";
// ----------------------------------------------
store.description.stroke = "• Úprava tahu
Průběh, alfa, dlaždice, tlak tužky a další parametry tahu lze přizpůsobit.
Můžete také uložit a načíst předvolbu svých nástrojů.";
// ----------------------------------------------
store.description.paint = "• Malířské nástroje
Vertex malování s barvou, drsností a kovovostí.
Můžete také snadno spravovat všechny své předvolby materiálů.";
// ----------------------------------------------
store.description.layer = "• Vrstvy
Zaznamenejte své operace modelování a malování do samostatných vrstev pro snadnější iteraci v průběhu procesu tvorby.
Jsou zaznamenány jak změny modelování, tak i malování.";
// ----------------------------------------------
store.description.multires = "• Sochání ve více rozlišeních
Přecházejte mezi více úrovněmi rozlišení vaší sítě pro flexibilní pracovní postup.";
// ----------------------------------------------
store.description.voxel = "• Voxel remeshing
Rychle remeshujte svou síť, abyste dosáhli jednotné úrovně detailů.
Lze použít k rychlému načrtnutí hrubého tvaru na začátku procesu tvorby.";
// ----------------------------------------------
store.description.dynamic = "• Dynamická topologie
Vylepšete místně svou mesh pod štětcem pro automatickou úroveň detailu.
Můžete dokonce zachovat své vrstvy, protože se automaticky aktualizují!";
// ----------------------------------------------
store.description.topology = "• Decimace
Snižte počet polygonů při zachování co nejvíce detailů.";
// ----------------------------------------------
store.description.group = "• Skupina ploch
Segmentujte svou síť na podskupiny pomocí nástroje skupiny ploch.";
// ----------------------------------------------
store.description.unwrap = "• Automatické UV odvíjení
Automatický UV odvíječ může použít skupiny ploch pro kontrolu procesu odvíjení.";
// ----------------------------------------------
store.description.baking = "• Pečení
Můžete přenášet data vrcholů, jako jsou barva, drsnost, kovovost a malé detaily, na textury.
Můžete také udělat opak, přenést data textur na data vrcholů nebo vrstvy.";
// ----------------------------------------------
store.description.primitive = "• Primitivní tvar
Lze použít válec, torus, trubka, soustruh a další tvary pro rychlé zahájení nových tvarů od začátku.";
// ----------------------------------------------
store.description.rendering = "• PBR rendering
Výchozí krásné PBR rendering, s osvětlením a stíny.
Vždy můžete přepnout na matcap pro standardnější stínování pro účely sochání.";
// ----------------------------------------------
store.description.postprocess = "• Post processing
Screen Space Reflection, Depth of Field, Ambient Occlusion, Tone mapping, atd.";
// ----------------------------------------------
store.description.files = "• Export a Import
Podporované formáty zahrnují soubory glTF, OBJ, STL nebo PLY.";
// ----------------------------------------------
store.description.interface = "• Rozhraní
Jednoduché rozhraní, navržené pro mobilní použití.
Je možná i vlastní úprava!";
// ----------------------------------------------
store.description.remesher = "• Quad Remesher (pouze samostatný nákup v aplikaci)
Automaticky remeshujte svůj objekt pomocí čtyřdominantní sítě, která sleduje zakřivení sítě.
Podporuje vodítka, skupiny plošek a malování hustoty.";
// ----------------------------------------------