// Generic confirmation (Confirm? [yes/ok/delete, cancel])
confirm = "Bevestigen?";
// Answer to a question (Are you sure you want to do that? [yes, cancel])
confirm.yes = "Ja";
// Answer to a question (Are you sure you want to do that? [yes, no, cancel])
confirm.no = "Nee";
// The generic ok in a confirm box (The next operation is dangerous. [ok, cancel])
confirm.ok = "Ok";
// Cancel something after being asked (Question? [answer, cancel])
confirm.cancel = "Annuleer";
// Restart nomad
confirm.restart = "Na het wijzigen van deze waarde, moet je Nomad opnieuw opstarten.";

// Experimental feature
experimental = "Experimenteel!";

status.exit = "Niet-opgeslagen wijzigingen! Opslaan voor sluiten?";
status.exit.yes = "Opslaan";
status.exit.no = "Niet opslaan";

// On single tap (should be short)
ontap = "Bij tikken";

all = "Alle";
error = "Fout";

reset = "Opnieuw instellen";
resetOrder = "Reset volgorde";

clipboard = "Klembord";
clipboard.copy = "Kopieer";
clipboard.paste = "Plakken";

// memory size
bytes = "bytes";
kB = "kB";
MB = "MB";
GB = "GB";
TB = "TB";

// Noun
instance = "Instantie";
object = "Object";

// Same value (usually for axis, e.g: x == y == z)
uniform = "Uniform";

sync = "Synchroniseren";

// position
position.top = "Boven";
position.bottom = "Onder";
position.left = "Links";
position.right = "Rechts";
position.center = "Midden";
// direction
direction.up = "Omhoog";
direction.down = "Omlaag";
direction.left = "Links";
direction.right = "Rechts";
// 3D cube
cube.top = "Bovenkant";
cube.bottom = "Onderkant";
cube.left = "Links";
cube.right = "Rechts";
cube.front = "Voorzijde";
cube.back = "Achterkant";

// Name of an item (object, tool, etc)
item.name = "Naam";
// Add a new item (object, tool, etc)
item.new = "Nieuw";
// Rename an item (object, tool, etc)
item.rename = "Hernoem";
// Add a new item (object, tool, project, etc)
item.add = "Toevoegen";
// Update an item image with a new image (synonym: Update)
item.replace = "Vervangen";
// Save an item (object, tool, etc)
item.save = "Opslaan";
item.save.confirm = "Opslag bevestigen?";
// Update an item (update camera view point, etc)
item.update = "Bijwerken";
// Reload last save of an item (object, tool, etc)
item.lastSave = "Laatste opslag";
// Reload last save of an item (object, tool, etc)
item.lastSave.confirm = "Laatste opslag laden?";
// Reset an item to its initial value (object, tool, etc)
item.reset = "Reset";
item.reset.confirm = "Reset bevestigen?";
// Make an item instance, similar to clone but keeps the underlying geometry (Synonym: link? soft clone?)
item.instance = "Instance";
// Uninstance the object, make the object real
item.uninstance = "Un-instance";
// Clone an item (object, tool, etc)
item.clone = "Klonen";
// Delete an item (object, tool, etc)
item.delete = "Verwijderen";
item.delete.confirm = "Verwijderen bevestigen?";
item.delete.confirm.yes = "Ja, verwijderen";
// When we delete the item but the image is used somewhere
item.delete.used = "Afbeelding gebruikt";
// Convert the item type (mesh, light) to a simple Node type
item.toNode = "Naar Node";
// Item visibility (object, layer, etc)
item.visible = "Zichtbaar";
// Show an item (object, layer, etc)
item.show = "Tonen";
// Hide an item (object, layer, etc)
item.hide = "Verbergen";
// Select an item (object, layer, etc)
item.select = "Selecteren";
// Unselect an item (object, layer, etc)
item.unselect = "Deselecteren";
// Merge an item with another one below (layer)
item.mergeDown = "Samenvoegen naar beneden";
// The order of an item in a list
item.order = "Volgorde";
// Focus on previous item
item.previous = "Vorige";
// Focus on next item
item.next = "Volgende";
// The item is locked (either it cannot be selected, edited, or we preserve its details)
item.lock = "Vergrendelen";
// No item selected
item.none = "Geen";
// Draggable, moveable
item.draggable = "Verplaatsbaar";

// Search something (text entry to filter item)
search = "Zoeken";

// Three-state toggle button (Auto, Off, On)
toggle.on = "Aan";
// Three-state toggle button (Auto, Off, On)
toggle.off = "Uit";
// Three-state toggle button (Auto, Off, On)
toggle.auto = "Automatisch";

// When you launch the app and we need to reprocess some resource thumbnails
loading.reprocess = "Miniaturen ontbreken, bestanden worden opnieuw verwerkt…";
loading.reprocess.cancel = "Thumbnails overslaan?";

access.title = "Toegankelijkheid";
access.window = "Hulpscherm";
access.pinch = "Knijpen";
access.drag = "Slepen";
access.rotate = "Draaien";
access.roll = "Rollen";

// Color of an object
material.color = "Kleur";
// Defines how blurry or sharp the reflection on a material is (opposite of glossiness)
material.roughness = "Ruwheid";
// Defines how blurry or sharp the reflection on a material is (opposite of roughness)
material.glossiness = "Glans";
// Whether the material is a metal or not
material.metalness = "Metaalsoort";
// How much light a surface will reflect
material.specular = "Speculair";
// Light that the surface can emit (glow)
material.emissive = "Lichtgevend";
// Normal map (synonym: detail, bump)
material.normal = "Normaal";
// flip y coordinate
material.normal.flipY = "FlipY";
// Ambient Occlusion (AO)
material.occlusion = "Occlusie";
// Textures, basically images wrapped on models (synonym: Maps, Texture maps)
material.textures = "Texturen";
// Textures/Image
material.texture = "Textuur";
// A warning indicating that the mesh has no UVs
material.warningNoUVs = "Geen UVs!";
// Texture filtering https://en.wikipedia.org/wiki/Texture_filtering
material.texture.filter = "Filteren";
// Nearest Filtering (closest sample)
material.texture.nearest = "Dichtstbijzijnd";
// Bilinear Filter
material.texture.linear = "Lineair";
// Mipmap filtering
material.texture.mipmap = "Mipmap";
// Triplanar mapping
material.projection = "Projectie";
material.projection.triplanar = "Triplanar";

// Prefer low power
about.lowPower = "Laag stroomverbruik GPU";
// Wintab wacom API
about.wintab = "Gebruik WinTab";
about.wintab.help = "Als WinTab ingeschakeld is, moet je waarschijnlijk Windows Ink uitschakelen in je Wacom-instellingen.

Evenzo, als WinTab is uitgeschakeld, moet Windows Ink zijn ingeschakeld in de Wacom-instellingen.";
// Wacom Multi Touch API
about.touch = "Gebruik Wacom Multi-Touch";
about.touch.help = "Schakel deze optie in om ondersteuning voor meerdere vingers op Wacom-tablets mogelijk te maken.";
// Prefer low power
about.fullScreen = "Volledig scherm";
// Minify
about.minify = "Interface verkleinen";
about.minify.help = "Je kunt ook met 4 vingers op je scherm tikken, als je apparaat dit ondersteunt.";
// Turntable will rotate the whole scene on itself (as it if was on a turntable)
about.turntable = "Draaitafel";
// Rotation center of the turntable
about.turntable.pivot = "Rotatiecentrum";
// Keep current pivot
about.turntable.pivot.keep = "Huidige behouden";
// Turntable pivot will be at the center of the scene
about.turntable.pivot.scene = "Scène";
// Make the entire scene turn around (speed of the animation)
about.turntable.speed = "Snelheid";
// Stuffs that I used to make the app
about.credits = "Credits";
// Link to open source projects that I used for the app
about.credits.openSource = "Open Source";
// Only translate the &
about.credits.arts = "MatCaps & HDRIs";
// Change languages of the app
about.languages = "Talen";
about.languages.help = "Vertaalbestanden beschikbaar op $0";
// Link to the App Website
about.website = "Website";
// Link to the App Forum
about.forum = "Forum";
// Link to the App Manual
about.manual = "Handleiding";
// Link to the App Email
about.mail = "Ondersteuning";
// Link to the App Twitter account
about.twitter = "Twitter";
// Link to the App Instagram account
about.instagram = "Instagram";
// Link to the App Facebook account
about.facebook = "Facebook";
// Link to the App Discord account
about.discord = "Discord";
// Link to the App Threads account
about.threads = "Threads";

// The user canceled an operation that was running
alert.aborted = "Operatie afgebroken!";
// Empty mesh
alert.mirror.empty = "Lege uitvoer!";
// Mesh already mirrored
alert.mirror.same = "Zelfde uitvoer!";
// Error when an algorithm needs the object to have an hole (usually to fill it)
alert.hole.nothing = "Het object heeft geen gaten!";
// No operation occured because the mesh is already manifold
alert.manifold.already = "De mesh is al manifold!";
// Visibility of the object is off (but should be on)
alert.shape.notVisible = "Het huidige object is onzichtbaar!";
// The user tried to trim an object but the selected region didn't touch the object
alert.trim.nothing = "Niks om te trimmen.";
// The user tried to trim an object but the selected region completely encompassed the object
alert.trim.full = "Trim afbreken: het object is volledig getrimd.";
// In order to extract something, the mesh needs to have painted mask
alert.extract.none = "Niets te extraheren!";
// In order to split something, the mesh needs to have painted mask
alert.extract.split.none = "Niets te splitsen!";
// List of disabled features when View Mode is selected
alert.view.disabled = "Functies uitgeschakeld in weergavemodus:";
// Primitive Widgets are small ui stuffs in the viewport that the user can interact with to modify an object
alert.view.disabled.widgetPrimitive = "Primitieve widgets";
// The object needs to have two parts disconnected
alert.separate.fail = "Kon niet scheiden: het object heeft slechts één deel!";
// Remesh is when you create a new topology (mesh) on an object
alert.voxelRemesh.success = "Herbouwd!";
alert.voxelRemesh.empty = "Afbreken herbouw: resultaat mesh heeft geen vlakken.";
// Should not happen or very rarely, input here is an object
alert.voxelRemesh.invalidInput = "Ongeldige invoer!";
// Helper popup to tell the users the object will cloned
alert.matrix.clone = "Het object wordt gedupliceerd";
// Helper popup to tell the users the object will cloned
alert.matrix.instance = "Het object wordt geïnstantieerd";
// A pivot refers the gizmo 3D position, this mode means we are moving the pivot
alert.gizmo.editPivot = "Draaipuntmodus bewerken.";
alert.mask.full = "Masker = 100%!";
// A pivot refers the gizmo 3D position
alert.gizmo.editObject = "Objectmodus bewerken.";
// See Glossary (DynTopo)
alert.dynamic.enable = "Dynamische topologie AAN";
// See Glossary (DynTopo)
alert.dynamic.disable = "Dynamische topologie UIT";
alert.colorPicker = "Sleep over het object om een kleur te kiezen.";
// Transform mode is when the user can move the reference (image in the background) with its two fingers
alert.backgroundTransform = "Eenvoudig tikken om uit de transformatiemodus te gaan.";
// Edit the symmetry plane with the gizmo
alert.editSymmetry = "Eenvoudig tikken om de bewerkingssymmetriemodus te verlaten.";
// Show the painted mask on the mesh
alert.mask.show = "Masker tonen";
// Hide the painted mask on the mesh
alert.mask.hide = "Masker verbergen";
// Selection refers to the objects that are currently selected
alert.selection.lock = "Selectie vergrendelen";
// Selection refers to the objects that are currently selected
alert.selection.unlock = "Selectie ontgrendelen";
// Hide the objects that are not selected
alert.selection.isolate = "Selectie isoleren";
// Show the objects that are hidden
alert.selection.showAll = "Alles tonen";
// Project quick saving
alert.quickSave = "Opslaan...";
// Painting on the object was hidden but the user did paint the object
alert.forcePainting.fill = "Schilderen tonen geactiveerd, [Alles schilderen] werd gebruikt.";
// Painting on the object was hidden but the user started to paint on the object
alert.forcePainting.tool = "Schilderen tonen geactiveerd, het object was geschilderd.";
// See Glossary (Multiresolution)
alert.multiresLost = "Multiresolutie gaat verloren!";
// Boolean cut mode will ignore some features
alert.booleanIgnored = "Booleaan negeert gemaskeerde of verborgen gebieden!";
// The user is starting an operation that can lead to a crash
alert.range.warning = "De detailwaarde is hoog en kan veel geheugen vereisen!";
// Autosave popup
alert.autoSave.auto = "Automatisch opslaan in... $0s";
// The selected object doesn't have any layers
alert.needLayer = "De huidige tool vereist een actieve laag.";
// The user decided to hide the painting on the objects
alert.paintingHidden = "Schilderen is verborgen!";
// The user decided to hide the masking on the objects
alert.maskingHidden = "Masker is verborgen!";
// The user decided to display hidden faces
alert.hideIgnored = "Verbergen wordt genegeerd!";
// The selected object doesn't have any layers
alert.noPartialWireframe = "Partieel tekenen is uitgeschakeld wanneer wireframe wordt weergegeven.";
// The user has selected a tool that is more intuitive to use when the camera is in orthographic mode
alert.shapeOrthographic = "Overweeg een orthografische camera te gebruiken als u perspectiefvervorming wilt vermijden bij gebruik van de schermprojector.";
// Trial version has a limited number of undo
alert.state.trial = "Proefversie: ongedaan maken geannuleerd";

background = "Achtergrond";
// A flat color will be displayed in the background of the scene
background.color = "Kleur";
// 2 color with rotation
background.gradient = "Kleuroverloop";
// The environment (HDRI) will be displayed in the background
background.environment = "Omgeving";
background.blur = "Vervagen";
background.exposure = "Belichting";

// Image that the artist uses as a reference
background.imageEnable = "Referentiebeeld";
// The image will be displayed in overlay (used as a reference by the artist)
background.imageOverlay = "Overlay";
// Opposite of transparency (Alpha)
background.imageAlpha = "Ondoorzichtigheid";
background.imageReset = "Instellingen herstellen";
background.imageTransform = "Transformatie";
// X screen coordinate of the image reference
background.imageX = "Positie X";
// Y screen coordinate of the image reference
background.imageY = "Positie Y";
// Rotation of the reference image
background.imageRotation = "Rotatie";
// Scale of the reference image
background.imageScale = "Schaal";
// Auto adjust the reference when moving the camera
background.lock.image = "Synchroniseer met cameravergrendeling";
background.lock.image.help = "Wanneer de camera vergrendeld is met de Snap Cube, volgt de referentie-afbeelding de beweging van de camera.";
// When exiting camera lock
background.lock.exit = "Reset bij ontgrendeling:";
background.lock.exit.none = "FoV aanpassen";
background.lock.exit.none.help = "Houd afbeelding en camera zoals ze zijn.
Als het in perspectief is, pas dan alleen het gezichtsveld aan.";
background.lock.exit.all = "Alles Reset";
background.lock.exit.all.help = "Reset zowel de positie van de afbeelding als de camera.";
background.lock.exit.perspective = "Indien Perspectief";
background.lock.exit.perspective.help = "Als het in perspectief is, reset dan de afbeelding en de positie van de camera.";

// Blend: normal
blend.normal = "Normaal";
// Blend: darker
blend.darker = "Donkerder";
blend.darker.darken = "Donker maken";
blend.darker.multiply = "Vermenigvuldigen";
blend.darker.linearBurn = "Lineair verbranden";
blend.darker.colorBurn = "Kleurverbranden";
// Blend: lighter
blend.lighter = "Lichter";
blend.lighter.lighten = "Lichter maken";
blend.lighter.screen = "Scherm";
blend.lighter.linearDodge = "Lineaire doodge";
blend.lighter.colorDodge = "Kleur doodge";
// Blend: contrast
blend.contrast = "Contrast";
blend.contrast.hardLight = "Hard licht";
blend.contrast.softLight = "Zacht licht";
blend.contrast.overlay = "Overlay";
blend.contrast.hardMix = "Harde mix";
blend.contrast.linearLight = "Lineair licht";
blend.contrast.vividLight = "Levendig licht";
blend.contrast.average = "Gemiddelde";
// Blend: inversion
blend.inversion = "Inversie";
blend.inversion.exclusion = "Uitsluiting";
blend.inversion.difference = "Verschil";
// Blend: cancelation
blend.cancelation = "Annulering";
blend.cancelation.divide = "Verdeling";
blend.cancelation.subtract = "Aftrekken";
// Blend: component
blend.component = "Component";
blend.component.luminosity = "Helderheid";

// Camera (point of view in 3D)
camera = "Camera";
cameras = "Camera's";
camera.view = "Weergave";
// Copy the views
camera.updateView = "Kijkhoek bijwerken?";
// Add a new camera
camera.addView = "Weergave toevoegen";
// Focus on the camera
camera.focus = "Focus";
// Add on the camera camera
camera.focusOn = "Focus op $0";
// Camera projection, Orthographic or Perspective
camera.projection = "Projectie";
// Camera projection, Orthographic or Perspective
camera.projection.orthographic = "Orthografisch";
// Camera projection, Orthographic or Perspective
camera.projection.perspective = "Perspectief";
// camera Vertical Field of View
camera.fov = "Verticaal gezichtsveld";
// Camera Field of View hint
camera.focal = "focaal $0mm (35mm sensor)";
// Rotation mode controls how the user will interact with the camera rotation
camera.rotation = "Rotatie";
// Camera interaction mode, 2 degrees of freedom (synonym: Orbit)
camera.rotation.orbit = "Draaischijf";
// Camera interaction mode, 3 degrees of freedom
camera.rotation.trackball = "Trackball";
camera.rotation.trackball.help = "Trackball biedt meer vrijheid; je kunt de camera ook met 2 vingers rollen.";
// Camera interaction mode, 1st person view
camera.firstPerson = "Eerste Persoon";
// How sensitive the camera is (synonym: sensitivity)
camera.speed = "Snelheid";
// Camera rotation sensitivity
camera.speed.rotation = "Rotatie";
// Camera translation sensitivity
camera.speed.panning = "Vertaling";
// Camera zooming sensitivity
camera.speed.zooming = "Inzoomen";
// Reset camera position
camera.resetView = "Weergave herstellen";
// Align the view (snap to nearest 90° angle)
camera.snapView = "Snapshot-weergave";
// Warning (camera is snapped and it switched to orthographic)
camera.snapOrthographic.warning = "Camera is vastgezet (orthografisch)";
// Switch to orthographic view when the view is snapped
camera.snapOrthographic = "Orthografische snap";
camera.snapOrthographic.help = "Deze optie werkt ook bij gebruik van de Snap Cube in de hoek.";
// The Camera pivot is the point around which the camera rotates
camera.pivot = "Draai punt actualiseren...";
// When we double tap on the object with the finger/stylus
camera.doubleTapMesh = "Dubbel tik op object";
// When we double tap on the background with the finger/stylus
camera.doubleTapBackground = "Dubbel tik op achtergrond";
// When we double tap on the background with the finger/stylus
camera.doubleTapBackgroundFocus.toggle = "Wisselen";
// Focus on the selection
camera.doubleTapBackgroundFocus.selection = "Selectie";
// Focus on the entire scene
camera.doubleTapBackgroundFocus.scene = "Scène";
// When double tapping with the finger/stylus, the camera pivot will be updated
camera.doubleTapPivot = "Bij dubbel tikken";
camera.doubleTapPivot.help = "Werk het draaipunt bij wanneer dubbel wordt getikt op het objectoppervlak.";
// Allow new pivot even when zooming outside the object surface
camera.airPivot = "Sta luchtpunt toe";
camera.airPivot.help = "Sta een nieuw draaipunt toe, zelfs bij inzoomen buiten het objectoppervlak.";
// Update the pivot when you start interacting with the camera
camera.autoPivot = "Wanneer de camera begint te bewegen";
camera.autoPivot.help = "Werk het draaipunt bij wanneer je begint te werken met de Camera.";
// Move the camera so that it focus on the intersection point
camera.doubleTapFocus = "Focus";
camera.doubleTapFocus.help = "Wanneer je dubbel tikt op het object, zal de Camera zich verplaatsen en focussen op het gekozen punt.";
// Disable XY panning when unzomming
camera.centerZoomOut = "Centreren beeld bij uitzoomen";
camera.panZoomOut.help = "Wanneer deze optie is uitgeschakeld, blijft deze draaipositie intact.";

// Toolbox context (when expanded), multiple objects are selected
context.multiselection = "Multiselectie";
// There is 0 nodes/items selected
context.noSelection = "Geen selectie";

// Curve type, presets lets the user chooses between predefined curves
curve.preset = "Preset";
// Quick curve x side shift
curve.shift = "Shift";
// Curve type, https://en.wikipedia.org/wiki/Centripetal_Catmull%E2%80%93Rom_spline
curve.catmull = "Catmull-Rom";
// Curve curve, https://en.wikipedia.org/wiki/Spline_(mathematics)
curve.spline = "Spline";
curve.bspline = "B-spline";
curve.precision = "Nauwkeurigheid";
// merge or collapse 1 point into another
curve.merge = "Samenvoegen";
// snap
curve.snap = "Snap";
curve.snap.offset = "Offset";
curve.snap.offset.help = "Een waarde van 100% is gelijk aan de straal van de buis.";
curve.snap.surface = "Oppervlak";
curve.snap.vertex = "Vertex";
curve.snap.grid = "Grid (indien vastgeklikt)";
// Regular spaced sampling
curve.uniform = "Uniform";
curve.uniform.help = "De kromme wordt regelmatig bemonsterd om een uniforme dichtheid te garanderen.

U kunt deze optie uitschakelen om de randlussen een beetje te beheersen door nieuwe controlepunten aan de kromme toe te voegen.";
// Display the falloff curve in a symmetric way
curve.symmetric.help = "Geef de val deze curve symmetrisch weer.

Deze optie is alleen een visuele cue, het beïnvloedt de val zelf niet";
curve.radius = "Radius";
curve.twist = "Draai";
curve.spiral = "Spiraal";
curve.spiral.twist = "Draai hoek";
curve.spiral.scale = "Schaal";
curve.spiral.offset = "Offset";
curve.spiral.angle = "Hoek verschuiving";
curve.pivot = "Draaipunt";
curve.pivot.self = "Zelf";
curve.pivot.children = "Kinderen";

// Set the desired FPS (frame per second, refresh rate)
debug.targetFps = "Doel FPS";
debug.targetFps.help = "Wanneer uitgeschakeld, betekent de standaardwaarde dat deze synchroniseert met de verversingssnelheid van het scherm.";

// Warning about UVs (using extra memory)
debug.uvPrimitive.warning = "Schakel deze optie uit als u geen UV's nodig hebt.

Meshes met UV's zullen meer geheugen gebruiken.";
// Debug option, Normalize means transforming the data so that it fits in [0-1] the range
debug.uvNormalize = "Normaliseer UV's";
debug.uvNormalize.help = "Nomad zal de UV's binnen de [0-1] tegel normaliseren.";

// Debug option, display an window with some debugging logs
debug.logs = "Logboeken";
// Model shortcut window
debug.shortcut = "Sneltoetsvenster";
// Debug option, overrides the rendering to display the depth buffer
debug.heightmap = "Hoogtekaart";
// Debug options, graphical stuffs
debug.graphics = "Grafische elementen";
// Debug options, generate screenshots with size compatible with the iOS store
debug.thumbnails = "Maak winkelminiaturen";

// Open file explorer
file.explore = "Verken";
// Open file explorer
file.scope = "Bereik";
file.scope.internal = "Intern";
file.scope.internal.help = "Standaardgedrag, hetzelfde als mobiel.
Projecten worden alleen opgeslagen in de hoofdmap van Nomad.";
file.scope.external = "Op de plaats";
file.scope.external.help = "Bij het importeren van een project van buitenaf, zal opslaan het oorspronkelijke bestand overschrijven.
Automatisch opslaan wordt niet ondersteund voor externe projecten.";
// Empty list: there is no projects
file.project.load = "Project herladen bij opstarten";
// Empty list: there is no projects
file.project.empty = "U heeft nog geen project opgeslagen!";
// The current opened project has some unsaved changes
file.project.unsaved = "Niet-opgeslagen wijzigingen!";
// The user will loose its project's unsaved changes
file.project.loseUnsaved = "U verliest niet-opgeslagen wijzigingen!";
// Indicates to the user that the project thumbnail corresponds to the last manual save
file.project.lastManualSave = "Voorvertoning van de laatste handmatige opslag";

file.project = "Project";
// Save current project (or overwrite if the project has already been saved once)
file.project.save = "Opslaan";
// E.g: Save "my_project"?
file.project.save.confirm = "Opslaan $0?";
// Make a copy
file.project.saveAs = "Opslaan als";
// Overwrite another project
file.project.overwrite = "Overschrijven";
// E.g: Overwrite "my_other_project"?
file.project.overwrite.confirm = "Overschrijven $0?";
// Open a project
file.project.open = "Openen";
// E.g: Open "my_project"?
file.project.open.confirm = "Openen $0?";
// E.g: Clone "my_project"?
file.project.clone.confirm = "Kloon $0?";
// Load another project and add/append all its data to the current scene
file.project.add = "Toevoegen aan scène";
// E;g: Add "my_other_project" to the scene?
file.project.add.confirm = "Toevoegen $0 aan de scène?";
// Reset the scene and create a new project
file.project.new = "Nieuw";
file.project.new.confirm = "Nieuwe scène maken?";
// Delete a project (not corresponding to the currently opened one)
file.project.delete.confirm = "Verwijder $0?";
// Delete a project (corresponding to the currently opened one)
file.project.delete.confirmActive = "Verwijder $0?

Dit is het huidige actieve project!";

// Auto save section
file.autoSave = "Automatisch opslaan";
file.autoSave.confirm = "Automatisch opslaan uitschakelen?";
file.autoSave.help = "Sla je project op een apart bestand op met regelmatige tussenpozen.

Het autosave-bestand is te vinden op:";
// Interval in minutes in which the auto save popup will appear
file.autoSave.popup = "Popup time-out";
// In minutes
file.autoSave.minutes = "Timer popup";
// Delete the current autoSave data
file.autoSave.delete = "Automatisch opslaan verwijderen";
// Open the outdated auto save
file.autoSave.open.manual = "Verouderde handmatige opslag openen";
file.autoSave.open.auto = "Verouderde automatische opslag openen";

// color space (linear or srgb), do not translate linear/srgb if there is a doubt
file.colorSpace = "Kleurruimte";
file.colorSpace.help = "Probeer deze optie om te schakelen als de kleuren onjuist lijken.";
file.colorSpace.linear = "Lineair";
file.colorSpace.srgb = "sRGB";

// Configure imports option
file.importSettings = "Importeeropties";

// Load interface preference settings when opening a scene file
file.import.guiSettings = "Behoud gui-instellingen";
file.import.guiSettings.help = "Bij openen of importeren van een projectbestand worden alle interface-voorkeuren geladen die in het project zijn ingebed.";
// OBJ have "groups" and "objects", by default groups are ignored, use this option to consider groups as separate objects
file.import.obj.splitByGroup = "Splits OBJ per groepen";
file.import.obj.splitByGroup.help = "Wanneer ingeschakeld, zal Nomad de OBJ-groepen splitsen in afzonderlijke objecten.";
// Merge all the object layers at when loading a file (deleting them in the process)
file.import.mergeLayers = "Lagen Samenvoegen";
// Ignore the textures present in the file to load
file.import.skipTextures = "Sla texturen over";
// Do not fiddle with the object topology when loading the file
file.import.keepTopology = "Behoud topologie";
file.import.keepTopology.help = "Gebruik deze optie als je niet wilt dat Nomad de topologie van de geïmporteerde mesh aanpast.

Het doet de volgorde van vertex/faces, verwijdert dubbele vertex/faces niet en verwijdert geen ongebruikte vertices.";

// Import file section
file.import.title = "Importeren";
file.import.title.help = "Ondersteund formaat:";
// The user imports a scene file that will replace the current scene
file.import.open = "Openen";
file.import.open.confirm = "Nieuw bestand importeren?";
// The user imports a scene file that will be added/appended the current scene
file.import.add = "Toevoegen aan scène";
file.import.add.confirm = "Nieuw bestand importeren?";

// Export scene file
file.export = "Exporteren";

// Filter nodes that we want to export
file.select.include = "Inclusief";
file.select.all = "Alles";
file.select.visible = "Zichtbaar";
file.select.selected = "Geselecteerd";
file.select.unselected = "Ongekozen";

// Export each node in a separate file
file.export.separate = "Eén bestand per object";

// Export the current selected objects instead of the entire scene
file.onlySelection = "Alleen geselecteerde objecten opnemen";
file.onlySelection.help = "Voeg alleen de selectie toe, in plaats van de hele scène.";
// Tries to generate quad (rectangle polygon) from triangles
file.convertToQuad = "Quads reconstrueren";
file.convertToQuad.help = "Herbouw quads van driehoeken door driehoeken te koppelen (als ze aangrenzend in de bestanden zijn).";
// ----------------------------------------------
// Whether we include the textures in the exported file
file.export.texture = "Texturen";
// Baking means transfering/converting
file.export.texture.help = "Met deze optie worden de vertexkleuren niet in de texturen gebakken.

Het omvat alleen texturen als het object texturen heeft op zijn materiaal.";
// ----------------------------------------------
file.export.color0 = "Vertex kleuren";
file.export.color1 = "PBR verf";
file.export.color1.help = "Exporteer ruwheid, metaalheid en masker schildering. Dit zal genegeerd worden door andere software.";
// ----------------------------------------------
// Whether we include normals vector in the exported file
file.export.normal = "Normaal";
file.export.normal.help = "Controleer deze optie als je het bestand in andere software wilt openen.

Nomad negeert de almalig deze normale altijd, omdat het ze opnieuw berekent.";
// ----------------------------------------------
file.export.tangent = "Richting";
file.export.tangent.help = "Schakel deze optie in als je het bestand in andere software wilt openen.

Tangenten worden alleen gebruikt als het model een normaal kaart heeft.

Nomad negeert altijd de tangenten omdat deze opnieuw worden berekend.";
// ----------------------------------------------
file.export.nomad.help = "Nomad Sculpt intern bestandsformaat.

Dit formaat wordt niet geladen op andere software, dit is voornamelijk voor herimportdoeleinden.";
// ----------------------------------------------
// Whether we include layers in the exported file (see glossary for layer)
file.export.gltf.layer = "Lagen";
file.export.gltf.layer.help = "Exporteer lagen als morfen. Officieel ondersteund door glTF, dus het zou ook op andere software moeten werken.";
// Whether we include painting of layers in the exported file (see glossary for layer)
file.export.gltf.layerPaint = "Laag schilderen";
file.export.gltf.layerPaint.help = "Exporteer laagschilderen. Het wordt meestal genegeerd door andere software.";
// ----------------------------------------------
file.export.obj.warning = "Lagen en extra schilderen (ruwheid, metaalgraad en masker) gaan verloren.";
// Whether we include the vertex color in the exported file
file.export.obj.color = "Vertexkleuren";
file.export.obj.color.help = "Sommige 3d-apps kunnen dit lezen, maar niet allemaal.";
file.export.obj.color.help.append = "Kleurinformatie na de vertexen toevoegen.";
file.export.obj.color.help.hexa = "Een alternatieve manier om kleur te coderen. Het ondersteunt ook maskgegevens.";
file.export.obj.faceGroup = "Gezichtgroep";
file.export.obj.object = "Objecten Schrijven";
file.export.obj.object.help = "Houd objecten gescheiden.

Als je deze optie uitschakelt, wordt alles als één entiteit geëxporteerd.
Je moet deze optie uitschakelen als je de 'Mesh ID / Polygroup' functie van Substance Painter wilt gebruiken.";
file.export.obj.archive = "Type";
file.export.obj.archive.folder = "Map";
file.export.obj.archive.zip = "Zip";
file.export.obj.archive.help = "Sommige apps (Google Drive, One Drive, etc.) ondersteunen geen import van mappen, dus je kunt in plaats daarvan Zip gebruiken.";
// ----------------------------------------------
file.export.ply.warning = "Lagen en extra schilderen (ruwheid, metaalgraad, enz.) gaan verloren.";
// ----------------------------------------------
file.export.stl.warning = "Lagen en extra schilderen (ruwheid, metaalgraad, enz.) gaan verloren.";
// Whether we include the vertex color in the exported file
file.export.stl.color = "Vertexkleuren";
file.export.stl.color.help = "Sommige 3D-software kan het lezen, maar niet allemaal.";
// ----------------------------------------------
file.export.usd.skew = "Toestaan versteilen";
file.export.usd.skew.help = "Sta toelaten in de matrixtransformaties.

Wanneer uitgeschakeld, zal Nomad de scheve matrices opsplitsen in twee afzonderlijke schalen en roteertransformaties.";
// ----------------------------------------------
// Advanced settings
settings.advanced = "Geavanceerd";
// Means that all these options will be resetted when the app restarts
settings.notSaved = "Deze opties worden niet opgeslagen in de instellingen.";
settings.reset.title = "Instellingen";
settings.reset.title.help = "Het zal de app-voorkeuren resetten.

Sommige bronnen worden apart opgeslagen en worden NIET gereset, zoals:
• Projecten
• Toetsbindingen
• Gereedschapspresets
• HDR-omgevingen
• MatCaps
• Alphas
• Texturen (borstel)
• Referentieafbeeldingen

Merk op dat alles wat verbonden is aan het project intact blijft, zoals verlichting, Post Process, camerastandpunten, enz.";

// Reset preference settings button
settings.reset = "Herstel naar standaard";
settings.reset.confirm = "Voorkeursinstellingen herstellen?";

// Render a screenshot of the scene
file.render = "Render";
// If we include the App Interface in the exported screenshot
file.render.showInterface = "Interface tonen";
// Resolution ratio of the exported screenshot
file.render.renderRatio = "Renderverhouding";
file.render.renderRatio.help = "Een waarde van 1,0 betekent dat Nomad rendert met dezelfde resolutie als de hieronder gevraagde afbeeldingsgrootte.

Gebruik deze optie als je niet op een bepaalde resolutie kunt renderen (crasht wegens gebrek aan geheugen).";
// Desired size of the exported screenshot
file.render.size = "Definitieve grootte";
// Desired size of the exported screenshot (custom vs predefined size)
file.render.size.custom = "Aangepast";
// Screen resolution parameters for the export screenshot features
file.render.screenResolution = "Scherm";
// width of exported screenshot
file.render.width = "Breedte";
// height of exported screenshot
file.render.height = "Hoogte";
// export screenshot of the scene
file.render.warn = "De exportresolutie is hoog ($0x$1)!

Zorg ervoor dat je je project opslaat voor het geval je apparaat geen VRAM meer heeft en crasht.";
// If true, then the exported screenshot will have transparency data in the image
file.render.transparent = "Transparante achtergrond";
file.render.transparent.help = "Deze optie kan nuttig zijn als je het mesh wilt invoegen in een 2D-creatiesoftware.

Gedeeltelijke objecttransparantie wordt momenteel niet ondersteund.";

// Disable this option to have per-tool pressure settings (instead of shared settings)
pressure.useGlobal = "Gebruik globale instellingen";
pressure.useGlobal.help = "Standaard delen de gereedschappen dezelfde drukinstellingen.

Vink deze optie uit als u specifieke drukinstellingen voor dit gereedschap wilt.";

// Pencil pressure
pressure.title = "Druk";
// Pencil/Stylus pressure will be ignored
pressure.noTool = "Deze tool gebruikt geen potlooddruk.";
// The tool can support pressure but its selected stroke type will ignore it
pressure.noGrab = "Het type grab-strook zal drukinstellingen negeren.";
// The stylus pressure will impact the tool radius (more pressure -> bigger radius)
pressure.radius = "Radius";
// The stylus pressure will impact the tool intensity (more pressure -> stronger intensity)
pressure.intensity = "Intensiteit";
// Average pencil pressure event to get smoother result
pressure.average = "Drukafvlakking";
pressure.average.help = "Gemiddeld de potlooddrukgebeurtenissen voor een gladder resultaat.";
// Limit pressure to 100%
pressure.limit = "Beperk druk tot 100%";
pressure.limit.help = "Dit is een globale instelling.

Gebruik deze optie om ervoor te zorgen dat de pen druk nooit hoger is dan 100%.";

// list of inputs allowing camera interaction
gesture.camera = "Camera";
// list of inputs allowing sculpting interaction
gesture.sculpt = "Beeldhouwen";
// Select object
gesture.select = "Selecteer object";
// Finger/Touch input
gesture.finger = "Vinger";
// Stylus/Pencil
gesture.stylus = "Stylus";
// Mouse/Trackpad
gesture.mouse = "Muis";

gesture.wheel = "Muiswiel";
gesture.wheel.speed3d = "Snelheid (3d zoomen)";
gesture.wheel.speed2d = "Snelheid (2d interface)";

// long press to pick the color/material under the cursor
gesture.dropper = "Materiaal kiezer";
gesture.dropper.help = "De kleuren/materiaal kiezer kan worden geactiveerd door lang op het canvas te drukken.

Merk op dat het alleen werkt als de huidige borstel schilderen heeft ingeschakeld.";

camera.airStroke = "Luchtstreek toestaan";
camera.airStroke.help = "Sta toe dat een beeldhouwstreek begint, zelfs als de begincursor het mesh mist.

Deze optie is alleen actief voor invoer met beeldhouwen ingeschakeld en camera uitgeschakeld.";

// Three fingers on screen
gesture.three.title = "Drie vingers";
gesture.three.light = "Draai verlichting";
gesture.three.light.help = "Draai de omgeving, lichten en MatCap.";
gesture.three.radius = "Tool Radius";
gesture.three.intensity = "Tool Intensiteit";

// If this option is enabled, finger inputs on screen will use the smoothing tool
gesture.finger.smooth = "Vinger verzacht altijd";
gesture.finger.smooth.help = "Deze optie is alleen actief als een beeldhouwtool is geactiveerd.";
// If enabled, the pressure will be taken into account even if it's not coming from a recognized stylus
gesture.unknownPressure = "Sta niet-herkende druk toe";
gesture.unknownPressure.help = "Selecteer deze optie als de druk niet werkt met uw potlood of als u drukvinger nodig heeft.";

// Action when we press an Android pencil button
gesture.pencilAction.android = "Potloodknop";
// Action when we use the Pencil double Tap
gesture.pencilAction.ios = "Potlood dubbele tik";
gesture.pencilAction.ios.help = "Alleen actief voor Apple Pencil 2e generatie.";
// Pencil button (or iOS pencil double tap) action: Nothing
gesture.pencilAction.none = "Geen";
// Pencil button (or iOS pencil double tap) action: flip adding/substracting sculpt matter setting
gesture.pencilAction.alt = "Toevoegen/Aftrekken";

// Enable Mask gesture by tapping once on the screen
gesture.mask.oneTap = "Snelle toetsen";
gesture.mask.oneTap.help = "Sta de Mask-snelkoppeling toe door eenmaal op het scherm te tikken, zonder de sneltoets voor de mask te hoeven vasthouden.

Dit staat de volgende gebaren toe:
• tik op de achtergrond om het masker om te keren
• tik op een gemaskeerd gebied om het masker te vervagen
• tik op een ongemaskeerd gebied om het masker te verscherpen";
// Hold the finger on screen to toggle between two tools: Mask and SelMask
gesture.mask.holdStroke = "Strook";
gesture.mask.holdStroke.help = "Lang indrukken schakelt tussen Mask en SelMask en start een nieuwe streek.

Aan het einde van de streek wordt het vorige gereedschap opnieuw geselecteerd.";
gesture.mask.holdIdle = "Gereedschap";
gesture.mask.holdIdle.help = "Lang indrukken en loslaten zonder te bewegen om te wisselen tussen Mask en SelMask.";

// Shortcut customization, choose the action that the shortcut will performan (select tool, etc)
gesture.shortcut = "Snelkoppeling";

// Shortcuts to undo/redo
gesture.history = "Geschiedenissnelkoppelingen";
gesture.history.help = "• Ongedaan maken: tik met 2 vingers
• Opnieuw: tik met 3 vingers";
gesture.history.hold = "Lang indrukken";
gesture.history.hold.help = "Houd 2/3 vingers ingedrukt.";

// Size rejection is when we try to ignore the palm of the hand when we interact with a tablet
gesture.palmRejection = "Palmafwijzing";
gesture.palmRejection.confirm = "Zorg ervoor dat u deze optie uitschakelt als u problemen ondervindt bij interactie met het canvas!";
gesture.palmRejection.help = "Weiger invoer als de contactoppervlakte groter is dan deze waarde.

Werkt mogelijk niet op elk apparaat.";
// Size in pixel for the palm rejection feature
gesture.palmRejection.size = "Maximale grootte drempelwaarde";

// Smoothing strategy
extract.polish.all = "Alle";
extract.polish.sharp = "Scherpe rand";
extract.polish.border = "Alleen grenzen";
// Smooth the border in a way that it matches completely with its dual
extract.polish.syncBorder = "Synchroniseer rand";
// topology of extracted mesh
extract.edgeLoop = "Randlus (zijde)";
extract.edgeLoop.auto = "Automatische randlus";
extract.edgeLoop.division = "Verdeling";
// The thickness of the extracted mesh (from the painted mask)
extract.thickness = "Dikte";
// Carve the mask into the surface
extract.carve = "Graveren";
// Extract a new mesh from the painted mask
extract = "Extraheer";
// Preview extract
extract.preview = "Voorbeeld";
// Extract two new mesh from the painted mask and from the unmasked area
extract.split = "Splitsen";
// How should we close the topology of the extracted object
extract.action = "Sluitingsactie";
extract.action.help = "• Geen
Eenvoudig het onderdeel extraheren en het geëxtraheerde onderdeel open laten.

• Vullen
Gat wordt gevuld en gladgemaakt.
Gebruik deze optie niet voor vlakke oppervlakken.

• Schil
Sluit de geëxtraheerde vorm af door de diktewaarde te gebruiken.

• Laag
Exporteer het laagverschil (alleen sub-menu laag).";
// Do not close the mesh (leave it open)
extract.action.none = "Geen";
// Close the mesh with a hole-filling algorithm
extract.action.fill = "Vullen";
// Close the mesh by adding a thickness on the surface
extract.action.shell = "Schaal";
// Close the mesh by using the layer data as a difference thickness
extract.action.layer = "Laag";

// uv part of revolution surface
genus.main = "Hoofd";
genus.hole = "Gat";
genus.bottom = "Bodem";
genus.top = "Top";

// History, list of undo/redo
history = "Geschiedenis";
// First "undo" state
history.root = "Basis";
history.undoConfirm = "Bevestigt u het ongedaan maken van al deze bewerkingen?";
history.undoWarning = "Als u daarna nog een bewerking uitvoert, kunt u veel wijzigingen kwijtraken.";
// Settings concerning the history stack of undo/redo
history.stack = "Stapelen";
// Actions to include in the undo/redo stack
history.include = "Acties opnemen";
// include lighting editing in the undo/redo
history.includeLights = "Lichten";
history.includeLights.help = "Als deze optie is uitgeschakeld, wordt het verplaatsen van de lichten met de Gizmo nog steeds opgenomen, omdat dit invloed kan hebben op andere objecten in de scènehierarchie.";
// include postProcess editing in the undo/redo
history.includePostProcess = "Nabewerking";
// include shading parameters (MatCap & HDRIs) editing in the undo/redo
history.includeShading = "MatCaps & HDRIs";
// Can limit the stack of undo/redo size
history.limitSize = "Geschiedenislimiet";
history.limitSize.help = "Maximale grootte van de geschiedenis.

De geschiedenis wordt bijgewerkt bij de volgende geregistreerde operatie.";
// Limit the number of undo in the history stack
history.limitStack = "Stapel limiet";
history.limitStack.help = "Maximale aantal bewerkingen dat de applicatie kan bewaren.

De geschiedenis wordt bijgewerkt bij de volgende geregistreerde operatie.";
// Value where you define how many operations you can undo before it displays a warning
history.rangeProtect = "Maximaal te herstellen";
history.rangeProtect.help = "Als je ver teruggaat in de geschiedenis, verschijnt er een bevestigingsdialoog voordat er veel bewerkingen ongedaan worden gemaakt.";
// When enabled, each time the user undo an operation it will undo the camera position as well
history.restoreCamera = "Camera herstellen";
history.restoreCamera.help = "Schakel deze optie in om het opgeslagen camerastandpunt te herstellen wanneer u een actie ongedaan maakt/herhaalt.";
// Undo
history.undo = "Ongedaan maken";
// Redo
history.redo = "Opnieuw doen";
// Shown during undo
history.state.undo = "Ongedaan maken: $0";
// Shown during redo
history.state.redo = "Opnieuw doen: $0";
// Shown during undo/redo
history.state.voxelRemesh = "Voxel-mesh";
// Shown during undo/redo
history.state.surfaceRemesh = "Oppervlak remesh";
// Shown during undo/redo
history.state.multiresLevel = "Opschalen van resolutie";

// Debugging/Inspect object material (view channel separately color, roughness, normal, uv, etc)
inspect = "Inspecteur";
// Inspector but SHORT
inspect.short = "Inspecteren";
// Display the material channel on the background
inspect.onBackground = "Op Achtergrond";
// Display the material channel on the mesh
inspect.onMesh = "Op Mesh";
// Show UV seams
inspect.seams = "Naden";

// Interface customization
interface = "Interface";

// Resize window (should be short)
interface.resize = "Formaat aanpassen";

// UI customization: one item row will stands on one line (synonym: Inlined)
interface.compact = "UI: Compact";

// UI customization: each row of the list will be bigger
interface.expandList = "UI: Lijst uitbreiden";
// UI customization: each row of the list will be bigger
interface.expandList.help = "Gewoon een UI-optie voor eenvoudigere lijstbeheer.";

// Add shortcuts buttons to the bottom of the screen
interface.shortcut.bottom = "Sneltoetsen toevoegen (onderkant)...";
// Floating window
interface.shortcut.float = "Sneltoetsen toevoegen (venster)...";

// Interface option (main base color)
interface.colorBase = "Kleurbasis";
// Interface option (accent widget color)
interface.colorSelect = "Kleurwidget";
// Interface option (if the menus are transparent or opaque)
interface.panelTransparent = "Transparant paneel";
// Interface option (panel blurriness, if the menus are transparent)
interface.blurFactor = "Wazigheid sterkte";
// Interface option (color of panels, if the menus are transparent)
interface.colorBaseTransparent = "Kleurenpaneel";

// Interface color style
interface.preset.title = "Voorinstellingen";

// Reset interface settings
interface.resetAll = "Stijl opnieuw instellen";
interface.resetAll.confirm = "Interface-instellingen opnieuw instellen?";
// help popup when hovering
interface.hoverHelp = "Hulp pop-up bij zweven";
// Interface option (main base color)
interface.iconSupport = "Knop met hoog contrast";
interface.iconSupport.help = "Een alternatieve stijl voor knoppen die ze beter zichtbaar maakt wanneer ze zijn ingeschakeld.

Als deze op Auto is ingesteld, zal Nomad deze modus gebruiken wanneer het UI-kleurcontrast tussen ingeschakeld/uitgeschakeld laag is.";
// Interface customization
interface.flipTop = "Spiegel bovenste balk";
// Interface customization
interface.flipBottom = "Spiegel onderste balk";
// Interface customization
interface.flipMiddle = "Spiegel zijbalken";
// list of tools
interface.toolbox = "Gereedschapskist";
// hide toolbox by default
interface.toolbox.hide = "Verborgen";
// Interface customization (the toolbox is a grid, we can adjust the column count)
interface.toolbox.columns = "Kolommen";
// Interface customization (the toolbox is a grid, we can adjust the column count)
interface.toolbox.rows = "Rijen";
// Reset the tool's order in the toolbox
interface.toolbox.resetOrder = "Reset volgorde";
// Colored text and icon
interface.toolbox.color = "Gekleurd";
// Top bar
interface.top.title = "Top balk";
interface.top.responsive = "Responsief";
interface.top.responsive.help = "Deze optie is vooral relevant voor kleine schermen.";
interface.top.responsive.multiline = "Meerdere lijnen";
interface.top.responsive.scroll = "Scroll";
interface.top.responsive.collapse = "Inklappen";
interface.top.alt = "Alternatieve volgorde";
interface.top.alt.help = "Alternatief pictogram voor de volgorde van het topmenu.

Menu's met betrekking tot mesh-bewerking bevinden zich meestal aan de tegenoverliggende kant van het scènemenu, wat kan helpen bij scènes bewerken.";
// Scale the interface
interface.scale = "Algemene schaal";
// Spacing between widgets
interface.cursorStep = "Verticale afstand";
// Width of the interface panels
interface.panelWidth = "Paneelbreedte";
// Size of fonts
interface.fontScale = "Lettertypeschaal";
// Inset
interface.inset.title = "Randafstanden";
interface.inset.title.help = "Je kunt deze waarden alleen wijzigen als je problemen hebt met het bedienen van de knoppen aan de schermranden.

Als de schuifregelaar is uitgeschakeld, zal Nomad de veilige gebiedswaarden gebruiken die het apparaat zelf retourneert.";

// (see Glossary for Layer)
layer = "Laag";
layers.syncTransform = "Transformatie synchroniseren";
layers.syncTransform.help = "Als ingeschakeld, worden alle niet-geselecteerde lagen aangepast op basis van de rotatie, schaal en helling van de transformatie.

Deze optie uitschakelen als de andere lagen bedoeld zijn om te worden gebruikt zonder de nieuwe transformatie die je toepast.

Bij instelling op automatisch worden alleen de zichtbare lagen aangepast.";
// (see Glossary for Layer)
layers.lock = "Behouden bovenste lagen details";
// (see Glossary for Layer)
layers.lock.yes = "Bovenste lagen vergrendelen?";
// (see Glossary for Layer)
layers.lock.warning = "Tijdens het sculpturen wordt de vervorming veroorzaakt door de bovenste lagen genegeerd.

Echter, de details van deze lagen blijven zichtbaar.

Deze optie werkt alleen als de bovenste lagen relatief kleine schaaldetails hebben.";
// (see Glossary for Layer)
layers.addLayer = "Voeg laag toe";
// (see Glossary for Layer)
layer.factors = "Kanaalfactoren";
// (see Glossary for Layer)
layer.factor = "Factor";
// (see Glossary for Layer)
layer.offset = "Offset";
// Layer blend mode
layer.blendMode = "Laagmodus";
// (see Glossary for Layer)
layer.base = "Basis";
layer.base.nothing = "Niets om te extraheren!";
layer.base.background = "Achtergrondmateriaal";
layer.base.background.help = "Als actief, worden alleen de materiaalwaarden die verschillen van het achtergrondmateriaal geëxtraheerd.";
// (see Glossary for Layer)
layers = "Lagen";
layers.title = "Lagen";
// (see Glossary for Layer)
layers.title.help = "Lagen kunnen plaatsverschuivingen en schilderwerk opnemen, wat nuttig kan zijn voor een niet-lineaire workflow.
Bijvoorbeeld door verschillende gezichtsuitdrukkingen te experimenteren zonder afhankelijk te zijn van de geschiedenisstapel om de wijzigingen ongedaan te maken.

Voor schildergegevens worden lagen van boven naar beneden gesorteerd; dus de bovenste lagen maskeren de lagere.

Je kunt een deel van de laag wissen met behulp van het `DelLayer` tool.";
layers.primitive = "Lagen zijn niet beschikbaar voor primitieve objecten.";
// When there is no layer selected (see Glossary for Layer)
layers.baseSelected = "Geen";

light = "Licht";
lights = "Lichten";
// Intensity of light
light.intensity = "Intensiteit";
// Color of light
light.color = "Kleur";
// Kelvin (the temperature unit)
light.kelvin = "Kelvin";
// Temperature in Kelvin (Alternative way to compute the color of the light)
light.temperature = "Temperatuur";
// The attachment of a light defines how it will move when the user moves the camera
light.attachment = "Bijlage";
// The light will stay still even if the user moves the camera
light.attachment.fixed = "Vast";
// The light will move along the camera
light.attachment.camera = "Camera";
light.attachment.help = "• Vast
Lichtrichting zal niet veranderen.

• Camera
Lichtrichting is afhankelijk van het camerazicht.";
// Light type (directional, spot, point)
light.type = "Type";
// Directional light (synonym: sun light)
light.type.directional = "Richting";
light.type.sun = "Zon";
// Directional light (synonym: sun light)
light.type.environment = "Omgeving";
light.type.hdri = "HDRI";
// Spot light emits light in a single direction, restricted by a cone shape.
light.type.spot = "Spot";
// Point light emits lights everywhere (synonym: omni, omnidirectional)
light.type.point = "Punt";
// For directional light (angle jitter)
light.angle = "Hoek";
// For point/spot light (offset jitter)
light.size = "Grootte";
// Cone angle for spot angles
light.spot.angle = "Conushoek";
// Softness of the spot light
light.spot.softness = "Zachtheid";
// Position of the light
light.position = "Positie";
// Enable or disable shadows for a light
light.shadow.cast = "Schaduw";
// Point light only works with "screenspace" shadow type (not "shadow map")
light.shadow.pointTip = "Puntlicht ondersteunt alleen schermruimte schaduwen.";
light.shadow.type = "Schaduwtype";
// https://en.wikipedia.org/wiki/Shadow_mapping
light.shadow.type.shadowMap = "Schaduwmap";
// Shadows computed with only the information visible on screen
light.shadow.type.screenspace = "Schermruimte";
light.shadow.type.screenspace.help = "Experimentele functie, kan in een toekomstige versie worden verwijderd.

Deze optie is bedoeld om te worden gebruikt met de zachtheidsschaduwfunctie.";
// Adjustment to fix artefacts
light.shadow.bias = "Bias";
// How blurry the shadow is
light.shadow.softness = "Zachtheid";
// Contact shadows are more precise shadows on small distance (synonym: cavity shadows?)
light.contact = "Contact";
light.contact.help = "Als automatisch is geselecteerd, zal alleen het meest dominante licht een contactschaduw hebben.";
// Thickness threshold for screen-space shadows (synonym: threshold, bias)
light.shadow.tolerance = "Tolerantie";
// Activated the light
light.visible = "Toon";
// Move the light in front of the camera (but keeps its inner orientation)
light.resetPosition = "Hernieuw";

// Object's material
material = "Materiaal";
// See glossary
material.pbrRoughnessMetalness.warning = "Ruwheid en Metaalachtigheid vereist PBR-schaduwmodus.";
// See glossary
material.pbrReflectance.warning = "Reflectievermogen vereist PBR-schaduwmodus.";
// See glossary
material.pbrRefraction.warning = "Refractie vereist PBR-schaduwmodus.";
// See glossary
material.pbrSubsurface.warning = "Ondergrond vereist PBR-schaduwmodus.";
// Value that says how much light will change direction when hitting the surface
material.ior = "Refractie-index";
// an object-level value that overrides the roughness interior/surface of the mesh
material.paintingOverride = "Override ruwheid";
// The roughness in the inside is turbidity
material.paintingOverride.help = "Er zijn twee ruwheden in het spel, één stuurt het oppervlak en één van binnen.

Er is echter maar één verfbare ruwheid, dus de twee ruwheden hebben dezelfde waarden.";
// Glossiness is simply the opposite of roughness
material.refraction.surface = "Oppervlak";
// Synonym: turbidity
material.refraction.interior = "Interieur";
// Set the roughness of the object with a value of 0
material.paintGlossy = "Glansverf";
material.paintGlossy.help = "Het object wordt beschilderd met een ruwheid en metaalheid van 0, waardoor scherpe breking mogelijk is.

Dit is hetzelfde als het gebruik van de verf-al-functie in het schildermenu met de kleur uitgeschakeld.";
// Simulate the light being absorbed when it travels through the volume.
material.absorptionEnable = "Absorptie";
material.absorptionEnable.help = "Simuleer het licht dat geabsorbeerd wordt wanneer het door het volume reist.

Dunne delen worden helder omdat ze meer licht doorlaten, terwijl dikke delen donkerder worden.

Het effect hangt sterk af van de vorm van het object, er wordt alleen een benadering van de objectdikte gebruikt.";
material.absorptionFactor = "Factor";
// Depth means how far the light can travel under the surface
material.subsurfaceDepth = "Diepte";
// Enable translucency (same as subsurface but only affect lights that enter a solid and escape from the other side)
material.translucency = "Translucentie";
material.translucency.help = "Je moet een licht hebben dat schaduwen werpt om translucentie te zien.";
// Opacity factor, the opposite of transparency (synonym: Alpha)
material.opacity = "Ondoorzichtigheid";
// Fully opaque material
material.type.opaque = "Ondoorzichtig";
material.type.opaque.help = "Dit is het standaard materiaaltype.

De geverfde vertex alpha, de textuur van de opaciteit of het alfakanaal van het kleurkanaal worden nog steeds in aanmerking genomen via dithering.

Alleen de hoofd opaciteitschuifregelaar wordt genegeerd.";
// Fully opaque material
material.type.shadowCatcher = "Schaduw Vanger";
material.type.shadowCatcher.help = "Maak het object volledig transparant, behalve de schaduwen die door licht worden geworpen.

Deze modus wordt meestal gebruikt op vlakke geometrie.";
material.type.shadowCatcher.warning = "Er zijn geen lichten met schaduwen in uw scène, de Schaduw Werper zal niet actief zijn.

Anders, als de schaduw vanger volledig metallic is, kan de Schaduw Vanger de scène reflecteren indien SSR (Reflectie) Post Process is ingeschakeld.";
// See glossary
material.type.subsurface = "Suboppervlak";
material.type.subsurface.help = "Om het beste resultaat te krijgen, kunt u overschakelen naar de PBR-schaduwmodus en ten minste één gericht licht gebruiken, idealiter in een gedimde omgeving.";
// Transparency mode, alpha blendingd
material.type.blending = "Mengmodus";
material.type.blending.help = "Maak het object halfdoorzichtig door de ondoorzichtigheidswaarde aan te passen.

Houd er rekening mee dat je door realtime beperkingen opvallende visuele artefacten kunt hebben als je object een complexe vorm heeft.";
// Transparency mode
material.type.additive = "Additief";
material.type.additive.help = "Maak het object halfdoorzichtig door de ondoorzichtigheidswaarde aan te passen.

Deze methode heeft de neiging om minder artefacten te hebben dan de Mengmodus, maar het object zal helderder zijn.";
// Transparency mode based on dithering
// https://en.wikipedia.org/wiki/Dither
material.type.dithering = "Dithering";
material.type.dithering.help = "Maak het object halfdoorzichtig door willekeurig sommige pixels uit te schakelen.";
// Simulate glass-like material
material.type.refraction = "Breking";
material.type.refraction.help = "Deze modus kan worden gebruikt om glasmateriaal te simuleren.

Vanwege real-time beperkingen zijn zelf-breking of gelaagde breking beperkt.";
material.castShadows = "Schaduwen werpen";
material.receiveShadows = "Schaduwen ontvangen";
// Lights are ignored, the object will be displayed with color only
material.alwaysUnlit = "Altijd onverlicht";
// Inverse the side of the object triangles
// https://en.wikipedia.org/wiki/Back-face_culling
material.flipCulling = "Inverse culling";
// How much light a surface will reflect (synonym: specular)
material.reflectance = "Reflectantie";
material.reflectance.help = "Beheer de hoeveelheid reflectie die het materiaal ontvangt voor niet-metalen materialen.

Meestal moet de standaardwaarde worden gebruikt (wat overeenkomt met de standaard 4% gereflecteerd licht bij een normale hoek).";
// Material preview in the viewport
material.preview = "Materiaalviewportvoorbeeld";
material.preview.help = "Wanneer je een materiaal wijzigt, wordt er een voorbeeld weergegeven in de viewport op het geselecteerde object.

Het voorbeeld wordt getoond terwijl je werkt met de schuifregelaars voor kleur, ruwheid, metalness, transparantie en intensiteit.";
// Menu name
menu.files = "Bestanden";
// Menu name
menu.scene = "Scène";
// Menu name
menu.multires = "Multires";
// Menu name
menu.voxel = "Voxel";
// Menu name
menu.dynamic = "DynTopo";
// Menu name (Synonym: Misc, Other)
menu.topology = "Overige";
// Menu name
menu.primitive = "Oer";
// Menu name
menu.render = "Render";
// Menu name
menu.material = "Materiaal";
// Menu name
menu.postprocess = "Nabewerking";
// Menu name
menu.camera = "Camera";
// Menu name
menu.background = "Achtergrond";
// Menu name
menu.tool = "Gereedschap";
// Menu name
menu.stroke = "Streep";
// Menu name
menu.alpha = "Alpha";
// Menu name
menu.filter = "Filter";
// Menu name
menu.falloff = "Afname";
// Menu name
menu.paint = "Schilderen";
// Menu name
menu.symmetry = "Symmetrie";
// Menu name
menu.operation = "Operatie";
// Menu name (pencil pressure)
menu.pressure = "Druk";
// Menu name
menu.gesture = "Gebaar";
// Menu name
menu.layers = "Lagen";
// Menu name
menu.settings = "Instellingen";
// Menu name
menu.interface = "Interface";
// Menu name
menu.bindings = "Aanwijzingen";
// Menu name
menu.history = "Geschiedenis";
// Menu name
menu.historySettings = "Instellingen";
// Menu name
menu.about = "Over";
// Menu name
menu.debug = "Debuggen";

// Operation on the object (action)
mesh.holes = "Gaten";
// If the object has holes, the algorithm will close them
mesh.holes.close = "Sluit gaten";
// Says how dense (number of triangles) the algorithm will use in order to fill holes
mesh.holes.detail = "Detail";
// If the mesh has disconnected parts, it will be split/separated into objects
mesh.separate = "Scheid";
// When converting the object to a triplanar primitive, some object features will be lost
mesh.triplanar.warning = "Lagen, schilderwerk en multi-resolutie gaan verloren.";
// Resolution of the triplanar grid
mesh.triplanar.resolution = "Resolutie";
// Make the triplanar a regular cube (all 3 dimension equal)
mesh.triplanar.cubic = "Forceer kubus";
// Covnert an object to a triplanar primitive
mesh.triplanar.convert = "Converteer";
// Static object means "static topology"
mesh.static = "Mesh";
// See glossary
mesh.multires = "Multires";
// Dynamic topology
mesh.dynamic = "DynTopo";

// Disable this option to have per-tool material settings (instead of shared settings)
paint.useGlobal = "Globaal materiaal";
paint.useGlobal.help = "Als deze optie is ingeschakeld, zal het geselecteerde materiaal hetzelfde zijn als de andere gereedschappen.

Let op dat het alleen de ruwheid, metalness en kleurinstellingen in aanmerking neemt.";
// The current tool will paint the object if this option is enabled
paint.usePainting = "Penselendoek";
// If true save the textures data into
paint.preset.embed = "Texturen insluiten";
paint.preset.embed.help = "De texturen zijn te vinden in de map Nomad textures/.
De materiaalvoorinstellingen zijn te vinden in de map Nomad materials/.

Wanneer deze optie is uitgeschakeld, verwijst de materiaalvoorinstelling alleen naar de textuur in de textures/ map.

U kunt deze optie inschakelen om een kopie van de texturen binnen de materiaalvoorinstelling te maken. Dit kan handig zijn als u een getextureerde voorinstelling wilt delen zonder de bijbehorende texturen te verstrekken.";
paint.preset.embed.apply = "Toepassen op alle materialen";
// Factor/Opacity of paint tool
paint.intensity = "Verf intensiteit";
// Apply the paint on the object
paint.paintAll = "Alles verven";
paint.paintAll.help = "Pas het huidige materiaal toe op het object.";
paint.paintAll.help.mask = "Gemaskerd gebied wordt niet beïnvloed.";
paint.paintAll.help.hide = "Verborgen gebied wordt niet beïnvloed.";
paint.paintAll.help.opacity = "Gebruik de tool schilder factor hierboven.";
paint.paintAll.help.layer = "Ongeschilderd gebied van een laag wordt niet beïnvloed.";
paint.strokePainting.title = "Schilderen";
// Brush stroke texture
paint.texture.warningEnable = "Streepschilderen moet geactiveerd zijn om textuurprojectie toe te staan (selectievakje bovenaan)!";
paint.texture.warningIgnored = "Huidig gereedschap kan geen texturen gebruiken!";
// use stencil mode
paint.stencil = "Stencils";
// Inherit stroke falloff option for the painting
paint.tool.help = "Gebruik de tool alpha, val en randomizer om de intensiteit van de schilderstreek te moduleren.

Deze opties worden genegeerd voor de 'alles schilderen' functie, maar de alpha wordt meegenomen voor de triplanar variant.";
// when the user choose a new item name (through iOS/Android virtual keyboard)
input.name = "Nieuwe naam";
// when the user choose a new number value (through iOS/Android virtual keyboard)
input.number = "Nieuwe waarde";
// when the user choose a new color (through iOS/Android virtual keyboard)
input.hexcolor = "Nieuwe kleur (hex formaat)";

// Post process effect
postprocess = "Post Process";
// Denoise
postprocess.denoise = "Ruis Onderdrukker";
postprocess.denoise.help = "Pas een ruisonderdrukking toe nadat alle frames zijn opgestapeld.";
postprocess.denoise.warning = "Dit is een kostbare operatie, schakel dit effect alleen in als het beeld ruis bevat.";
// Quality vs performance
postprocess.quality = "Kwaliteit";
postprocess.quality.help = "Activeer deze opties om de kwaliteit ten koste van de prestaties te verbeteren.";
// More samples means better quality but slower performance
postprocess.maxSamples = "Max monsters";
// Full resolution (1:1 resolution) instead of half resolution
postprocess.fullResolution = "Volledige resolutie";
// Number of frames that we accumulate (higher value means better quality)
postprocess.accumulateCount = "Max frameniveaus";
postprocess.accumulateCount.help = "Maximaal aantal frames om te accumuleren voordat het renderen stopt.

Wanneer het renderen stopt, zal Nomad niets doen, wat batterij bespaart.

Veel rendering functies profiteren van frame accumulatie, met name:
• Zachte Schaduwen
• Globale Verlichting
• Reflectie (SSR)
• Omgevingsocclusie
• Onderoppervlak
• Scherpte Diepte

Hoge frameaantallen zijn vooral nodig voor Zachte Schaduwen en Globale Verlichting.
Nomad kan het renderen eerder stoppen als de bovenstaande functies zijn uitgeschakeld.";
// The value is a ratio (0.5 means half resolution 2 means twice the resolution)
postprocess.renderRatio = "Render resolutie";
postprocess.renderRatio.warning = "Overschreven door het Pixel Art effect.";
postprocess.renderRatio.help = "Deze optie heeft veel invloed op de prestaties.
Het is raadzaam om een waarde lager dan x1.25 aan te houden.

Deze optie wordt niet opgeslagen in de instellingen.";
// Temporal Anti-Aliasing (no need to translate "TAA")
postprocess.taa = "Anti-aliasing (TAA)";
postprocess.taa.help = "Vermindert flikkeringen wanneer u de camera beweegt.";
// Ditherhing pixel
postprocess.dithering = "Dithering";
postprocess.dithering.help = "Toepassen van düther effecten om banding artefacten te verminderen.";
// Screen-Space Reflection (no need to translate "SSR")
postprocess.ssr = "Reflectie (SSR)";
postprocess.ssr.warning = "SSR vereist PBR shading modus.";
// Screen-Space Global Illumination (no need to translate "SSGI")
postprocess.ssgi = "Globale Illuminatie (SSGI)";
// Thickness threshold for ssgi tracing algorithm (synonym: threshold, bias)
postprocess.ssgi.tolerance = "Tolerantie";
postprocess.ssgi.warning = "SSGI vereist PBR-schaduwmodus.";
// Screen-space ambient occlusion (SSAO)
// https://en.wikipedia.org/wiki/Ambient_occlusion
postprocess.ssao = "Ambiënte Occlusie";
// How far the effect spreads
postprocess.ssao.radius = "Grootte";
// How strong the effect is
postprocess.ssao.factor = "Sterkte";
// Adjustment to fix artefacts
postprocess.ssao.bias = "Krommingsbias";
postprocess.ssao.bias.help = "Hoe gevoelig het effect is afhankelijk van de kromming van het oppervlak.";
// Depth of Field (bokeh)
// https://en.wikipedia.org/wiki/Depth_of_field
postprocess.dof = "Diepte van Veld";
// The blur factor behind the focused point
postprocess.dof.blurFar = "Verre vervaging";
// The blur factor in front of the focused point
postprocess.dof.blurNear = "Nabije vervaging";
postprocess.dof.focusTip = "Tik op een object om het focuspunt te wijzigen.";
// Bloom (light bleeding)
// https://en.wikipedia.org/wiki/Bloom_(shader_effect)
postprocess.bloom = "Bloom";
// Intensity of the effect
postprocess.bloom.intensity = "Intensiteit";
// How far the effect spreads
postprocess.bloom.radius = "Radius";
postprocess.bloom.radius.help = "Hoe wijd de bloei zich verspreidt.";
// Luminosity threshold (below this value, no bloom is generated)
postprocess.bloom.threshold = "Drempel";
postprocess.bloom.threshold.help = "Luminositeitdrempel om te beslissen of een pixel bloei uitzendt of niet.
Als de waarde 0 is, krijgt alles bloei.";
// https://en.wikipedia.org/wiki/Tone_mapping
postprocess.tone = "Toonmapping";
postprocess.tone.exposure = "Belichting";
postprocess.tone.contrast = "Contrast";
postprocess.tone.saturation = "Verzadiging";
postprocess.tone.hue = "Kleurtoon";
// No tonemapping operator is used
postprocess.tone.mapping.none = "Geen";
// A neutral tonemapping is used
postprocess.tone.mapping.neutral = "Neutraal";
// Color curves
postprocess.curve = "Kleurbewerking";
// Curve for pixel luminance
postprocess.curve.luminance = "Hoofd";
postprocess.curve.red = "Rood";
postprocess.curve.green = "Groen";
postprocess.curve.blue = "Blauw";
// Reset color grading curves
postprocess.curve.resetAll = "Alles Reset";
// https://en.wikipedia.org/wiki/Chromatic_aberration
postprocess.chromatic = "Chromatische Aberratie";
postprocess.chromatic.factor = "Sterkte";
// Darking on the edges
postprocess.vignette = "Vignet";
// How far the effect spreads
postprocess.vignette.size = "Grootte";
// How sharp the edge of the effect is
postprocess.vignette.hardness = "Hardheid";
// Unblur the image (sharpening)
// https://en.wikipedia.org/wiki/Unsharp_masking
postprocess.sharpness = "Scherpte";
postprocess.sharpness.factor = "Sterkte";
// Filmic Grain
// https://en.wikipedia.org/wiki/Film_grain
postprocess.grain = "Korrel";
postprocess.grain.factor = "Sterkte";
// Accentuate the edges of the model
postprocess.curvature = "Kromming";
// main strength of curvatre
postprocess.curvature.factor = "Factor";
// Color/Strength of concave curvature
postprocess.curvature.cavity = "Holte";
// Color/Strength of convex curvature
postprocess.curvature.bump = "Uitstulping";
// https://en.wikipedia.org/wiki/Pixel_art
postprocess.pixelArt = "Pixel Kunst";
// Override frame accumulation feature
postprocess.pixelArt.allowAccumulate = "Sta raambemonstering toe";
// Simulate scanline rendering (horizontal line)
postprocess.scanline = "Scanlijn";
postprocess.scanline.factor = "Factor";
// Spacing between lines
postprocess.scanline.spacing = "Tussenruimte";

// Geometry Primitive (box, sphere, cylinder, etc)
primitive = "Primitief";
primitive.box = "Doos";
primitive.sphereCube = "Quad Bol";
primitive.sphereUV = "UV Bol";
primitive.icosahedron = "Icosaëder";
primitive.cylinder = "Cilinder";
primitive.cone = "Kegel";
primitive.torus = "Torus";
primitive.lathe = "Draaibank";
primitive.tube = "Buis";
primitive.plane = "Vlak";
primitive.triplanar = "Triplanar";
primitive.needValidate = "Primitief moet gevalideerd worden!";

// If enabled, we can edit primitive inside the viewport
primitive.edit = "Bewerk";
primitive.edit.help = "Sta 3D bewerking toe in de viewport.

Je kunt deze functie uitschakelen als je met de Gizmo of de Transformatietool wilt werken zonder het primitief aan te passen.";

// Primitive configuration
primitive.mainConfig = "Parameter";
// Interface section where we change the topology (number of triangles/polygons)
primitive.topology = "Topologie";
// Interface section where we change the geometry (shape of the primitive)
primitive.geometry = "Geometrie";

// Validating the primitive (then it can be sculpted)
primitive.validate = "Valideren";
// Maximum number of faces of the primitives
primitive.maxFaces = "Max gezichten";
primitive.maxFaces.help = "Het maximale aantal gezichten dat een primitief kan hebben.

Deze limiet is alleen actief zolang het primitief niet gevalideerd is, daarna is de beveiliging opgeheven.";
// Synonym: Flat subdivision
primitive.linear = "Lineaire onderverdeling";
// Post as "subdivision that occurs after the primitive computation"
primitive.subdivision = "Post onderverdeling";

// Radius (of a sphere, torus, etc)
primitive.radius = "Straal";
// Make sure the two end-point of a primitive (cylinder, tube, etc) have the same size
primitive.radius.sync = "Dezelfde straal";
primitive.radius.start = "Start straal";
primitive.radius.end = "Einde straal";
// Size (of cube x dimension)
primitive.size = "Grootte";
primitive.sizeX = "Grootte X";
primitive.sizeY = "Grootte Y";
primitive.sizeZ = "Grootte Z";
// Division only impacts the topology (synonym: resolution)
primitive.division = "Verdeling";
primitive.divisionX = "Verdeling X";
primitive.divisionY = "Verdeling Y";
primitive.divisionZ = "Verdeling Z";
// Angle of torus, etc
primitive.angleX = "Hoek X";
primitive.angleY = "Hoek Y";
primitive.angleZ = "Hoek Z";
// It means we try to keep regular sized quad (square) instead of highly distorted rectangule
primitive.constantDensity = "Constante dichtheid";
// Make sure the shape is perfectly spherical
primitive.projectOnSphere = "Project op bol";
primitive.projectOnSphere.help = "Snapt de punten op een perfecte bol.";

// triplanar
primitive.triplanar.title = "Triplanar";
primitive.triplanar.title.help = "Triplanar maakt gebruik van de maskerinformatie van 3 vlakken om een voxelrooster te vullen dat vervolgens wordt omgezet in polygonen.

Als je met de schuifregelaars voor verdeling of grootte werkt, wordt de schilderinformatie gereset (gladheid blijft behouden).

Je moet waarschijnlijk de symmetrie uitschakelen, aangezien deze mogelijk niet werkt zoals je zou verwachten.

Je kunt de optie `Topologisch verbonden` in het masker paneel gebruiken om een vlak te schilderen dat invloed heeft op de andere vlakken.";
// Make sure the box is a regular cube (same 3 dimension)
primitive.triplanar.sameSize = "Zelfde grootte (kubus)";
primitive.triplanar.polish = "Gladheid";
// Mask refers to the painted mask on the triplanar planes
primitive.triplanar.resetMask = "Masker resetten";
// One side of a cube (the back plane)
primitive.isolate.back = "Achterkant";
// One side of a cube (the right plane)
primitive.isolate.right = "Rechts";
// One side of a cube (the bottom plane)
primitive.isolate.bottom = "Onderkant";
// Plane
primitive.planeSameSize = "Zelfde grootte (vierkant)";
// Make the plane a disk/ellipse instead of a rectangle
primitive.planeDisk = "Schijf";
// Box
primitive.boxRegular = "Zelfde grootte (kubus)";
// Torus
primitive.torus.radiusOuter = "Buitenste radius";
primitive.torus.radiusInner = "Binnenste radius";
primitive.torus.angle = "Hoek";
primitive.torus.angleOffset = "Hoek offset";
// Cylinder
primitive.cylinder.height = "Hoogte";
// Cone
primitive.cone.radius = "Radius";
primitive.cone.height = "Hoogte";
// Hole sub menu (cylinder, tube, etc)
primitive.hole = "Gat";
// Make a hole in the primitive to make it hollow
primitive.hasHole = "Heeft een gat";
// Curve profile (synonym: profile, curve)
primitive.profile = "Profiel";
primitive.profile.viewport = "In viewport tonen";
// If the revolution surface has caps (E.g: cylinder)
primitive.cap = "Deksel";

// Singular of Repeaters (Nodes that make many copies of its children (type of mirror/curve/array/radial))
repeater = "Repeater";
// All the new items will be inserted inside the bound rather than outside
repeater.array.fitInside = "Binnen passende";
// The object will follow the curve
repeater.curve.align = "Uitlijnen";

// Import resource (Alpha, Textures, MatCaps, etc)
resource.import = "Importeer...";
// iOS Photos gallery
resource.import.ios.photos = "Foto's";
// iOS Files App
resource.import.ios.files = "Bestanden";

scene.title = "Scène";
scene.title.help = "Wanneer je de zicht-/selectieknoppen gebruikt, houd en sleep je vinger om gemakkelijk andere objecten te selecteren.

Je kunt ook lang op de zicht-/selectieknoppen drukken om ook invloed op de kinderen uit te oefenen.";
// The view will focus on the item when we click on it
scene.focus = "UI: Focus op item bij dubbele tik";
// Add new object on gizmo position
scene.addOnGizmo = "Op de Gizmo";
scene.addOnGizmo.help = "Verplaats de knoop naar de positie van de Gizmo (indien het gizmo-gereedschap is geselecteerd)";
// Select the gizmo tool after adding a new object
scene.addSelectGizmo = "Selecteer Gizmo";
scene.addSelectGizmo.help = "Selecteer het Gizmo-gereedschap bij het toevoegen van een nieuwe knoop";
// Icon size in pixel (min/max)
scene.iconSize = "Pictogramgrootte";
// Min size of icon
scene.iconSize.min = "Min";
// Max size of icon
scene.iconSize.max = "Max";
// display hierarchy lines (visibility helper)
scene.showHierarchy = "Hiërarchische lijnen";
scene.showHierarchy.help = "Toon een lijn tussen de ouder en zijn kinderen in de viewport.";
scene.showHierarchyNomadPivot = "Gebruik Nomad pivot";
scene.showHierarchyNomadPivot.help = "De Nomad pivot is het pivot dat door de Transform- en Gizmo-tools wordt gebruikt.

Als deze optie is uitgeschakeld, wordt het natuurlijke basispivot gebruikt.
In sommige gevallen kan dit basispivot ver van het centrale deel van het object zijn!";
// The view will focus on the item when we click on it
scene.syncVisible = "Synchroniseer zichtbaarheid";
scene.syncVisible.help = "Wanneer ingeschakeld, zal het gebruik van het zichtbare (oog) pictogram effect hebben op alle geselecteerde items.";
// Merge 2 objects without modifying the geometry or the topology
scene.join = "Samenvoegen";
// Group the selected object with a new created Empty Node as a parent
scene.group = "Groep";
// Move the item outside its parent (synonym: ungroup)
scene.unparent = "Ontouderen";
// Mirror node type, a node that make many copies of its children (mirror symmetry)
scene.mirror = "Spiegelen";
// Curve node type, a node that make many copies of its children (along a curve)
scene.curve = "Kromme";
// Array node type, a node that make many copies of its children (grid repetition pattern)
scene.array = "Array";
// Radial node type, a node that make many copies of its children (radial symmetry)
scene.radial = "Radiaal";
// Nodes that make many copies of its children (type of mirror/curve/array/radial)
scene.repeaters = "Repeaters";
scene.repeaters.help = "Repeater nodes maken instanties van alle geometrieën die eronder zijn in de scènehierarchie.";
// Validate button
scene.validateGroup = "Valideren";
// Keep instances in the scene
scene.validateGroup.keepInstances = "Instanties behouden";
// If we should join children
scene.validateGroup.joinChildren = "Kinderen samenvoegen";
// Merge/weld 2 objects by recomputing all the topology and creating a new object
scene.mergeVoxel = "Voxel samenvoegen";
scene.voxelResolution = "Resolutie";
// The hidden objects will be "substracted" (the object will carve the other object)
scene.subtractionTip = "Aftrekken: Verborgen objecten";
// If all the objects are hidden, only the parts where they intersect (collide) will be kep
scene.intersectionTip = "Intersectie: Alle objecten verborgen";

// Need at least to select one object
scene.noneButNeedAtLeastOne = "Geen geselecteerd object, selecteer ten minste één object.";
// Need to select one object only
scene.noneButNeedOne = "Geen geselecteerd object, selecteer één object.";
// Need to select one object only
scene.onlyOneObject = "Er zijn meerdere objecten geselecteerd, selecteer slechts één object.";
// Boolean operation
scene.boolean = "Booleaans";
scene.boolean.help = "Voeg objecten samen, trek af of snijd ze door een booleaanse operatie uit te voeren.

Operatie kan mislukken als sommige objecten niet meervoudig zijn of niet waterdicht zijn.

Als de booleaanse operatie mislukt, kunt u altijd de voxel herberekening op het probleemobject gebruiken om ervoor te zorgen dat het een waterdichte meervoud is.";
// Weld intersection
scene.boolean.mergeIntersection = "Lastechniek intersectie";

// General scene display settings
settings.display.title = "Beeldscherm instellingen";
// Wireframe (show triangles and quad edges)
settings.wireframe = "Draadmodel";
// Display the material texture
settings.debugChannel = "Toon textuur";
// Display the material texture in the background
settings.debugChannel.onBackground = "Op de achtergrond";
// Display the material texture on the mesh
settings.debugChannel.onMesh = "Op de mesh";
// If the object is opened (a simple plane for example), two sided means we'll be able to see if from the two sides of the planes
settings.twoSided = "Twee zijden";
settings.twoSided.help = "Vlakken zijn zichtbaar aan beide zijden.";
// If we colorize the inverted side of faces
settings.backface.color = "Achterzijde kleur";
// Color of the inverted side of faces
settings.backface.colored = "Gekleurde achterzijde";
// Outline (contour highlight around the selected object)
settings.outline = "Omlijning";
// Outline (contour highlight around the selected object)
settings.outline.help = "Geselecteerde objecten worden omlijnd.";
settings.outline.thickness = "Dikte";
// Navigation cube (easy to snap/align the view)
settings.snapCube = "Snelle kubus";
// Move the navigation cube to the bottom of the screen
settings.snapCube.bottom = "Onder";
// Move the navigation cube on the left side of the screen
settings.snapCube.left = "Links";
// Flip the camera (rotate 180° to see the other side)
settings.snapCube.flip = "Draai 180°";
settings.snapCube.flip.help = "Draai het beeld om als het al vaststaat.";
// Alignment (can be auto/on/off)
settings.snapCube.align = "Beperkt uitlijnen";
settings.snapCube.align.help = "Lijn de weergave uit met de wereldas. Indien ingeschakeld, zijn slechts 6 snapposities mogelijk.

In Automatisch zal de beperking alleen plaatsvinden als de camera in Orbit-modus is.";
// Stats (information logs about the scene displayed on screen)
settings.stats = "Statistieken";
settings.stats.right = "Rechts";
settings.stats.all = "Toon volledige scène";
// Grid
settings.grid = "Raster";
settings.grid.divideThreshold = "Deeldrempel";
// Cursor
settings.cursor.title = "Cursor";
settings.cursor.whileSculpting = "Toon cirkel tijdens beeldhouwen";
// A small indicator dot
settings.cursor.showDot = "Toon kleine stip";
settings.cursor.showDot.help = "De stip kan verschijnen als het draaipunt van de camera of wanneer je aan het beeldhouwen bent.";
settings.cursor.showRope = "Toon touwstabilisator";
// indicator
settings.indicator.title = "Aanwijzer";
settings.indicator.title.help = "Toon een visuele aanwijzer (tutorials, schermafbeelding, enz.).";
settings.indicator.size = "Grootte";
// Highlight (the object glows when we select it)
settings.highlight.selection = "Markeer selectie";
// Highlight settings
settings.highlight = "Markering";
settings.highlight.duration = "Duur";
// Mesh that are not selected will be dark
settings.darkenUnselected = "Verduister niet-geselecteerde objecten";
// https://en.wikipedia.org/wiki/Shading
settings.smoothShading = "Zachte belichting";
// Experimental feature
settings.partialDraw = "Gedeeltelijke tekeningen";
settings.partialDraw.help = "Experimenteel kenmerk!

Gebruik het als je een relatief klein deel van een hoogpolygaal mesh aan het beeldhouwen bent.

Het zou het beeldhouwen vloeiender moeten maken, maar je moet geen draadmodel inschakelen!

Ook kan het visuele artefacten toevoegen tijdens de penseelstreken";
settings.partialDraw.warning = "Vergeet niet deze optie uit te schakelen als de visuele artefacten te hinderlijk zijn!";
// Disable this option to force a white uniform paint instead of showing the objects painting
settings.showPainting = "Toon schilderen";
// Show and use the masking on the mesh
settings.showMasking = "Toon masker";
// Disable this option to force show the hidden faces
settings.showDiscard = "Gebruik Verberg";
// Show icon on the canvas
settings.icon = "Icoon";
// Show icons on the canvas
settings.icons = "Iconen";
// Tooltip
settings.icons.help = "Toon een icoon op het canvas zodat je ze direct kunt selecteren en bewerken.";
// Hole filling settings
settings.hole = "Gatvulling";
// Allow the hole filling algorithm to handle non-manifold (non regular topology)
settings.hole.nonManifold = "Niet-manifolde vullen";
settings.hole.nonManifold.help = "Probeer niet-manifolde gaten te vullen.
Deze optie wordt niet opgeslagen in de instellingen.";
// Maximum number of vertices (points)
settings.multires.maxVertices = "Maximaal aantal vertices";
settings.multires.maxVertices.help = "Nomad voert geen geheugentest uit vóór onderverdeling; een hoge polygaaltelling kan gemakkelijk leiden tot crashes.";
settings.multires.lowResVertices = "Lage resolutie drempel";
settings.multires.lowResVertices.help = "Een lagere resolutie van de mesh kan worden weergegeven wanneer je de camera verplaatst.

Je kunt deze waarde verhogen als je een hogere resolutie van de mesh wilt weergeven.";

// The main rendering mode
shading = "Schaduwen";
// Main rendering mode (PBR stands for Physically Based Rendering)
shading.pbr = "Verlicht (PBR)";
shading.pbr.help = "In deze modus kun je lichten toevoegen (met schaduwen), samen met een HDR-omgeving.

Je kunt ook metaligheid en ruwheid schilderen, wat een fijnere controle over het uiterlijk van je materiaal mogelijk maakt.";
// Fast rendering mode for sculpting purpose
shading.matcap = "MatCap";
shading.matcap.help = "Staat voor MATerial CAPture, een MatCap zorgt zowel voor de belichting als de materiaalinformatie in één afbeelding.

Dit is een snelle renderingsmodus, voornamelijk geschikt voor ruw beeldhouwen.";
// Unlit rendering mode, it simply displays a solid/flat color
shading.unlit = "Onbelicht";
shading.unlit.help = "Modus voor effen kleurenscenering, zonder verlichting.";
// Helper rendering mode that display solid colors
shading.object = "Object ID";
shading.object.help = "Onverlichte weergavemodus met aan elk object een willekeurige kleur toegewezen.

Dit is vooral handig wanneer je veel objecten in je scène hebt.";
// Helper rendering mode that display solid colors
shading.instance = "Instantie ID";
shading.instance.help = "Zelfde als Object ID, maar instanties hebben dezelfde kleur.";
// Helper rendering mode that display solid colors
shading.material = "Materiaal ID";
shading.material.help = "Toon een volle kleur voor elk materiaal voorbeeld.";
// Randomize colors
shading.id.randomize = "ID willekeurig maken";
shading.textures = "Gebruik texturen";
shading.textures.help = "Op dit moment kun je geen texturen binnen Nomad maken of bewerken.

Maar als je een bestand met texturen importeert, zou het moeten werken.

• Ondersteunde texturen
Ondoorzichtigheid: Verlicht, MatCap, Onverlicht
Normaal: Verlicht, MatCap
Kleur: Verlicht, Onverlicht
Emissief: Verlicht
Ruwheid: Verlicht
Metaalheid: Verlicht";
// Lights
shading.lights = "Lichten";
shading.lights.addLight = "Licht toevoegen";
shading.lights.warning = "Verlichting vereist PBR shading modus.";
// Environment based lighting (synonym: HDRI)
shading.environment = "Omgeving";
shading.environment.import = "Importeer HDR";
shading.environment.exposure = "Belichting";
shading.environment.backgroundBlur = "Vervaging (achtergrond)";
shading.environment.rotation = "Rotatie";
shading.environment.rotation.help = "Je kunt de omgeving roteren door 3 vingers horizontaal in het viewport te slepen.";
// The environment will always be aligned with the camera (so that the lighting is consistent)
shading.environment.attachedToCamera = "Gehecht aan camera";
shading.environment.attachedToCamera.help = "Bevestig de omgeving aan de camera.

Dit zorgt ervoor dat de verlichting consistent blijft, wat nuttig kan zijn voor sculptuurdoeleinden.";
shading.matcap.rotation = "Rotatie";
shading.matcap.rotation.help = "Je kunt de MatCap roteren door 3 vingers horizontaal in het viewport te slepen.";
shading.matcap.global = "Gebruik globale MatCap";
shading.matcap.global.help = "Schakel deze optie uit om een andere MatCap voor dit specifieke mesh te gebruiken.";

// bottom shortcut buttons (should be SHORT)
shortcut.maskVisible = "Masker";
shortcut.solo = "Solo";
shortcut.xray = "X-Ray";
shortcut.voxelRemesh = "Voxel";
shortcut.wireframe = "Draad";
shortcut.cameraReset = "Reset";
shortcut.cameraSnap = "Snap";
shortcut.lockSelection = "Vergrendelen";
shortcut.lockSelection.help = "Wanneer ingeschakeld, kun je de selectie niet wijzigen door op een mesh te tikken.";
shortcut.grid = "Raster";

// Memory taken by the scene
stat.ramScene = "Scene";
// Vram = Video RAM (Video Memory, the memory of the graphic card)
stat.vramScene = "Vram-Scene";
// Vram = Video RAM (Video Memory, the memory of the graphic card)
stat.vramRender = "Vram Render";
// Vram = Video RAM (Video Memory, the memory of the graphic card)
stat.vramTextures = "Vram Texturen";
// Memory taken by the undo/redo history
stat.ramHistory = "Geschiedenis";
// Memory taken by other stuffs
stat.ramOther = "Andere";
// Memory used by the app (RAM, not storage!)
stat.usedMemory = "Gebruikt geheugen";
// Memory available for the app (RAM, not storage!)
stat.freeMemory = "Vrij geheugen";
// RAM, not storage!
stat.ram = "RAM";
stat.used = "Gebruikt: $0";
stat.free = "Vrij: $0";
stat.faces = "Gezichten";
stat.triangles = "Driehoeken";
stat.vertices = "Hoekpunten";
// quadrangular polygon (polygon with 4 sides)
stat.quads = "Rechthoeken";
stat.vertex = "Vertex";
stat.scene.face = "Scène gezichten";
stat.scene.vertex = "Scène vertices";

// Brush stroke
stroke = "Veeg";
// The brush radius is either screen-space (fixed size on the screen) or world-space (fixed size in the scene)
stroke.useWorldRadius = "Wereldruimte straal";
// The settings is shared among every tools
stroke.useWorldRadius.help = "Dit wordt gedeeld tussen alle gereedschappen.";
// Share the radius value among every tools.
stroke.useShareRadius = "Deel straal";
stroke.useShareRadius.help = "Deel de straalwaarde onder alle gereedschappen.";
// When doing a brush stroke, the spacing is the distance between 2 sculpt operations
stroke.spacing = "Veeg afstand";
// Adjust the brush intensity to ensure consistent deformation depending on the stroke spacing.
stroke.spacing.adjust = "Pas de intensiteit van de ruimte aan";
stroke.minSpacingAdjustIntensity.help = "Pas de penseelintensiteit aan om consistente vervorming te garanderen, afhankelijk van de veegafstand.";
stroke.minSpacing.help = "Afstand tussen elke veeg, gerelateerd aan de gereedschapstraal.

Lagere waarde zorgt voor een soepeler veeg, maar prestaties verslechteren.";
// Brush stroke smoothing
stroke.lazySmooth = "Veeg egalisering";
stroke.lazySmooth.help = "Gemiddelde meerdere aanwijzerposities om een soepelere veeg te krijgen.

Bij hoge waarden zal de veeg achterlopen op de aanwijzer maar uiteindelijk weer inhalen.";
// Make the brush stroke lags behind the pointer cursor
stroke.lazyRadius = "Trage touwstabilisator";
stroke.lazyRadius.help = "Vegen zullen achterlopen op de aanwijzerpositie volgens een bepaalde afstand.

Dit kan worden gebruikt om gladde lijnen te tekenen.";
// It is not a per-tool settings
stroke.globalSettings = "Dit is een globale instelling";
// Start the brush stroke from the last sculpted position to ensure there is no discontinuity
stroke.snapRadius = "Snap straal";
stroke.snapRadius.help = "Knip de veeg vast als de aanwijzer dicht bij de laatst geregistreerde veeg ligt.

Dit kan nuttig zijn bij het tekenen van lange, doorlopende lijnen, terwijl vaak wordt gepauzeerd.";
// offset between the cursor and the brush stroke (for fat finger on small screen)
stroke.sculptOffset = "Veeg offset";
stroke.sculptOffset.help = "Pas een constante offset toe op de veeg.

Deze optie is er om te helpen bij een klein scherm wanneer vingers worden gebruikt, zodat je vinger de veeg niet bedekt.";
stroke.accumulate = "Veeg ophopen";
stroke.accumulate.help = "Als deze optie is ingeschakeld, is er geen limiet aan hoeveel materiaal je per veeg kunt toevoegen/verwijderen.";
// The tool can use DynTopo
stroke.useDynamic = "Dynamische topologie toestaan";
// Only sculpt the part that are linked topologically
stroke.connect = "Verbonden topologie";
stroke.connect.help = "Deze optie beeldhouwt alleen de vertices die zijn gekoppeld aan het gekozen oppervlak.

Dit wordt doorgaans gebruikt voor het Verplaats-gereedschap, bijvoorbeeld als je alleen een onderdeel wilt verplaatsen dat zichzelf kruist met een ander onderdeel.";
stroke.connect.short = "Verbonden";
// sculpt on hide or mask
stroke.protect = "Bescherm gebied";
stroke.protect.hide.help = "Wanneer ingesteld op automatisch, worden verborgen oppervlakken bewerkt als het draadmodel op de verborgen oppervlakken zichtbaar is (zie draadmodelmenu).";
// Only sculpt the vertex that points toward the camera
stroke.culling = "Alleen voortuitkijkende vertex";
stroke.culling.help = "Deze optie negeert achterwaarts gerichte vertices.

Dit kan handig zijn als je een deel van een dunne geometrie wilt schilderen zonder de andere kant te beïnvloeden.

Het werkt ook voor beeldhouwen, maar je kunt wat artefacten ervaren.";
// Infinite depth, move everything under the circle, disregarding depth
stroke.silhouette = "Silhouet";
stroke.silhouette.view = "Bekijken";
stroke.silhouette.snapped = "Als vastgemaakt";
stroke.silhouette.closest = "Dichtstbijzijnde";
// Only sculpt the vertex that points toward the direction of the deformation
stroke.sameSide = "Alleen zelfde-kant vertex";
stroke.sameSide.help = "Negeer vertices die in de tegengestelde richting van de vervorming wijzen.";
// determine normal direction
stroke.normal.direction = "Richting";
stroke.normal.direction.help = "Alleen relevant als normale vervorming is ingeschakeld.

Regelt hoe Nomad beslist over het teken van de vervorming (duwen versus trekken).";
stroke.normal.direction.normal = "Normaal 3D";
stroke.normal.direction.normal.help = "Vergelijkt de XY-positie van de aanwijzer met de geprojecteerde oppervlakte-normaal.";
stroke.normal.direction.screen = "XY";
stroke.normal.direction.screen.help = "Gebruikt de XY-positie van het scherm van de aanwijzer om te beslissen of je moet duwen of trekken.";
stroke.normal.direction.auto = "Automatisch";
stroke.normal.direction.auto.help = "Kiest de methode automatisch op basis van de hoek van de geprojecteerde normaal.";
stroke.normal.direction.auto.threshold = "Drempel";
stroke.normal.direction.auto.threshold.help = "Grenshoek vergeleken met de oppervlakte-normaal om te beslissen welke methode wordt gebruikt.";
// small tip/warning
stroke.onlyLasso = "Instellingen alleen actief voor het lasso gereedschap.";

// Here sampling refers to the app gathering information under the mouse
stroke.area = "Gebied sampling";
stroke.area.help = "Sommige penselen of streekopties vereisen een vlak loodrecht op het oppervlak om te functioneren.
Je kunt bepalen hoe dit gemiddelde vlak wordt berekend door het samplinggebied in te stellen als een verhouding van de gereedschapsradius.

Bij 100% worden alle punten in de selectiecirkels meegerekend.
Bij 0% wordt alleen de dichtstbijzijnde vertex of driehoek meegerekend.";
// Sampling radius size (percent)
stroke.area.normal.radius = "Normaalradius";
// Sampling radius size (percent)
stroke.area.point.radius = "Positieradius";
// Sampling averaging
stroke.area.normal.average = "Normaalgemiddelde";
// Sampling averaging
stroke.area.point.average = "Positiegemiddelde";
// Keep sharp edges
stroke.normalFilter = "Normaal filter";
stroke.normalFilter.help = "Sluit punten uit waarvan de normaal te veel afwijkt van de oppervlakte normaal.

Dit verandert hoe het vlakgebied wordt berekend (Gebied sampling).

Deze optie kan nuttig zijn voor tool-gebaseerde flatten, of als je een vlak oppervlak wilt kleuren zonder te morsen.";

// Only paint the part of the mesh above a certain height
stroke.depth.enable = "Dieptemasking";
stroke.depth.enable.help = "Sluit punten uit die boven of onder een bepaalde afstand van het berekende vlak liggen (Gebied sampling).

Als voorbeeld kan het gebruikt worden om bulten of holtes te schilderen.";
stroke.depth.offset = "Hoogte compensatie";
stroke.depth.falloff = "Diepte-afname";
stroke.depth.max = "Bovenste gebied";
stroke.depth.min = "Onderste gebied";

// Invert the pixel (black <-> white)
stroke.alpha.invert = "Inverteer pixels";
// Repeat the alpha image (pattern)
stroke.alpha.wrap = "Patroontegels";
// No repeat pattern
stroke.alpha.wrap.none = "Geen";
// Repeat the alpha in a regular manner (tiles with seams)
stroke.alpha.wrap.repeat = "Herhaal";
// Repeat the alpha in a mirrored (seamless tiling)
stroke.alpha.wrap.mirror = "Spiegeling";
// Tight fit when using tiling
stroke.alpha.fit = "Strakke pasvorm (niet-vierkante afbeeldingen)";
stroke.alpha.fit.help = "Deze optie is alleen van belang als de alpha- en penselentexturen niet vierkant zijn.

Wanneer ingeschakeld, wordt elke afbeelding onafhankelijk betegeld zonder tussenruimte. U kunt deze optie uitschakelen als u de alpha en andere afbeeldingen gesynchroniseerd wilt houden, in geval hun verhouding niet hetzelfde is.";
// Alpha rotation
stroke.alpha.rotation = "Rotatie";
stroke.alpha.rotation.lock.help = "Vergrendel de alpha oriëntatie.

Als de rotatie ontgrendeld is, volgt de oriëntatie de richting van de penseelstreek in real-time.";
// Repeat the image
stroke.alpha.tiling = "Patroontegels";
// Scale the image (make it bigger or smaller)
stroke.alpha.scale = "Schalen";
stroke.alpha.scale.help = "Bij minimale waarde bevindt het alpha-vierkant zich binnen de straal van de gereedschapscirkel.";
// Middle-point value at which no deformation occurs
stroke.alpha.midValue = "Middenwaarde";
stroke.alpha.midValue.help = "Middenpuntwaarde waarbij geen vervorming optreedt.

(Middelwaarde = 0)
• Zwart: geen verplaatsing
• Wit: positieve verplaatsing

(Middelwaarde = 0.5)
• Zwart: negatieve verplaatsing
• Wit: positieve verplaatsing

(Middelwaarde = 1)
• Zwart: negatieve verplaatsing
• Wit: geen verplaatsing";
// Synonymous: Scatter/Jitter/Randomize
stroke.jitter = "Willekeurig";
// Sculpt and paint along the brush stroke at regular spacing
stroke.type.dot = "Punt";
// Sculpt and paint along with alpha spaced by brush radius
stroke.type.roll = "Rollen";
// Sculpt and paint with alpha projected on screen stencil
stroke.type.tile = "Tegel";
// Sculpt and paint with alpha projected on 3 axis
stroke.type.triplanar = "Triplanar";
// Sculpt continuously
stroke.type.drag = "Slepen";
// Lock a region and move it around
stroke.type.grab = "Grijpen";
// Lock a point of interest and sculpt it by changing the tool radius
stroke.type.grabRadius = "Vergrendelen + straal";
// Lock a region and sculpt it by changing the tool intensity
stroke.type.grabIntensity = "Vergrendelen + intensiteit";

stroke.falloffProject = "Invloed";
stroke.falloffProject.help = "• Bol (3d)
Invloed wordt berekend door de afstand van de vertex naar het midden van de kwast te nemen.

• Cirkel (2d)
De vertex wordt eerst op het vlakgebied geprojecteerd, voordat zijn afstand naar het midden van de kwast wordt bepaald.
Dit is vergelijkbaar met hoe alfa's worden bemonsterd.";
stroke.falloffProject.sphere = "Bol";
stroke.falloffProject.circle = "Cirkel";
stroke.falloffProject.cylinder = "Cilinder";

// Symmetry
symmetry = "Symmetrie";
symmetry.enable = "Ingeschakeld";
symmetry.primitiveWarning = "Symmetrie van de borstel is alleen beschikbaar voor primitieve vormen die zijn gevalideerd, met uitzondering van de Triplanar.";
symmetry.plane.title = "Vlakken";
symmetry.toolIgnore = "De huidige tool negeert symmetrie.";
// Instead of planar symmetry, use a radial symmetry
symmetry.radial.title = "Radiaal";
symmetry.radialX = "Radiaal X";
symmetry.radialY = "Radiaal Y";
symmetry.radialZ = "Radiaal Z";
// A warning indicating that we limit the number of repetitions ($0 is a number)
symmetry.limited = "Aantal herhalingen beperkt tot $0!";
// Synonym: Offset
symmetry.offset.title = "Verplaatsing";
symmetry.offsetX = "Verplaatsing X";
symmetry.offsetY = "Verplaatsing Y";
symmetry.offsetZ = "Verplaatsing Z";
// Number of clones
symmetry.count.title = "Aantal";
symmetry.countX = "Aantal X";
symmetry.countY = "Aantal Y";
symmetry.countZ = "Aantal Z";
// method
symmetry.method = "Methode:";
symmetry.method.help = "• Lokaal
Het symmetrievlak beweegt mee met het mesh wanneer je een van de transformatiegereedschappen (Gizmo of Transformeren) gebruikt.

• Wereld
Het symmetrievlak is vast en zal niet bewegen.";
// Local means: in the coordinate of the scene (synonym: absolute)
symmetry.method.world = "Wereld";
// Local means: in the coordinate of the object (synonym: relative)
symmetry.method.local = "Lokaal";
// Move the object to the other side of the symmetry (mirror it as well)
symmetry.flip = "Object omkeren";
// Cut half of the mesh
symmetry.cut = "Snij";
// after mirroring, separate into multiple output (synonym: split, separate)
symmetry.split = "Splitsen";
// Reapply the mesh mirror, does not impact the topology
symmetry.mirror = "Spiegel";
symmetry.mirror.help = "Probeer de symmetrie opnieuw toe te passen zonder de topologie te beïnvloeden.

Radiale symmetrie wordt genegeerd.

Als topologie niet kan worden behouden omdat deze niet als symmetrisch wordt beschouwd, krijgt u de optie om de spiegeling af te dwingen.";
// indicate that applying the mirror will keep the mesh topology
symmetry.mirror.keepTopology = "behoud topologie";
symmetry.mirrorFail = "Symmetrie niet gedetecteerd.

Wilt u symmetrie afdwingen door de mesh te spiegelen?";
symmetry.mirrorUseMasking = "Bescherm gemaskeerd gebied";
symmetry.mirrorUseMasking.help = "Houd het gemaskeerde gebied intact.

Deze optie wordt genegeerd bij niet-symmetrische topologie (of losgekoppeld oppervlak, zoals een paar ogen).";
// Reset the symmetry plane position
symmetry.reset = "Reset";
// Reset the symmetry plane positon to the object center
symmetry.reset.centerMesh = "Objectcentrum";
// Reset the symmetry plane positon to the scene (world) center
symmetry.reset.centerWorld = "Wereldcentrum";
// Reset the symmetry plane orientation
symmetry.reset.direction = "Oriëntatie";
// Display a line on the object (to show where the symmetry lies)
symmetry.showLine = "Lijn tonen";
// Display the symmetry plane in 3D
symmetry.showPlane = "Vlak tonen";
// Allow the editing of the symmetry plane with the gizmo
symmetry.edit = "Gizmo bewerken";
symmetry.edit.warning = "Symmetrie bewerken is experimenteel.";
symmetry.edit.help = "U kunt vrij de symmetrievlakte instellen.

Deze functie is enigszins experimenteel en het wordt waarschijnlijk afgeraden deze te gebruiken.";

// Ideally short strings
tool.dynamic = "DynTopo";
// Ideally short strings (Symmetry)
tool.symmetry = "Sym";
// Ideally short strings (Mirror primitive)
tool.mirror = "Spiegel";
// Ideally short strings
tool.clay = "Klei";
// Ideally short strings (Subtract)
tool.clay.sub = "Aftrekken";
// Ideally short strings
tool.brush = "Kwast";
// Ideally short strings
tool.move = "Verplaats";
// Ideally short strings (Normal vector, perpendicular to surface)
tool.move.normal = "Normaal";
// Ideally short strings
tool.drag = "Slepen";
// Ideally short strings (Smooth the surface by erasing the details)
tool.smooth = "Gladstrijken";
// Ideally short strings (Tries to smooth the topology by making the polygons more regular)
tool.smooth.relax = "Ontspannen";
// Ideally short strings (Paint mask)
tool.mask = "Masker";
// Ideally short strings
tool.mask.unmask = "Unmask";
// Ideally short strings (Selector Mask, use lasso/ellipse,etc shape to mask the mesh)
tool.maskSelector = "SelMask";
// Ideally short strings (Smudge the paint of the object)
tool.smudge = "Vlekken";
// Ideally short strings (Flatten the surface)
tool.flatten = "Plat maken";
// Ideally short strings (Flatten the surface, more strongly than Flatten)
tool.planar = "Vlak";
// Ideally short strings (Flatten the surface by offsetting the surface in the opposite direction)
tool.flatten.fill = "Vullen";
// Ideally short strings (Layer brush)
tool.layer = "Laag";
// Ideally short strings
tool.crease = "Plooi";
// Ideally short strings (Cut part of the mesh cleanly)
tool.trim = "Trimmen";
// Ideally short strings (Cut part of the mesh cleanly into two separate meshes)
tool.split = "Splitsen";
// Ideally short strings (Project part of the object onto a curve)
tool.project = "Projecteren";
// Ideally short strings
tool.inflate = "Plop";
// Ideally short strings
tool.pinch = "Knijpen";
// Ideally short strings
tool.nudge = "Nudge";
// Ideally short strings
tool.stamp = "Stempel";
// Ideally short strings (Delete Layer, a tool that can cancel the Layer deformation/paint)
tool.clearLayer = "LaagVerwijderen";
// Ideally short strings (Select multiple objects with a lasso tool)
tool.select = "Selecteren";
// Ideally short strings (Rotate, Translate and Scale the object)
tool.gizmo = "Widget";
// Ideally short strings
tool.gizmo.editPivot = "Draaischijf";
// Ideally short strings (Snap angle)
tool.gizmo.rotateSnap = "Kleven";
// Ideally short strings (Snap translation)
tool.gizmo.moveSnap = "Kleven";
// Ideally short strings (Local/Relative space)
tool.gizmo.local = "Lokaal";
// Ideally short strings (Align/Snap the gizmo to world axis)
tool.gizmo.align = "Uitlijnen";
// Ideally short strings (Pin the gizmo, so that it stays in place when switching between objects)
tool.gizmo.pin = "Spelden";
// Ideally short strings (Rotate, Translate and Scale the object)
tool.transform = "Transformatie";
// Ideally short strings (Translate the object)
tool.transform.move = "Verplaats";
// Ideally short strings (Rotate the object)
tool.transform.rotate = "Draaien";
// Ideally short strings (Scale the object)
tool.transform.scale = "Schaal";
// Ideally short strings (Snap the object on another object surface)
tool.transform.snap = "Kleven";
// Ideally short strings (Measure distance between 2 points)
tool.measure = "Meten";
// Ideally short strings (Lattice, deformer)
tool.lattice = "Rooster";
// If an option is shared among the tools
tool.all = "Alles";
// Ideally short strings (Quad Remesher)
tool.remesh = "Vierkant Remesher";
tool.remesh.guides = "Richtlijnen";
tool.remesh.density = "Dichtheid";
tool.remesh.same = "Zelfde";
tool.remesh.half = "Half";
// Ideally short strings (FaceGroup)
tool.faceGroup = "GezichtGroep";
tool.faceGroup.autoPick = "Auto-selectie";
tool.faceGroup.flush = "Verwijder ongebruikte";
tool.faceGroup.skip = "Sla kleine groepen over op basis van:";
tool.faceGroup.skipFace = "Aantal zijden";
tool.faceGroup.skipFace.help = "Maak geen nieuwe groep aan als het aantal zijden kleiner dan of gelijk is aan deze drempelwaarde.";
tool.faceGroup.skipArea = "Oppervlakte";
tool.faceGroup.skipArea.help = "Maak geen nieuwe groep aan als de oppervlakte van de nieuwe groep lager is dan deze drempelwaarde.

De drempelwaarde wordt gegeven als percentage van de totale oppervlakte van het object.";
// Ideally short strings (Hide)
tool.hide = "Verbergen";
// Ideally short strings (View tool, do nothing in particular)
tool.view = "Bekijken";
// Ideally short strings (Revolving surface along a line)
tool.lathe = "Draaibank";
// Ideally short strings (Revolving surface along a curve)
tool.tube = "Buis";
// Ideally short strings (Insert object into the scene)
tool.insert = "Invoegen";
// Ideally short strings (Flip/Invert/Negate the shape)
tool.shape.flip = "Draaien";
// Ideally short strings (No shape selected, same as Camera mode, does nothing in particular)
tool.shape.view = "Bekijken";
// Ideally short strings (Lasso selection)
tool.shape.lasso = "Lasso";
// Ideally short strings (Curve selection, same as Lasso and it's an open shape)
tool.shape.curve = "Kromme";
// Ideally short strings (Polygon selection, same as Lasso but with more precision)
tool.shape.polygon = "Polygoon";
// Ideally short strings (Path selection, same as Lasso but with more precision and it's an open shape)
tool.shape.path = "Pad";
// Ideally short strings (Rectangular selection)
tool.shape.rectangle = "Rechthoek";
// Ideally short strings (Ellipse selection)
tool.shape.ellipse = "Ellips";
// Ideally short strings (Line selection, split the screen in half)
tool.shape.line = "Lijn";
// Ideally short strings (Whether a shape is closed or not, a tube is open, a torus is closed)
tool.shape.closed = "Gesloten";

// Radius of the tool (size)
tool.radius = "Straal";
// Intensity of the tool (force)
tool.intensity = "Intensiteit";

tool.settings = "Instellingen";
tool.settings.none = "Dit gereedschap heeft geen specifieke instellingen.";

tool.crease.pinchFactor = "Knijp kracht";
tool.crease.offsetFactor = "Offsetfactor";

tool.layer.removeInfluence = "Gebruik laaggegevens";
tool.layer.removeInfluence.help = "Deze optie is alleen actief wanneer er een laag is geselecteerd.

Het zal de gegevens van de laag gebruiken om de verplaatsing over streken te beperken.";
tool.layer.noLayerSelected = "Deze optie is alleen beschikbaar als er een laag is geselecteerd";

tool.flatten.planeLockOrigin = "Vastzetting oorsprong vlak";
tool.flatten.planeLockNormal = "Vastzetting richting vlak";

// Option for Tube, Lathe and Insert tool
tool.syncInstance = "Synchronisatie";
tool.syncInstance.message = "Het nieuwe object zal aan alle andere instanties worden toegevoegd!";

// The vertex on the border of the mesh will stay still even if we try to smooth the border
tool.smooth.stickyBorder = "Plakkend hoekpunt op rand";
tool.smooth.screen = "Schermgladstrijken";
tool.smooth.screen.help = "Gebruik deze optie om topologieonafhankelijke gladstrijken te krijgen, zelfs bij hoge poly's.";
tool.smooth.screen.samples = "Schermmonsters";
tool.smooth.stable = "Stabiel gladstrijken";
tool.smooth.stable.help = "Probeert de gladstrijking topologie-onafhankelijk te maken.

Deze modus werkt het beste met variërende dichtheid van de topologie en met een hoge gladstrijkingsintensiteitswaarde.";

tool.paint = "Verf";
// Erase the painting
tool.paint.erase = "Wissen";
// Only paint the part of the mesh that was already painted in the layer (repainting)
tool.paint.layerFilter = "Laagfiltering";
tool.paint.layerFilter.help = "Gebruik deze optie als je alleen het al geverfde gebied van een laag opnieuw wilt schilderen.";

// Clear the painted mask
tool.mask.clear = "Wissen";
tool.mask.clearAll = "Alles wissen";
// Invert the painted mask
tool.mask.invert = "Inverteren";
// Mask or Unmask a region (leave other region that unconnected intact)
tool.mask.flipConnected = "Omgekeerde masker (verbonden)";
// Blur the painted mask
tool.mask.blur = "Vervagen";
// Sharpen the edge of the painted mask area
tool.mask.sharpen = "Verscherpen";
// Transform/Matrix
tool.matrix = "Matrix";
// The target of the transform is either the Matrix or the Vertex of the object
tool.matrix.target = "Doel";
// Automatic
tool.matrix.target.auto = "Automatisch";
tool.matrix.target.auto.help = "Standaard werkt dit op dezelfde manier als de optie Groep. Als het mesh maskering heeft of als symmetrie is ingeschakeld, werkt het op dezelfde manier als Vertex.";
// Auto apply the transform on the vertices
tool.matrix.target.vertex = "Vertex";
tool.matrix.target.vertex.help = "Probeer de transformatie toe te passen op de vertices, het zal niet werken op niet-gevalideerde primitieve vormen. Exemplaren worden ook beïnvloed.";
// Transform the object alone (the children stands still)
tool.matrix.target.object = "Object";
tool.matrix.target.object.help = "Verplaats alleen het object, waarbij symmetrie en maskering worden genegeerd. Alleen het bewerkte knooppunt beweegt, de kinderen blijven stilstaan.";
// Transform the object and its children
tool.matrix.target.group = "Groep";
tool.matrix.target.group.help = "Verplaats het knooppunt, waarbij symmetrie en maskering worden genegeerd. De rest van de hiërarchie wordt ook getransformeerd.";
// Operation on the mesh
tool.matrix.action = "Operatie";
tool.matrix.action.origin = "Verplaats oorsprong";
tool.matrix.action.origin.help = "Verplaats het mesh naar de wereldoorsprong.";
tool.matrix.action.bake = "Bakken";
tool.matrix.action.bake.help = "Pas de matrix toe op de vertex en reset de matrix. Visueel moet er niets veranderen.";
tool.matrix.action.reset = "Reset";
tool.matrix.action.reset.help = "Reset de mesh-transformatie naar identiteit.";

// Synonym: shear, https://en.wikipedia.org/wiki/Shear_matrix or https://en.wikipedia.org/wiki/Shear_mapping
tool.matrix.skew = "Scheef";
tool.matrix.translation = "Verschuiving";
tool.matrix.rotation = "Rotatie";
tool.matrix.scale = "Schaal";
tool.matrix.uniformScale = "Uniforme schaal";

tool.transform.tip = "Tik eenmaal met de tweede vinger om de modus te veranderen";

// Size of the gizmo
tool.gizmo.size = "Gizmo-grootte";
// If true, there is less spacing between gizmo handlers (rotate, scale, etc)
tool.gizmo.compact = "Compact";
// When enabled, tapping one the gizmo widget will open a numerical input popup
tool.gizmo.allowInput = "Numerieke invoer";
tool.gizmo.allowInput.help = "Sta numerieke invoer toe wanneer je op een van de Gizmo-widget tikt";
// Angle threshold
tool.gizmo.linearRollThreshold = "Drempel voor tangentrollen";
tool.gizmo.linearRollThreshold.help = "Hoekdrempel om te kiezen tussen lineaire of circulaire rolmethode.

Waarden boven deze drempel zullen de circulaire rol gebruiken.

Als je de lineaire rol (richting van de tangens) verkiest, stel deze waarde dan in op 90°.";
// Partially hide/fade the gizmo when we interact with it
tool.gizmo.autoHide = "Verberg bij interactie";
tool.gizmo.tap = "Bij tikken";
tool.gizmo.tap.help = "Deze optie bepaalt hoe het draaipunt wordt verplaatst wanneer je eenmaal op het mesh oppervlak tikt.";
tool.gizmo.tap.none = "Geen";
tool.gizmo.tap.none.help = "Er gebeurt niets wanneer op het mesh wordt getikt.";
tool.gizmo.tap.normal = "Normaal";
tool.gizmo.tap.normal.help = "Verplaats de gizmo naar het eerste snijpunt en lijn het uit volgens de normale van het oppervlak.";
tool.gizmo.tap.first = "Eerst";
tool.gizmo.tap.first.help = "Verplaats de gizmo naar het eerste snijpunt.";
tool.gizmo.tap.medial = "Medeaal";
tool.gizmo.tap.medial.help = "Verplaats de gizmo naar het midden van de eerste twee kruispunten.";

// The lathe generator is a vertical line and cannot be rotated
tool.lathe.axisFixed = "Vast";
tool.lathe.axisOnly = "Alleen as";
tool.lathe.stable = "Stabiel";
tool.lathe.axis = "As";

// Fill the object's hole
tool.hole = "Gat vullen";
tool.hole.fillHoles = "Vul gaten";
// synonym: Alternative method
tool.hole.method.fill = "Vul";
tool.hole.method.legacy = "Legacy";
tool.hole.method.boolean = "Boolean";
tool.hole.bridges = "Screen-space boolean";
tool.hole.bridges.help = "Als deze optie is ingeschakeld, kun je gaten in het volume maken.
De snijhoek volgt ook nauwer de snijvorm.";
tool.hole.threshold = "Drempel epsilon";
tool.hole.threshold.help = "Het aanpassen van deze waarde kan helpen bij het algoritme voor het vullen van gaten.";
tool.hole.smoothing = "Gladmaken van gaten";

tool.smudge.quality = "Kwaliteit";
tool.smudge.quality.help = "Het verandert de resolutie van de geprojecteerde pixels, lagere waarden betekenen snellere streken.";

// Shape for the tools: Trim / Split / Project / SelMask
tool.shape = "Vorm";
// Auto-validate the drawn shape
tool.shape.autoValidate = "Automatisch valideren";
// Force the rectangle selection to be a square
tool.shape.rectangleSquare = "Vierkant";
// The selection rectangle will be centered around the cursor
tool.shape.rectangleCentered = "Gecentreerd";
// Force the ellipse selection to be a circle
tool.shape.ellipseCircle = "Cirkel";
// The selection ellipse will be centered around the cursor
tool.shape.ellipseCentered = "Gecentreerd";
// Rotate by step (angle value)
tool.shape.lineRotateStep = "Rotatie stap";

// Show a yellow dot on the golden ratio point
tool.measure.goldenRatio = "Gulden snede";
// volume of a mesh
tool.measure.volume = "Volume";
// Surface of a mesh
tool.measure.surface = "Oppervlak";

// Always display the camera shortcut buttons on the viewport
tool.view.stickyCamera = "Camerakortingssleutel (altijd)";

// Topology
topology = "Topologie";
// Synynom: detail value, density
topology.dynamic.detail = "Details";
// See glossary
topology.multires = "Multiresolutie";
topology.multires.help = "Behoud meerdere resoluties van een mesh.

Als je wijzigingen aanbrengt in een lagere resolutie, worden details van hogere resoluties opnieuw geprojecteerd wanneer je terugschakelt.

Lagen zijn beschikbaar op elke resolutie.";
// Synonym: Unsubdivide, Un-subdivide
topology.multires.reverse = "Omgekeerd";
topology.multires.reverse.confirm = "Kon basis subdivisie niet maken.

De huidige topologie is waarschijnlijk niet het resultaat van een subdivisie.";
topology.multires.subdivide = "Subdivisie";
topology.multires.subdivide.confirm = "De mesh zal $0M vertices hebben, weet je het zeker?";
// Prevents the user from subdivide the object again, a warning is displayed (with a UI link to increase this limit)
topology.multires.subdivide.limit = "Subdivisiegrens overschreden, zie $0";
topology.multires.deleteLower = "Lager verwijderen";
topology.multires.deleteHigher = "Hoger verwijderen";
topology.multires.keepTriangles = "Behoud driehoeken";
topology.multires.lock = "Vergrendel (LV0)";
// Navigate toward multiple resolutions (go to higher level)
topology.multires.up = "Multiresolutieniveau →";
// Navigate toward multiple resolutions (go to lower level)
topology.multires.down = "Multiresolutieniveau ←";
// Synonym: Flat subdivision
topology.multires.linear = "Lineaire subdivisie";
topology.multires.linear.help = "Subdivideer het mesh eenvoudig zonder enige verzachting toe te passen";
// Only show the lowest resolution wireframe
topology.multires.minWireframe = "Alleen niveau 0";
// Create a new object by recomputing a new topology
topology.remesh = "Remesh";
// Create a new object by recomputing a new topology, by using voxels (see Glossary)
topology.voxel = "Voxel Remesh";
topology.voxel.help = "Remeshen door de mesh op een raster te bemonsteren.

Als het object niet gesloten is (waterdicht), dan zal er eerst een gatvulalgoritme worden toegepast.

Lagen worden na het remeshen opnieuw geprojecteerd, maar de kwaliteit zal achteruitgaan.";
topology.voxel.resolution = "Resolutie";
topology.voxel.sharp = "Behoud scherpe randen";
topology.voxel.sharp.help = "Deze optie is vooral nuttig voor eenvoudige primitieve booleaanse operaties.

Het zal in sommige gebieden vervorming veroorzaken vanwege het opschuiven van de punten op de randen.";
topology.voxel.subLevel = "Bouw multi-resolutie";
topology.voxel.subLevel.help = "Je kunt een multiresolutie hiërarchie opnieuw opbouwen vanuit de Voxel remesher output.

Het zal ook sneller werken en minder geheugen gebruiken, vooral als de Voxel detailwaarde hoog is.
Echter, als de Voxel detailwaarde laag is en je vraagt om veel multires-niveaus, zul je details verliezen.";
// Dynamic topology (DynTopo)
topology.surface.remesh = "Remesh";
topology.surface.detail = "Detail";
topology.surface.detail.help = "In tegenstelling tot Voxel remeshing, heeft oppervlakte remeshing het niet nodig dat de Mesh gesloten is.

Het kan ook maskering ondersteunen zodat je delen van de Mesh kunt beschermen tegen topologische veranderingen.

Lagen worden correct bijgewerkt.";
topology.surface.method = "Methode";
// Uniformisation means we can both add and remove triangles/quads
topology.surface.method.uniformisation = "Uniformisatie";
// We can only add triangles/quads (synonym: Refine)
topology.surface.method.subdivision = "Onderverdeling";
// We can only remove triangles/quads (synonym: Simplify)
topology.surface.method.decimation = "Decimering";
topology.surface.method.help = "Gedrag van dynamische topologie:
• Uniformisatie: detail toevoegen en verwijderen
• Subdivisie: detail toevoegen
• Decimatie: detail verwijderen";
topology.surface.useMasking = "Bescherm gemaskerde gebied";
topology.surface.useMasking.help = "De gemaskerde gebieden zullen de topologie beschermen tegen veranderingen.";
topology.surface.extrapolate = "Vertex extrapolatie";
// DynTopo
topology.dynamic = "Dynamische topologie";
topology.dynamic.global = "Globaal aan/uit";
topology.dynamic.activate = "Ingeschakeld";
topology.dynamic.activate.help = "Met dynamische topologie kunnen sculpteergereedschappen de Mesh lokaal in realtime onderverdelen of vereenvoudigen.

Deze functie kan een merkbare invloed hebben op de prestaties.

Lagen worden correct bijgewerkt.";
topology.dynamic.method = "Detail gebaseerd op...";
topology.dynamic.method.screen = "Scherm";
topology.dynamic.method.radius = "Radius";
topology.dynamic.method.constant = "Constant";
topology.dynamic.method.help = "• Zoomen
Het detailniveau is gebaseerd op hoe ver je van het oppervlak bent.

• Straal
De straal van het gereedschap bepaalt de hoeveelheid detail.

• Constant
Het detail is vast, de detailwaarde wordt ook gedeeld met de voxel-slider.";
topology.dynamic.quality = "Voorkeur...";
topology.dynamic.quality.help = "Als je kiest voor Kwaliteit, zijn de twee belangrijkste verschillen:
• verfijning wordt toegepast voordat je begint te sculpten, je krijgt minder interpolatie-artefacten bij het schilderen of sculpturen van zeer kleine details
• verfijning wordt niet incrementieel toegepast, als je zeer kleine details sculpturen of snelle bewegingen maakt, zal de topologie altijd correct verfijnd zijn";
topology.dynamic.quality.speed = "Snelheid";
topology.dynamic.quality.quality = "Kwaliteit";
// Whether the pencil pressure can impact the level of detail
topology.dynamic.usePressure = "Gebruik druk op radius";
topology.dynamic.usePressure.help = "Gebruik deze optie als je wilt dat de pen druk op de toolradius het detailniveau beïnvloedt.";
topology.dynamic.useFalloff = "Gebruik stroke-afval";
// Decimate
topology.decimate.title = "Decimeren";
topology.decimate.title.help = "Verminder het aantal polygonen door zoveel mogelijk details te behouden.

Deze functie kan nuttig zijn als je voor 3D-printen wilt exporteren.

U moet het echter waarschijnlijk niet gebruiken als je wilt doorgaan met beeldhouwen, want dit kan ongelijke driehoeken veroorzaken.

Let op: het gemaskeerde gebied wordt niet gedecimeerd.";
// Synonym: Simplify (Decimate reduce the number of triangles/quads while retaining details as much as possible)
topology.decimate = "Decimeren";
topology.decimatePaintWeight = "Schildering behouden";
topology.decimatePaintWeight.help = "Een hogere waarde zal proberen de schildering te behouden.

Stel deze waarde in op 0 als je niet om de schildering geeft.";
topology.decimateUniform = "Uniforme vlakken";
topology.decimateUniform.help = "Een hogere waarde zal driehoeken van vergelijkbare grootte produceren.";
topology.decimatePreserveBorders = "Randen behouden";
topology.decimatePreserveBorders.help = "Decimeer de rand van de mesh niet.";
// Target a certain number of triangles, faces and vertices
topology.target.triangles = "Doel driehoeken";
topology.target.faces = "Doel vlakken";
topology.target.quads = "Doel quads";
topology.target.points = "Doelpunten";
// Quad remesher
topology.qremesh = "Quad Remesh";
topology.qremesh.angle = "Vouwhoek";
topology.qremesh.border = "Randen behouden";
topology.qremesh.onlyQuad = "Alleen quads";
topology.qremesh.hole = "Maximale vulling van gaten";
topology.qremesh.hole.help = "Het algoritme kan soms ongewenste gaten produceren.

Als een gat minder hoeken heeft dan deze waarde, dan wordt het gevuld.";

// Unwrapping means compute UV (texture coordinates), with uvs you can appliy (wrap) a texture onto the model
topology.uv.title = "UV Ontvouwen";
// UV Unwrap but as a Verb
topology.uv.unwrap = "Ontvouwen";
// The operation can be very slow
topology.uv.atlas.warning = "Kan heel langzaam zijn, richt <100k vertices!";
// Handles are topological holes (synonym: genus, hole)
topology.uv.bff.warning = "Kan overlappen hebben als de mesh handvatten heeft!";
// Solo patch
topology.uv.bff.seamless = "Naadloze patches";
topology.uv.bff.seamless.help = "Deze optie kan belangrijke vervorming introduceren.

Typisch kan het gebruikt worden wanneer gezichtsgezichten zorgvuldig zijn ingesteld.";
// Synonym: Point count? Singularity count ?
topology.uv.bff.cones = "Conen teller";
topology.uv.bff.help = "Een hogere waarde zal de vervorming voor complexe objecten verminderen.

Een hogere waarde betekent langere berekentijd.";
topology.uv.delete = "Verwijder UVs";

// Transfer the vertex painting in the texture, bake means "create texture (from mesh data)"
topology.bake.title = "Bakken";
// Bake here means "create texture (from mesh data)"
topology.bake.title.help = "Texturen bakken zal texturen maken door andere zichtbare objecten in de scène te projecteren.

Hier is de typische workflow voor bakken:
• Je hebt een mesh met fijne details en schilderwerk
• Cloneer het
• Verminder het (stel 'Preserve painting' in op 0!)
• UV unwrap het
• Bak het!

Je zou nu een low-resolution mesh moeten hebben die het grootste deel van het schilderwerk en de details van je vorige object behoudt.

Na de bewerking worden vertexkleuren naar een nieuwe uitgeschakelde laag verplaatst, zodat ze worden genegeerd in plaats van vermenigvuldigd te worden met de gekleurde textuur.

Om te kiezen welke objecten worden gebruikt voor bakken, geldt de volgende logica:
- alle geselecteerde objecten en het hoofdzakelijk geselecteerde object zullen worden gebakken (de sterkste highlight in het scenemenu)
- als er maar één object is geselecteerd, dan overweegt Nomad in plaats daarvan alle zichtbare objecten
- als anders alle objecten verborgen zijn (bijvoorbeeld door gebruik van Solo), dan wordt de hele scène overwogen.";
// Bake here means "create texture (from mesh data)"
topology.bake.self = "Van zichzelf";
// Bake here means "create texture (from another mesh data)"
topology.bake.other = "Van hoge-resolutie";
topology.bake.resolution = "Resolutie";
// Cage is a specific term, synonyom: "Bake offset"
topology.bake.offset = "Straal offset";
topology.bake.radius = "Kooi radius";
// Bake opacity (from mask data)
topology.bake.opacityFromMask = "Masker -> Opaciteit";
topology.bake.backup = "Back-up";

// project a high resolution mesh details onto another
topology.reproject.title = "Herprojecteer";
topology.reproject.title.help = "Projecteer gebeeldhouwde details, schilderen en lagen vanaf de dichtstbijzijnde zichtbare objecten.

Dit is voornamelijk bedoeld om ook op een hoge-resolutie mesh te worden gebruikt, meestal met een schone topologie.";
// tweaking value
topology.reproject.rayBias = "Straal bias";
topology.reproject.rayBias.help = "Er worden twee methoden gebruikt voor reprojection:
• dichtbij: het dichtstbijzijnde punt op het oppervlak
• straal: snijpunt door de normale richting

Hogere biaswaarden geven de voorkeur aan straalintersectie in plaats van het dichtstbijzijnde oppervlak.";
topology.reproject.normalOffset = "Normale verschuiving";
topology.reproject.shpereCast = "Sfeer gieten terugvaloptie";
topology.reproject.shpereCast.help = "Als normale straalreprojectie faalt, zal Nomad terugvallen op de dichtstbijzijnde oppervlakte-intersectie.";
// number of iteration the algorithm will take
topology.reproject.iterations = "Iteraties";
topology.reproject.relax = "Ontspan";
topology.reproject.relax.help = "Ontspannen moet worden geprefereerd wanneer de mesh laag is in poly's.";
topology.reproject.layers.help = "Breng andere lagen over naar het geselecteerde mesh.";

topology.manifold = "Spruitstuk";
topology.nonManifold = "Niet-spruitstuk";
topology.manifold.clean = "Schoonmaken";
topology.manifold.collapse = "Verwijder kleine vlakken";
topology.manifold.title = "Forceer spruitstuk";
topology.manifold.title.help = "Probeer niet-spruitstuk rand schoon te maken.

Dit kan nuttig zijn voor externe software die geen randen ondersteunt met meer dan 2 gemeenschappelijke vlakken.";

// Reset key-bindings/shortcuts
binding.reset = "Bindings resetten";
// Add node in a sync mode (synchronize instance)
binding.addSync = "Synchronisatie";
binding.addSync.help = "Standaard wordt de synchronisatiewaarde gebruikt die is ingesteld in het scene-menu.";
// Binding option
binding.context.toggle = "Context schakelen";
// quick sidebar tool shortcuts
binding.quicks = "Snelle sneltoetsen";
// quick regular tool shortcuts
binding.tools = "Tools sneltoetsen";
// When the key is tapped once, the value will be toggled
binding.toggle = "Wissel Vorige Tool";
binding.toggle.help = "Gebruik dezelfde binding om terug te schakelen naar het laatste gereedschap.";
// sticky keys
binding.sticky = "Sticky toetsen";
binding.sticky.off = "Vast,";
binding.sticky.off.help = "Houd de toets ingedrukt om het gereedschap te gebruiken, laat los om terug te keren naar het vorige gereedschap.";
binding.sticky.on = "Wisselen";
binding.sticky.on.help = "Druk eenmaal om tools te wisselen.";
binding.sticky.quick = "Snelle Druk";
binding.sticky.quick.help = "Houd ingedrukt om tijdelijk te gebruiken, druk snel om te wisselen.";
// The binding force camera movement
binding.forceCamera = "Camera forceren";
binding.forceCamera.help = "Forceer camera-interactie in geval van een conflict met een andere binding.

Dit gebeurt meestal als dezelfde binding aan een tool-sneltoets of Toevoeging/Aftrekking is toegewezen.";
// Same as Color Picker but it pick the material (color, roughness, metalness, etc)
binding.pickMaterial = "Kies Materiaal";
// Same as Color Picker but it pick the material (color, roughness, metalness, etc)
binding.pickFaceGroup = "Kies Vlakkengroep";
// Edit the tool brush size/radius
binding.editRadius = "Hulpmiddel Radius";
// Inverse direction zooming
binding.invertZoomY = "Draai zoom Y om";
// Edit the tool brush size/radius
binding.editIntensity = "Hulpmiddel Intensiteit";
// Controller dead zone
binding.joystick = "Joystick";
binding.controller.deadZone = "Stick dode zone";
binding.controller.deadZone.help = "Verhoog deze waarde als de camera beweegt, zelfs als de controllerstick niet wordt aangeraakt.";
// Snap the camera
binding.view.front = "Vooraanzicht";
binding.view.left = "Linkerzicht";
binding.view.top = "Toraanzicht";
// Move/Translate the view
binding.pan.left = "Pan naar links";
binding.pan.right = "Pan naar rechts";
binding.pan.forward = "Voorwaarts Pannen";
binding.pan.backward = "Achterwaarts Pannen";
binding.pan.up = "Opwaarts Pannen";
binding.pan.down = "Neerwaarts Pannen";
// Snap the view (while rotating)
binding.snapViewOnRotate = "Snapweergave (tijdens draaien)";
// Open a Nomad internal project (replace current scene)
binding.project.open = "Openen (project)";
// Open a Nomad internal project (add it to the current scene)
binding.project.add = "Toevoegen (project)";
// Select all the objects in the scene
binding.selectAll = "Alles selecteren";
// Rotate environment and the lighting
binding.rotateLighting = "Verlichting roteren";
// The Camera pivot is the point around which the camera rotates
binding.updatePivot = "Punt bijwerken...";

quadremesh.adaptQuadCount = "Adaptieve Quad Teller";
quadremesh.curvatureAdaptivness = "Adaptieve Grootte";
quadremesh.curvatureAdaptivness.help = "Bij 100% varieert de grootte van kwadraten afhankelijk van de objectkromming, zodat kleinere kwadraten kunnen worden toegepast bij hoge kromming.
Bij 0% is de grootte van de kwadraten uniform.";
quadremesh.useVertexColors = "Schilderen behouden";
quadremesh.autoDetectHardEdges = "Automatisch Harde Randen Detecteren";
quadremesh.autoDetectHardEdges.short = "Hard licht";
quadremesh.reprojectVertex = "Vertex herprojecteren";
quadremesh.reprojectVertex.short = "Vertex herprojecteren";
quadremesh.reprojectVertex.label = "Wanneer ingeschakeld, zal Nomad de positie op het vorige mesh herprojecteren.

Houd er rekening mee dat als het mesh lagen heeft, herprojectie altijd wordt gebruikt.";

// Privacy policy
privacyPolicy.title = "Privacybeleid";
privacyPolicy.reject = "Weigeren";
// Hexanomad is the company name
privacyPolicy = "Hexanomad verzamelt geen gegevens van Nomad Sculpt.";

sonar.disconnect = "SonarPen loskoppelen";
sonar.connect = "SonarPen verbinden";
sonar.connect.confirm = "SonarPen verbinden?";
sonar.connect.confirm.warning = "Sonar Pen zal de microfoon (audio-loopback) gebruiken om de druk van de pen te detecteren.";

// Color disc mode
widget.color.disc = "Schijf";
widget.color.ring = "Ring";
widget.color.square = "Vierkant";

nomad.mainFolder = "Nomad hoofdmap";
nomad.mainFolder.warning = "Bestanden blijven onaangeroerd.
Ze worden niet gekopieerd, verwijderd of verplaatst.";
nomad.mainFolder.error = "Nadat je ja hebt geselecteerd, sluit Nomad af en kun je het eenvoudig opnieuw starten.";

license.title = "Licentie";
license.retry = "Opnieuw proberen";
license.key = "Licentiesleutel";
license.activate = "Licentie activeren";
// ----------------------------------------------
license.newest = "Nieuwe versie beschikbaar!";
license.encrypt.error = "Kan niet versleutelen!";
// ----------------------------------------------
license.grace = "Offline - Resterende respijtperiode:";
license.grace.hours = "uren";
license.grace.days = "dagen";
// ----------------------------------------------
license.portal.title = "Bestaande gebruikers";
license.portal.label = "Licentieportaal";
// ----------------------------------------------
license.checkout.title = "Nieuwe gebruikers";
license.checkout.label = "Koop Nomad";
// ----------------------------------------------
license.device.error = "Kon apparaat-ID niet ophalen.";
license.device.mismatch = "Mismatch apparaat-ID!";
// ----------------------------------------------
license.error429 = "Te veel verzoeken (wachten).";
// ----------------------------------------------
license.validate.error404 = "De licentiesleutel is niet gevonden.";
license.validate.error422 = "Onverwerkbare entiteit.";
// ----------------------------------------------
license.activate.error403 = "Maximaal aantal apparaten bereikt!
U kunt een ander apparaat deactiveren op uw licentieportaal.";
license.activate.error404 = "De licentiesleutel is niet gevonden.";
license.activate.error422 = "Onverwerkbare entiteit.";
// ----------------------------------------------
// version
version.update = "Update beschikbaar!";
version.restore = "Herstel aankoop";
version.buyWeb = "Webversie is slechts een demo";
version.buyFull = "Upgrade naar volledige versie";
// ----------------------------------------------
// QuadRemesh
version.qr.unlock = "Ontgrendel (aankoop, herstel, proefversie)";
version.qr.desktop = "Op de desktop wordt de QuadRemesher gedistribueerd door Hexanomad, maar Hexanomad behandelt geen verkoop of licenties.
Alle licentiebeheer wordt uitgevoerd door Exoside.";
version.qr.buy = "Aankoop";
version.qr.promo = "
De Quad Remesher is een algoritme dat een quad dominante mesh produceert.
De quadverdeling zal proberen de natuurlijke kromming van het object te volgen.

Het algoritme kan ook de grootte van de quads aanpassen, afhankelijk van de lokale kromming.

U kunt de resulterende topologie ook sturen met:

• Gezichtsgroep $0 (zorg ervoor dat hun randen worden gladgestreken voor een beter resultaat!)

• Vlakke X/Y/Z-symmetrie $1

• Kromme geleiders $2

• Dichtheidsschildering $3

De Quad Remesher wordt ontwikkeld door https://exoside.com/.";
// ----------------------------------------------
version.trialLayer = "Proefversie: 1 laag per object";
version.trialNoExport = "Proefversie: Geen export";
// ----------------------------------------------
version.fullFeatures = "• Eenmalige aankoop
• Onbeperkt ongedaan maken/herhalen
• Onbeperkt lagen
• Export & import";
// ----------------------------------------------
version.demo.purpose = "Deze versie is specifiek gemaakt voor demonstratiedoeleinden.";
version.demo.disable = "Functie niet ingeschakeld voor demo.";
// ----------------------------------------------
version.demo = "Demo Test";
version.demo.sculpt = "Beeldhouwen";
version.demo.sculpt.help = "Alle penselen zijn beschikbaar maar u kunt niet opslaan of exporteren.

Deze modus is voornamelijk bedoeld om te experimenteren met de penselen of de druksupport te testen.

Andere functies kunnen ook beperkt zijn (geschiedenis, lagen).";
version.demo.file = "Importeren & Exporteren";
version.demo.file.help = "U kunt modellen importeren en exporteren, maar sculptpenselen zijn uitgeschakeld.

Deze modus is vooral nuttig voor mobiele gebruikers die geen grote .nom projecten kunnen openen vanwege geheugenbeperkingen van mobiele apparaten.";
// ----------------------------------------------
// app store main page
store.name = "Nomad Sculpt";
store.headline = "Beeldhouwen, schilderen en creëren in 3D";
store.tag = "beeldhouwen, 3D, nomade, schilderen, modelleren";
// ----------------------------------------------
store.description.sculpt = "• Sculpting tools
Klei, plat, glad, masker en vele andere penselen laten u uw creatie vormen.
U kunt ook het trim boolean snijgereedschap gebruiken met lasso, rechthoek en andere vormen voor hard-oppervlakte doeleinden.";
// ----------------------------------------------
store.description.stroke = "• Aanpassing van penseelstreken
Afname, alphas, betegelingen, potlooddruk en andere penseelstrekparameters kunnen worden aangepast.
U kunt uw toolpresets ook opslaan en laden.";
// ----------------------------------------------
store.description.paint = "• Schildersgereedschap
Vertex schilderen met kleur, ruwheid en metaalachtigheid.
Je kunt ook eenvoudig al je materiaalpresets beheren.";
// ----------------------------------------------
store.description.layer = "• Lagen
Leg je beeldhouw- en schilderbewerkingen vast in afzonderlijke lagen voor gemakkelijker itereren tijdens het creatieproces.
Zowel de wijzigingen in het beeldhouwen als schilderen worden geregistreerd.";
// ----------------------------------------------
store.description.multires = "• Multiresolution sculpting
Ga heen en weer tussen meerdere resoluties van uw mesh voor een flexibele workflow.";
// ----------------------------------------------
store.description.voxel = "• Voxel remeshing
Herbescherm snel uw mesh om een uniforme detailniveau te krijgen.
Het kan worden gebruikt om snel een ruwe vorm te schetsen aan het begin van het creatieproces.";
// ----------------------------------------------
store.description.dynamic = "• Dynamische topologie.
Verfijn lokaal je mesh onder je penseel om een automatisch detailniveau te verkrijgen.
Je kunt zelfs je lagen behouden, want ze worden automatisch bijgewerkt!";
// ----------------------------------------------
store.description.topology = "• Decimeren
Verminder het aantal polygonen terwijl zo veel mogelijk details behouden blijven.";
// ----------------------------------------------
store.description.group = "• Yachten Groep
Segmenteer je mesh in subgroepen met de gereedschap voor Yachten Groep.";
// ----------------------------------------------
store.description.unwrap = "• Automatisch UV uitvouwen
De automatische UV-uitvouwer kan gezichtsgroepen gebruiken om het uitvouwproces te controleren.";
// ----------------------------------------------
store.description.baking = "• Baking
Je kunt vertexgegevens zoals kleur, ruwheid, metaalachtig en kleinschalige details naar texturen overbrengen.
Je kunt ook het omgekeerde doen, textuurgegevens overbrengen naar vertexgegevens of lagen.";
// ----------------------------------------------
store.description.primitive = "• Primitieve vorm
Cilinder, torus, buis, draai en andere primitieve vormen kunnen worden gebruikt om snel nieuwe vormen vanaf nul te starten.";
// ----------------------------------------------
store.description.rendering = "• PBR-renderen
Standaard prachtig PBR-renderen, met verlichting en schaduwen.
Je kunt altijd overschakelen naar matcap voor een meer standaard schaduw voor beeldhouwdoeleinden.";
// ----------------------------------------------
store.description.postprocess = "• Nabewerking
Screen Space-reflectie, Scherptediepte, Omgeving-Occlusie, Toonmapping, enz.";
// ----------------------------------------------
store.description.files = "• Exporteren en importeren
Ondersteunde formaten zijn onder andere glTF-, OBJ-, STL- of PLY-bestanden.";
// ----------------------------------------------
store.description.interface = "• Interface
Gebruiksvriendelijke interface, ontworpen voor mobiele ervaring.
Aanpassing is ook mogelijk!";
// ----------------------------------------------
store.description.remesher = "• Quad Remesher (apart in-app purchase required)
Hermaak automatisch uw object met een quad-dominante mesh die de mesh-curvaturen volgt.
Het ondersteunt geleiders, face groepen en dichtheid schilderen.";
// ----------------------------------------------