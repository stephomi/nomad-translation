// Generic confirmation (Confirm? [yes/ok/delete, cancel])
confirm = "Bekräfta?";
// Answer to a question (Are you sure you want to do that? [yes, cancel])
confirm.yes = "Ja";
// Answer to a question (Are you sure you want to do that? [yes, no, cancel])
confirm.no = "Nej";
// The generic ok in a confirm box (The next operation is dangerous. [ok, cancel])
confirm.ok = "Ok";
// Cancel something after being asked (Question? [answer, cancel])
confirm.cancel = "Avbryt";

// Experimental feature
experimental = "Experimentell!";

status.exit = "Osparade ändringar! Vill du spara innan du stänger?";
status.exit.yes = "Spara";
status.exit.no = "Spara inte";

// On single tap (should be short)
ontap = "På tryck";

all = "Alla";
error = "Fel";

reset = "Återställ";
resetOrder = "Återställ ordning";

clipboard = "Urklipp";
clipboard.copy = "Kopiera";
clipboard.paste = "Klistra in";

// memory size
bytes = "bytes";
kB = "kB";
MB = "MB";
GB = "GB";
TB = "TB";

// Noun
instance = "Instans";
object = "Objekt";

// Same value (usually for axis, e.g: x == y == z)
uniform = "Enhetlig";

sync = "Synka";

// position
position.top = "Topp";
position.bottom = "Botten";
position.left = "Vänster";
position.right = "Höger";
position.center = "Center";
// direction
direction.up = "Upp";
direction.down = "Ner";
direction.left = "Vänster";
direction.right = "Höger";
// 3d cube
cube.top = "Övre";
cube.bottom = "Neder";
cube.left = "Vänster";
cube.right = "Höger";
cube.front = "Fram";
cube.back = "Bak";

// Name of an item (object, tool, etc)
item.name = "Namn";
// Add a new item (object, tool, etc)
item.new = "Ny";
// Rename an item (object, tool, etc)
item.rename = "Byt namn";
// Add a new item (object, tool, project, etc)
item.add = "Lägg till";
// Update an item image with a new image (synonym: Update)
item.replace = "Ersätt";
// Save an item (object, tool, etc)
item.save = "Spara";
item.save.confirm = "Bekräfta sparning?";
// Update an item (update camera view point, etc)
item.update = "Uppdatera";
// Reload last save of an item (object, tool, etc)
item.lastSave = "Senaste sparning";
// Reload last save of an item (object, tool, etc)
item.lastSave.confirm = "Ladda senaste sparning?";
// Reset an item to its initial value (object, tool, etc)
item.reset = "Återställ";
item.reset.confirm = "Bekräfta återställning?";
// Make an item instance, similar to clone but keeps the underlying geometry (Synonym: link? soft clone?)
item.instance = "Instans";
// Uninstance the object, make the object real
item.uninstance = "Av-instans";
// Clone an item (object, tool, etc)
item.clone = "Klon";
// Delete an item (object, tool, etc)
item.delete = "Radera";
item.delete.confirm = "Bekräfta radering?";
item.delete.confirm.yes = "Ja, radera";
// When we delete the item but the image is used somewhere
item.delete.used = "Bild använd";
// Convert the item type (mesh, light) to a simple Node type
item.toNode = "Till nod";
// Item visibility (object, layer, etc)
item.visible = "Synlig";
// Show an item (object, layer, etc)
item.show = "Visa";
// Hide an item (object, layer, etc)
item.hide = "Dölj";
// Select an item (object, layer, etc)
item.select = "Välj";
// Unselect an item (object, layer, etc)
item.unselect = "Avmarkera";
// Merge an item with another one below (layer)
item.mergeDown = "Slå samman ner";
// The order of an item in a list
item.order = "Ordning";
// Focus on previous item
item.previous = "Föregående";
// Focus on next item
item.next = "Nästa";
// The item is locked (either it cannot be selected, edited, or we preserve its details)
item.lock = "Lås";
// No item selected
item.none = "Ingen";

// Search something (text entry to filter item)
search = "Sök";

// Three-state toggle button (Auto, Off, On)
toggle.on = "På";
// Three-state toggle button (Auto, Off, On)
toggle.off = "Av";
// Three-state toggle button (Auto, Off, On)
toggle.auto = "Auto";

// When you launch the app and we need to reprocess some resource thumbnails
loading.reprocess = "Saknade miniatyrer, behandlar om filer...";
loading.reprocess.cancel = "Hoppa över miniatyrgenerering?";

access.title = "Tillgänglighet";
access.window = "Hjälpfönster";
access.pinch = "Nyp";
access.drag = "Dra";
access.rotate = "Roter";
access.roll = "Rulla";

// Color of an object
material.color = "Färg";
// Defines how blurry or sharp the reflection on a material is (opposite of glossiness)
material.roughness = "Grovhet";
// Defines how blurry or sharp the reflection on a material is (opposite of roughness)
material.glossiness = "Glansighet";
// Whether the material is a metal or not
material.metalness = "Metallighet";
// How much light a surface will reflect
material.specular = "Spekularitet";
// Light that the surface can emit (glow)
material.emissive = "Utsänd l1s";
// Normal map (synonym: detail, bump)
material.normal = "Normal";
// flip y coordinate
material.normal.flipY = "VändY";
// Ambient Occlusion (AO)
material.occlusion = "Okkulsion";
// Textures, basically images wrapped on models (synonym: Maps, Texture maps)
material.textures = "Texturer";
// Textures/Image
material.texture = "Textur";
// A warning indicating that the mesh has no UVs
material.warningNoUVs = "Inga UVs!";
// Texture filtering https://en.wikipedia.org/wiki/Texture_filtering
material.texture.filter = "Filtrering";
// Nearest Filtering (closest sample)
material.texture.nearest = "Närmaste";
// Bilinear Filter
material.texture.linear = "Linjär";
// Mipmap filtering
material.texture.mipmap = "Mipmap";
// Triplanar mapping
material.projection = "Projektion";
material.projection.triplanar = "Triplanar";

// Prefer low power
about.lowPower = "Låg energi GPU";
about.lowPower.confirm = "Efter att ha ändrat detta värde måste du starta om Nomad.";
// Wintab wacom API
about.wintab = "Använd Wintab";
about.wintab.help = "Om Wintab är aktiverad bör du förmodligen inaktivera Windows Ink i dina Wacom-inställningar.

På samma sätt, om Wintab är inaktiverad, bör Windows Ink aktiveras i Wacom-inställningarna.";
// Prefer low power
about.fullScreen = "Fullskärm";
// Minify
about.minify = "Minnegränssnitt";
about.minify.help = "Du kan också trycka på din skärm med 4 fingrar, om din enhet stödjer det.";
// Turntable will rotate the whole scene on itself (as it if was on a turntable)
about.turntable = "Skivspelare";
// Rotation center of the turntable
about.turntable.pivot = "Rotationscenter";
// Keep current pivot
about.turntable.pivot.keep = "Behåll nuvarande";
// Turntable pivot will be at the center of the scene
about.turntable.pivot.scene = "Scen";
// Make the entire scene turn around (speed of the animation)
about.turntable.speed = "Hastighet";
// Stuffs that I used to make the app
about.credits = "Krediter";
// Link to open source projects that I used for the app
about.credits.openSource = "Öppen Källkod";
// Only translate the &
about.credits.arts = "MatCaps & HDRIs";
// Change languages of the app
about.languages = "Språk";
about.languages.help = "Översättningsfiler tillgängliga på $0";
// Link to the App Website
about.website = "Webbsida";
// Link to the App Forum
about.forum = "Forum";
// Link to the App Manual
about.manual = "Manual";
// Link to the App Email
about.mail = "Stöd";
// Link to the App Twitter account
about.twitter = "Twitter";
// Link to the App Instagram account
about.instagram = "Instagram";
// Link to the App Facebook account
about.facebook = "Facebook";
// Link to the App Discord account
about.discord = "Discord";
// Link to the App Threads account
about.threads = "Trådar";

// The user canceled an operation that was running
alert.aborted = "Operation avbruten!";
// Error when an algorithm needs the object to have an hole (usually to fill it)
alert.hole.nothing = "Objektet har inga hål!";
// No operation occured because the mesh is already manifold
alert.manifold.already = "Mesh är redan fullständig!";
// Visibility of the object is off (but should be on)
alert.shape.notVisible = "Det nuvarande objektet är osynligt!";
// The user tried to trim an object but the selected region didn't touch the object
alert.trim.nothing = "Inget att trimma.";
// The user tried to trim an object but the selected region completely encompassed the object
alert.trim.full = "Avbryt trimning: objektet är helt trimmat.";
// In order to extract something, the mesh needs to have painted mask
alert.extract.none = "Inget att extrahera!";
// In order to split something, the mesh needs to have painted mask
alert.extract.split.none = "Inget att dela!";
// List of disabled features when View Mode is selected
alert.view.disabled = "Funktioner inaktiverade i Visningsläge:";
// Primitive Widgets are small ui stuffs in the viewport that the user can interact with to modify an object
alert.view.disabled.widgetPrimitive = "Primala widgets";
// The object needs to have two parts disconnected
alert.separate.fail = "Kunde inte separera: objektet har bara en del!";
// Remesh is when you create a new topology (mesh) on an object
alert.voxelRemesh.success = "Omnätdynamik klart!";
alert.voxelRemesh.empty = "Avbruten ominätning: resultatmässan har inga ytor.";
// Should not happen or very rarely, input here is an object
alert.voxelRemesh.invalidInput = "Ogiltig inmatning!";
// Helper popup to tell the users the object will cloned
alert.matrix.clone = "Objektet kommer att dupliceras";
// Helper popup to tell the users the object will cloned
alert.matrix.instance = "Objektet kommer att instanseras";
// A pivot refers the gizmo 3d position, this mode means we are moving the pivot
alert.gizmo.editPivot = "Redigera pivotläge.";
alert.mask.full = "Mask = 100%!";
// A pivot refers the gizmo 3d position
alert.gizmo.editObject = "Redigera objektläge.";
// See Glossary (DynTopo)
alert.dynamic.enable = "Dynamisk topologi PÅ";
// See Glossary (DynTopo)
alert.dynamic.disable = "Dynamisk topologi AV";
alert.colorPicker = "Dra på objektet för att välja en färg.";
// Transform mode is when the user can move the reference (image in the background) with its two fingers
alert.backgroundTransform = "Enkel beröring för att avsluta transformationsläge.";
// Edit the symmetry plane with the gizmo
alert.editSymmetry = "Enkel beröring för att avsluta redigeringssymmetriläge.";
// Show the painted mask on the mesh
alert.mask.show = "Visa mask";
// Hide the painted mask on the mesh
alert.mask.hide = "Dölj mask";
// Selection refers to the objects that are currently selected
alert.selection.lock = "Lås markeringen";
// Selection refers to the objects that are currently selected
alert.selection.unlock = "Lås upp markeringen";
// Hide the objects that are not selected
alert.selection.isolate = "Isolera markering";
// Show the objects that are hidden
alert.selection.showAll = "Visa alla";
// Project quick saving
alert.quickSave = "Sparar...";
// Painting on the object was hidden but the user did paint the object
alert.forcePainting.fill = "Målning aktiverad, [Måla allt] användes.";
// Painting on the object was hidden but the user started to paint on the object
alert.forcePainting.tool = "Visa målning aktiverad, objektet målades.";
// See Glossary (Multiresolution)
alert.multiresLost = "Multiresolutionen kommer att förloras!";
// Boolean cut mode will ignore some features
alert.booleanIgnored = "Boolean kommer att ignorera maskerade eller dolda områden!";
// The user is starting an operation that can lead to a crash
alert.range.warning = "Detaljvärdet är högt och kan kräva mycket minne!";
// Autosave popup
alert.autoSave.auto = "Autospara om... $0s";
// The selected object doesn't have any layers
alert.needLayer = "Det aktuella verktyget kräver ett aktivt lager.";
// The user decided to hide the painting on the objects
alert.paintingHidden = "Målningen är dold!";
// The user decided to hide the masking on the objects
alert.maskingHidden = "Maskning är gömd!";
// The user decided to display hidden faces
alert.hideIgnored = "Dölj ignoreras!";
// The selected object doesn't have any layers
alert.noPartialWireframe = "Delvis ritning är inaktiverad när trådram visas.";
// The user has selected a tool that is more intuitive to use when the camera is in orthographic mode
alert.shapeOrthographic = "Överväg att använda en ortografisk kamera om du vill undvika perspektivdistortion när du använder skärmprojektor.";
// Trial version has a limited number of undo
alert.state.trial = "Provversion: ångra avbröts";

background = "Bakgrund";
// A flat color will be displayed in the background of the scene
background.color = "Färg";
// 2 color with rotation
background.gradient = "Gradient";
// The environment (HDRI) will be displayed in the background
background.environment = "Miljö";
background.blur = "Oskärpa";
background.exposure = "Exponering";

// Image that the artist uses as a reference
background.imageEnable = "Referensbild";
// The image will be displayed in overlay (used as a reference by the artist)
background.imageOverlay = "Överlagring";
// Opposite of transparency (Alpha)
background.imageAlpha = "Opacitet";
background.imageReset = "Återställ inställningar";
background.imageTransform = "Transformera";
// X screen coordinate of the image reference
background.imageX = "Position X";
// Y screen coordinate of the image reference
background.imageY = "Position Y";
// Rotation of the reference image
background.imageRotation = "Rotation";
// Scale of the reference image
background.imageScale = "Skala";
// Auto adjust the reference when moving the camera
background.syncLock = "Synka med kameralås";

// Blend: normal
blend.normal = "Normal";
// Blend: darker
blend.darker = "Mörkare";
blend.darker.darken = "Mörka";
blend.darker.multiply = "Multiplicera";
blend.darker.linearBurn = "Linjär Bränn";
blend.darker.colorBurn = "Färgåterställning";
// Blend: lighter
blend.lighter = "Ljusa";
blend.lighter.lighten = "Ljusna";
blend.lighter.screen = "Skärm";
blend.lighter.linearDodge = "Linjär Skär";
blend.lighter.colorDodge = "Färgskär";
// Blend: contrast
blend.contrast = "Kontrast";
blend.contrast.hardLight = "Hårt Ljus";
blend.contrast.softLight = "Mjukt Ljus";
blend.contrast.overlay = "Överlägg";
blend.contrast.hardMix = "Hård Mix";
blend.contrast.linearLight = "Linjärt Ljus";
blend.contrast.vividLight = "Livfullt Ljus";
blend.contrast.average = "Genomsnitt";
// Blend: inversion
blend.inversion = "Inversion";
blend.inversion.exclusion = "Exkludering";
blend.inversion.difference = "Skillnad";
// Blend: cancelation
blend.cancelation = "Avbeställning";
blend.cancelation.divide = "Dela";
blend.cancelation.subtract = "Subtrahera";
// Blend: component
blend.component = "Komponent";
blend.component.luminosity = "Ljushet";

// Camera (point of view in 3d)
camera = "Kamera";
cameras = "Kameror";
camera.view = "Visa";
// Copy the views
camera.updateView = "Uppdatera synvinkel?";
// Add a new camera
camera.addView = "Lägg till visning";
// Focus on the camera
camera.focus = "Fokus";
// Add on the camera camera
camera.focusOn = "Fokus på $0";
// Camera projection, Orthographic or Perspective
camera.projection = "Projektion";
// Camera projection, Orthographic or Perspective
camera.projection.orthographic = "Ortografisk";
// Camera projection, Orthographic or Perspective
camera.projection.perspective = "Perspektiv";
// camera Vertical Field of View
camera.fov = "Vertikal Fov";
// Camera Field of View hint
camera.focal = "brännvidd $0mm (35mm sensor)";
// Rotation mode controls how the user will interact with the camera rotation
camera.rotation = "Rotation";
// Camera interaction mode, 2 degrees of freedom (synonym: Orbit)
camera.rotation.orbit = "Vändskiva";
// Camera interaction mode, 3 degrees of freedom
camera.rotation.trackball = "Trackball";
camera.rotation.trackball.help = "Trackball ger mer rörelsefrihet, du kan också rotera kameran med två fingrar.";
// Camera interaction mode, 1st person view
camera.firstPerson = "Första Person";
// How sensitive the camera is (synonym: sensitivity)
camera.speed = "Hastighet";
// Camera rotation sensitivity
camera.speed.rotation = "Rotation";
// Camera translation sensitivity
camera.speed.panning = "Översättning";
// Camera zooming sensitivity
camera.speed.zooming = "Zoomning";
// Reset camera position
camera.resetView = "Återställ vy";
// Align the view (snap to nearest 90° angle)
camera.snapView = "Fäst vy";
// Warning (camera is snapped and it switched to orthographic)
camera.snapOrthographic.warning = "Kamera är fast (ortografisk)";
// Switch to orthographic view when the view is snapped
camera.snapOrthographic = "Ortografisk fast";
camera.snapOrthographic.help = "Detta alternativ fungerar även när du använder Snap-kuben i hörnet.";
// The Camera pivot is the point around which the camera rotates
camera.pivot = "Uppdatera pivot...";
// When we double tap on the object with the finger/stylus
camera.doubleTapMesh = "Dubbeltryck på objektet";
// When we double tap on the background with the finger/stylus
camera.doubleTapBackground = "Dubbeltryck på bakgrunden";
// When we double tap on the background with the finger/stylus
camera.doubleTapBackgroundFocus.toggle = "Växla";
// Focus on the selection
camera.doubleTapBackgroundFocus.selection = "Val";
// Focus on the entire scene
camera.doubleTapBackgroundFocus.scene = "Scen";
// When double tapping with the finger/stylus, the camera pivot will be updated
camera.doubleTapPivot = "När dubbeltryck utförs";
camera.doubleTapPivot.help = "Uppdatera rotationspivoten när du dubbeltrycker på objektets yta.";
// Allow new pivot even when zooming outside the object surface
camera.airPivot = "Tillåt luftpivot";
camera.airPivot.help = "Tillåt ny pivot även när du zoomar utanför objektets yta.";
// Update the pivot when you start interacting with the camera
camera.autoPivot = "När kameran börjar röra sig";
camera.autoPivot.help = "Uppdatera pivoten när du börjar interagera med kameran.";
// Move the camera so that it focus on the intersection point
camera.doubleTapFocus = "Fokus";
camera.doubleTapFocus.help = "När du dubbeltrycker på objektet kommer kameran att panorera och fokusera på den valda punkten.";
// Disable XY panning when unzomming
camera.centerZoomOut = "Centrera vy när man zoomar ut";
camera.panZoomOut.help = "När detta alternativ är avaktiverat kommer denna pivotposition att förbli intakt.";

// Toolbox context (when expanded), multiple objects are selected
context.multiselection = "Flera val";
// There is 0 nodes/items selected
context.noSelection = "Inget val";

// Curve type, presets lets the user chooses between predefined curves
curve.preset = "Förinställning";
// Quick curve x side shift
curve.shift = "Skift";
// Curve type, https://en.wikipedia.org/wiki/Centripetal_Catmull%E2%80%93Rom_spline
curve.catmull = "Catmull-Rom";
// Curve curve, https://en.wikipedia.org/wiki/Spline_(mathematics)
curve.spline = "Spline";
curve.bspline = "B-spline";
curve.precision = "Noggrannhet";
// merge or collapse 1 point into another
curve.merge = "Sammanfoga";
// snap
curve.snap = "Snap";
curve.snap.offset = "Förskjutning";
curve.snap.offset.help = "Ett värde på 100 % är lika med rörets radie.";
curve.snap.surface = "Yta";
curve.snap.vertex = "Vertex";
curve.snap.grid = "Rutnät (om ansluten)";
// Regular spaced sampling
curve.uniform = "Enhetlig";
curve.uniform.help = "Kurvan kommer att samplas med regelbundet mellanrum för att säkerställa enhetlig densitet.

Du kan inaktivera detta alternativ för att kontrollera kantlopparna något genom att lägga till nya kontrollpunkter på kurvan.";
// Display the falloff curve in a symmetric way
curve.symmetric.help = "Visa avfallskurvan symmetriskt.

Detta alternativ är endast en visuell ledtråd och påverkar inte själva avfallet.";
curve.radius = "Radie";
curve.twist = "Twist";
curve.spiral = "Spiral";
curve.spiral.twist = "Vrivinkel";
curve.spiral.scale = "Skala";
curve.spiral.offset = "Förskjutning";
curve.spiral.angle = "Vinkelförskjutning";
curve.pivot = "Pivot";
curve.pivot.self = "Själv";
curve.pivot.children = "Barn";

// Set the desired FPS (frame per second, refresh rate)
debug.limitFps = "Mål FPS";
debug.limitFps.help = "När den är avstängd betyder standardvärdet att den synkroniseras med skärmens uppdateringshastighet.";

// Warning about UVs (using extra memory)
debug.uvPrimitive.warning = "Inaktivera det här alternativet om du inte behöver UVs.

Mesh med UVs kommer att använda mer minne.";
// Debug option, Normalize means transforming the data so that it fits in [0-1] the range
debug.uvNormalize = "Normalisera UVs";
debug.uvNormalize.help = "Nomad kommer att normalisera UVs inom [0-1] brickan.";

// Debug option, display an window with some debugging logs
debug.logs = "Loggar";
// Model shortcut window
debug.shortcut = "Genvägsfönster";
// Debug option, overrides the rendering to display the depth buffer
debug.heightmap = "Höjdkarta";
// Debug options, graphical stuffs
debug.graphics = "Grafik";
// Debug options, generate screenshots with size compatible with the iOS store
debug.thumbnails = "Skapa butikens miniatyrer";

// Open file explorer
file.explore = "Utforska";
// Empty list: there is no projects
file.project.load = "Ladda om projekt vid start";
// Empty list: there is no projects
file.project.empty = "Du har inga sparade projekt ännu!";
// The current opened project has some unsaved changes
file.project.unsaved = "Osparade ändringar!";
// The user will loose its project's unsaved changes
file.project.loseUnsaved = "Du kommer att förlora osparade ändringar!";
// Indicates to the user that the project thumbnail corresponds to the last manual save
file.project.lastManualSave = "Förhandsgranska den senaste manuella sparingen";

file.project = "Projekt";
// Save current project (or overwrite if the project has already been saved once)
file.project.save = "Spara";
// E.g: Save "my_project"?
file.project.save.confirm = "Spara $0?";
// Make a copy
file.project.saveAs = "Spara som";
// Overwrite another project
file.project.overwrite = "Skriv över";
// E.g: Overwrite "my_other_project"?
file.project.overwrite.confirm = "Skriv över $0?";
// Open a project
file.project.open = "Öppna";
// E.g: Open "my_project"?
file.project.open.confirm = "Öppna $0?";
// E.g: Clone "my_project"?
file.project.clone.confirm = "Klon $0?";
// Load another project and add/append all its data to the current scene
file.project.add = "Lägg till i scenen";
// E;g: Add "my_other_project" to the scene?
file.project.add.confirm = "Lägg till $0 till scenen?";
// Reset the scene and create a new project
file.project.new = "Ny";
file.project.new.confirm = "Skapa ny scen?";
// Delete a project (not corresponding to the currently opened one)
file.project.delete.confirm = "Radera $0?";
// Delete a project (corresponding to the currently opened one)
file.project.delete.confirmActive = "Radera $0?

Det här är det aktuella aktiva projektet!";

// Auto save section
file.autoSave = "Automatisk spara";
file.autoSave.confirm = "Inaktivera Auto Spara?";
file.autoSave.help = "Spara ditt projekt i en separat fil med jämna mellanrum.

Autosparfilen kan hittas på:";
// Interval in minutes in which the auto save popup will appear
file.autoSave.popup = "Popup-timeout";
// In minutes
file.autoSave.minutes = "Timerpopup";
// Delete the current autoSave data
file.autoSave.delete = "Kassera Auto Spara";
// Open the outdated auto save
file.autoSave.open.manual = "Öppna föråldrad manuell sparning";
file.autoSave.open.auto = "Öppna föråldrad automatisk sparning";

// color space (linear or srgb), do not translate linear/srgb if there is a doubt
file.colorSpace = "Färgrymd";
file.colorSpace.help = "Försök att växla det här alternativet om färgerna verkar fel.";
file.colorSpace.linear = "Linjär";
file.colorSpace.srgb = "sRGB";

// Configure imports option
file.importSettings = "Importera alternativ";

// Load interface preference settings when opening a scene file
file.import.guiSettings = "Behåll GUI-inställningar";
file.import.guiSettings.help = "När ett projekt öppnas eller importeras, kommer alla GUI-relaterade inställningar som är inbäddade i projektet att laddas.";
// OBJ have "groups" and "objects", by default groups are ignored, use this option to consider groups as separate objects
file.import.obj.splitByGroup = "Dela upp OBJ efter grupper";
file.import.obj.splitByGroup.help = "När aktiverat kommer Nomad att dela upp OBJ-grupper i separata objekt.";
// Merge all the object layers at when loading a file (deleting them in the process)
file.import.mergeLayers = "Slå ihop lager";
// Ignore the textures present in the file to load
file.import.skipTextures = "Hoppa över texturer";
// Do not fiddle with the object topology when loading the file
file.import.keepTopology = "Behåll topologi";
file.import.keepTopology.help = "Använd det här alternativet om du inte vill att Nomad ska röra med toppologin av det importerade nätet.

Det kommer att inaktivera omordning av vertex/ansikte, borttagning av dubbletter av vertex/ansikte och borttagning av oanvända vertexer.";

// Import file section
file.import.title = "Importera";
file.import.title.help = "Stötta format:";
// The user imports a scene file that will replace the current scene
file.import.open = "Öppna";
file.import.open.confirm = "Importera ny fil?";
// The user imports a scene file that will be added/appended the current scene
file.import.add = "Lägg till i scenen";
file.import.add.confirm = "Importera ny fil?";

// Export scene file
file.export = "Exportera";

// Filter nodes that we want to export
file.select.include = "Inkludera";
file.select.all = "Alla";
file.select.visible = "Synlig";
file.select.selected = "Vald";
file.select.unselected = "Inte vald";

// Export each node in a separate file
file.export.separate = "En fil per objekt";

// Export the current selected objects instead of the entire scene
file.onlySelection = "Inkludera endast valda objekt";
file.onlySelection.help = "Inkludera endast det valda, istället för hela scenen.";
// Tries to generate quad (rectangle polygon) from triangles
file.convertToQuad = "Återkonstruera quad";
file.convertToQuad.help = "Återkonstruera quads från trianglar genom att para ihop trekant (om de är intill varandra i filerna).";
// ----------------------------------------------
// Whether we include the textures in the exported file
file.export.texture = "Texturer";
// Baking means transfering/converting
file.export.texture.help = "Det här alternativet bakar inte in vertexfärger i texturer.

Det inkluderar bara texturer ifall objektet har texturer i sitt material.";
// ----------------------------------------------
file.export.color0 = "Vertexfärger";
file.export.color1 = "PBR målarfärg";
file.export.color1.help = "Exportera grovhet, metallisk och maskmålning. Detta kommer att ignoreras av andra programvaror.";
// ----------------------------------------------
// Whether we include normals vector in the exported file
file.export.normal = "Normals";
file.export.normal.help = "Markera det här alternativet om du vill öppna filen i andra mjukvaror.

Nomad ignorerar alltid normals, eftersom det kommer att räkna om dem.";
// ----------------------------------------------
file.export.tangent = "Tangenter";
file.export.tangent.help = "För att öppna filen i andra mjukvaror, kryssa i detta alternativ.

Tangenter används endast om modellen har en normal karta.

Nomad ignorerar alltid tangenterna eftersom de kommer omräknas.";
// ----------------------------------------------
file.export.nomad.help = "Nomad Sculpt internt filformat.

Det här formatet laddas inte på andra mjukvaror, det är mestadels för återimportsyften.";
// ----------------------------------------------
// Whether we include layers in the exported file (see glossary for layer)
file.export.gltf.layer = "Skikt";
file.export.gltf.layer.help = "Exportera skikt som morfs. Officiellt stödd av glTF så det borde även fungera på andra mjukvaror.";
// Whether we include painting of layers in the exported file (see glossary for layer)
file.export.gltf.layerPaint = "Skiktmålning";
file.export.gltf.layerPaint.help = "Exportera skiktmålning. Det ignoreras vanligtvis av andra mjukvaror.";
// ----------------------------------------------
file.export.obj.warning = "Lager och extra målning (grovhet, metallgrad och mask) kommer att förloras.";
// Whether we include the vertex color in the exported file
file.export.obj.color = "Vertexfärger";
file.export.obj.color.help = "Vissa 3D-program kan läsa det, men inte alla.";
file.export.obj.color.help.append = "Lägg till färginformation efter vridningar.";
file.export.obj.color.help.hexa = "Ett alternativt sätt att koda färg. Det stöder även maskdata.";
file.export.obj.faceGroup = "Ansiktsgrupp";
file.export.obj.object = "Skriv objekt";
file.export.obj.object.help = "Håll objekten separerade.

Om du inaktiverar detta alternativ kommer allt att exporteras som en enda enhet.
Du måste inaktivera detta alternativ om du vill använda Mesh ID / Polygroup-funktionen i Substance Painter.";
file.export.obj.archive = "Typ";
file.export.obj.archive.folder = "Mapp";
file.export.obj.archive.zip = "Zip";
file.export.obj.archive.help = "Vissa appar (Google Drive, One Drive, osv.) stödjer inte mappimport, så du kan använda Zip istället.";
// ----------------------------------------------
file.export.ply.warning = "Lager och extra målning (grovhet, metallgrad, etc.) kommer att förloras.";
// ----------------------------------------------
file.export.stl.warning = "Lager och extra målning (grovhet, metallgrad, etc.) kommer att förloras.";
// Whether we include the vertex color in the exported file
file.export.stl.color = "Vertexfärger";
file.export.stl.color.help = "Vissa 3D-program kommer att kunna läsa det, men inte alla.";
// ----------------------------------------------
file.export.usd.skew = "Tillåt skev";
file.export.usd.skew.help = "Tillåt lutning i matristransformationer.

När inaktiverad kommer Nomad att dela lutningsmatriser i två separata skalning- och rotationstransformationer.";
// ----------------------------------------------
// Advanced settings
settings.advanced = "Avancerat";
// Means that all these options will be resetted when the app restarts
settings.notSaved = "Dessa alternativ sparas inte i inställningarna.";
settings.reset.title = "Inställningar";
settings.reset.title.help = "Det kommer att återställa appens inställningar för preferenser.

Vissa resurser sparas separat och kommer INTE att återställas, det inkluderar:
• Projekt
• Tangentbordsgenvägar
• Verktygsförinställningar
• HDR-miljöer
• MatCaps
• Alphas
• Texturer (pensel)
• Referensbilder

Observera att allt som är kopplat till projektet kommer att hållas intakt, såsom belysning, Post Process, kamravyer, etc.";

// Reset preference settings button
settings.reset = "Återställ till standard";
settings.reset.confirm = "Återställa preferensinställningar?";

// Render a screenshot of the scene
file.render = "Rendera";
// If we include the App Interface in the exported screenshot
file.render.showInterface = "Visa gränssnitt";
// Resolution ratio of the exported screenshot
file.render.renderRatio = "Renderingsförhållande";
file.render.renderRatio.help = "Ett värde på 1.0 innebär att Nomad kommer att rendera med samma upplösning som den begärda bildstorleken nedan.

Använd detta alternativ om du inte kan rendera i en viss upplösning (kraschar på grund av minnesbrist).";
// Desired size of the exported screenshot
file.render.size = "Slutlig storlek";
// Desired size of the exported screenshot (custom vs predefined size)
file.render.size.custom = "Anpassad";
// Screen resolution parameters for the export screenshot features
file.render.screenResolution = "Skärm";
// width of exported screenshot
file.render.width = "Bredd";
// height of exported screenshot
file.render.height = "Höjd";
// export screenshot of the scene
file.render.warn = "Exportupplösningen är hög ($0x$1)!

Se till att spara ditt projekt om din enhet får slut på VRAM och kraschar.";
// If true, then the exported screenshot will have transparency data in the image
file.render.transparent = "Transparent bakgrund";
file.render.transparent.help = "Detta alternativ kan vara användbart om du vill infoga nätet i en 2D-skaparesapplikation.

Delvis objekttransparens stöds för närvarande inte.";

// Disable this option to have per-tool pressure settings (instead of shared settings)
pressure.useGlobal = "Använd globala inställningar";
pressure.useGlobal.help = "Som standard delar verktygen samma tryckinställningar.

Avmarkera det här alternativet om du vill ha specifika tryckinställningar för det här verktyget.";

// Pencil pressure
pressure.title = "Tryck";
// Pencil/Stylus pressure will be ignored
pressure.noTool = "Det här verktyget använder inte penntryck.";
// The tool can support pressure but its selected stroke type will ignore it
pressure.noGrab = "Gripa strecktyp kommer att ignorera tryckinställningar.";
// The stylus pressure will impact the tool radius (more pressure -> bigger radius)
pressure.radius = "Radie";
// The stylus pressure will impact the tool intensity (more pressure -> stronger intensity)
pressure.intensity = "Intensitet";
// Average pencil pressure event to get smoother result
pressure.average = "Tryckutjämning";
pressure.average.help = "Medelvärde tryckhändelser för ett mjukare resultat.";
// Limit pressure to 100%
pressure.limit = "Begränsa trycket till 100%";
pressure.limit.help = "Detta är en global inställning.

Använd detta alternativ för att säkerställa att pentrycket aldrig överstiger 100%.";

// list of inputs allowing camera interaction
gesture.camera = "Kamera";
// list of inputs allowing sculpting interaction
gesture.sculpt = "Skulptera";
// Select object
gesture.select = "Markera objekt";
// Finger/Touch input
gesture.finger = "Finger";
// Stylus/Pencil
gesture.stylus = "Stylus";
// Mouse/Trackpad
gesture.mouse = "Mus";

// long press to pick the color/material under the cursor
gesture.dropper = "Materialval";
gesture.dropper.help = "Färg-/materialmarkören kan aktiveras genom att långa trycka på duken.

Observera att det bara fungerar om den aktuella penseln har målning aktiverad.";

camera.airStroke = "Tillåt luftstrykning";
camera.airStroke.help = "Tillåt skulpteringssvepet att börja även om den initiala markören missar meshen.

Detta alternativ är endast aktivt för inmatningar med skulptering aktiverad och kamera avstängd.";

// Three fingers on screen
gesture.three.title = "Tre fingrar";
gesture.three.light = "Rotera belysning";
gesture.three.light.help = "Rotera miljön, ljus och MatCap.";
gesture.three.radius = "Verktygsradie";
gesture.three.intensity = "Verktygsintensitet";

// If this option is enabled, finger inputs on screen will use the smoothing tool
gesture.finger.smooth = "Fingret slätar alltid ut";
gesture.finger.smooth.help = "Detta alternativ är endast aktivt om ett skulpteringsverktyg är aktivt.";
// If enabled, the pressure will be taken into account even if it's not coming from a recognized stylus
gesture.unknownPressure = "Tillåt okänt tryck";
gesture.unknownPressure.help = "Markera detta alternativ om trycket inte fungerar med din penna eller om du behöver fingertryck.";

// Action when we press an Android pencil button
gesture.pencilAction.android = "Pennknapp";
// Action when we use the Pencil double Tap
gesture.pencilAction.ios = "Pennans dubbeltryck";
gesture.pencilAction.ios.help = "Endast aktiv för Apple Pencil 2:a generationen.";
// Pencil button (or iOS pencil double tap) action: Nothing
gesture.pencilAction.none = "Ingen";
// Pencil button (or iOS pencil double tap) action: flip adding/substracting sculpt matter setting
gesture.pencilAction.alt = "Lägg till/Subtrahera";

// Enable Mask gesture by tapping once on the screen
gesture.mask.oneTap = "Enkeltapp kortkommandon";
gesture.mask.oneTap.help = "Tillåt Mask-genvägen genom att trycka en gång på skärmen, utan att behöva hålla ned maskningsknappen.

Det kommer att möjliggöra följande gester:
• tryck på bakgrunden för att invertera masken
• tryck på ett maskerat område för att sudda masken
• tryck på ett omaskerat område för att skärpa masken";
// Hold the finger on screen to toggle between two tools: Mask and SelMask
gesture.mask.holdStroke = "Streck";
gesture.mask.holdStroke.help = "Långtryck växlar mellan Mask och SelMask och börjar ett nytt drag.

I slutet av draget väljs det föregående verktyget tillbaka.";
gesture.mask.holdIdle = "Verktyg";
gesture.mask.holdIdle.help = "Håll in och släpp utan att röra på dig för att växla mellan Mask och SelMask.";

// Shortcut customization, choose the action that the shortcut will performan (select tool, etc)
gesture.shortcut = "Kortkommando";

// Shortcuts to undo/redo
gesture.history = "Historikgenvägar";
gesture.history.help = "• Ångra: tryck med två fingrar
• Gör om: tryck med tre fingrar";
gesture.history.hold = "Håll intryckt";
gesture.history.hold.help = "Håll två/tre fingrar nere.";

// Size rejection is when we try to ignore the palm of the hand when we interact with a tablet
gesture.palmRejection = "Handflatsavvisning";
gesture.palmRejection.confirm = "Se till att inaktivera detta alternativ om du har problem med att interagera med duken!";
gesture.palmRejection.help = "Avvisa inmatning om kontaktområdet är större än det här värdet.

Fungerar kanske inte på alla enheter.";
// Size in pixel for the palm rejection feature
gesture.palmRejection.size = "Maxstorleksgräns";

// Smoothing strategy
extract.polish.all = "Alla";
extract.polish.sharp = "Skarp kant";
extract.polish.border = "Endast kanter";
// Smooth the border in a way that it matches completely with its dual
extract.polish.syncBorder = "Synkronisera kant";
// topology of extracted mesh
extract.edgeLoop = "Kantslinga (sida)";
extract.edgeLoop.auto = "Automatisk kantslinga";
extract.edgeLoop.division = "Indelning";
// The thickness of the extracted mesh (from the painted mask)
extract.thickness = "Tjocklek";
// Carve the mask into the surface
extract.carve = "Skulptera";
// Extract a new mesh from the painted mask
extract = "Extrahera";
// Preview extract
extract.preview = "Förhandsgranska";
// Extract two new mesh from the painted mask and from the unmasked area
extract.split = "Dela";
// How should we close the topology of the extracted object
extract.action = "Avsluta åtgärd";
extract.action.help = "• Ingen
Extrahera helt enkelt delen och låt delen vara öppen.

• Fylla
Hålet fylls och jämnas till.
Använd inte detta alternativ för plana ytor.

• Skal
Stäng den extraherade formen genom att använda tjockleksvärdet.

• Lager
Extrahera lagerdifferensen (endast undermenyn för lager).";
// Do not close the mesh (leave it open)
extract.action.none = "Ingen";
// Close the mesh with a hole-filling algorithm
extract.action.fill = "Fyll";
// Close the mesh by adding a thickness on the surface
extract.action.shell = "Skal";
// Close the mesh by using the layer data as a difference thickness
extract.action.layer = "Lager";

// uv part of revolution surface
genus.main = "Huvud";
genus.hole = "Hål";
genus.bottom = "Botten";
genus.top = "Topp";

// History, list of undo/redo
history = "Historia";
// First "undo" state
history.root = "Rot";
history.undoConfirm = "Bekräftar du att du vill återkalla alla dessa åtgärder?";
history.undoWarning = "Om du gör en ändring efteråt kan du förlora många förändringar.";
// Settings concerning the history stack of undo/redo
history.stack = "Stack";
// Actions to include in the undo/redo stack
history.include = "Inkludera åtgärder";
// include lighting editing in the undo/redo
history.includeLights = "Ljus";
history.includeLights.help = "Om det här alternativet är inaktiverat kommer flyttning av ljus med Gizmo fortfarande räknas in eftersom det kan påverka andra objekt i scenens hierarki.";
// include postProcess editing in the undo/redo
history.includePostProcess = "Efterbehandling";
// include shading parameters (MatCap & HDRIs) editing in the undo/redo
history.includeShading = "MatCaps & HDRIs";
// Can limit the stack of undo/redo size
history.limitSize = "Historikgräns";
history.limitSize.help = "Maximal storlek på historiken.

Historiken kommer att uppdateras vid nästa registrerade händelse.";
// Limit the number of undo in the history stack
history.limitStack = "Stackbegränsning";
history.limitStack.help = "Maximalt antal operationer som applikationen kan behålla.

Historiken kommer att uppdateras vid nästa registrerade händelse.";
// Value where you define how many operations you can undo before it displays a warning
history.rangeProtect = "Maximalt återställbar";
history.rangeProtect.help = "Om du går långt bakåt i historiken, visas en bekräftelsedialog innan många operationer återställs.";
// When enabled, each time the user undo an operation it will undo the camera position as well
history.restoreCamera = "Återställ kamera";
history.restoreCamera.help = "Aktivera det här alternativet för att återställa sparad kameraposition när du ångrar/gör om en åtgärd.";
// Undo
history.undo = "Ångra";
// Redo
history.redo = "Gör om";
// Shown during undo
history.state.undo = "Ångra: $0";
// Shown during redo
history.state.redo = "Gör om: $0";
// Shown during undo/redo
history.state.symmetrySplit = "Symmetriavdelning";
// Shown during undo/redo
history.state.voxelRemesh = "Voxellomskapa";
// Shown during undo/redo
history.state.surfaceRemesh = "Ytomskapa";
// Shown during undo/redo
history.state.multiresLevel = "Upplösningsändring";

// Debugging/Inspect object material (view channel separately color, roughness, normal, uv, etc)
inspect = "Inspektör";
// Inspector but SHORT
inspect.short = "Inspektera";
// Display the material channel on the background
inspect.onBackground = "På bakgrund";
// Display the material channel on the mesh
inspect.onMesh = "På Nät";
// Show UV seams
inspect.seams = "Sömmar";

// Interface customization
interface = "Gränssnitt";

// UI customization: one item row will stands on one line (synonym: Inlined)
interface.compact = "UI: Kompakt";

// UI customization: each row of the list will be bigger
interface.expandList = "UI: Expandera lista";
// UI customization: each row of the list will be bigger
interface.expandList.help = "Bara ett UI-alternativ för enklare listadministration.";

// Add shortcuts buttons to the bottom of the screen
interface.shortcut.bottom = "Lägg till genvägar (botten)...";
// Floating window
interface.shortcut.float = "Lägg till genvägar (fönster)...";

// Interface option (main base color)
interface.colorBase = "Färgbas";
// Interface option (accent widget color)
interface.colorSelect = "Färgwidget";
// Interface option (if the menus are transparent or opaque)
interface.panelTransparent = "Transparent panel";
// Interface option (panel blurriness, if the menus are transparent)
interface.blurFactor = "Suddstyrka";
// Interface option (color of panels, if the menus are transparent)
interface.colorBaseTransparent = "Färgpanel";

// Interface color style
interface.preset.title = "Förinställningar";

// Reset interface settings
interface.resetAll = "Återställ stil";
interface.resetAll.confirm = "Återställa gränssnittsinställningar?";
// help popup when hovering
interface.hoverHelp = "Hjälp-popup vid hovrande";
// Interface option (main base color)
interface.iconSupport = "Högkontrast-knapp";
interface.iconSupport.help = "En alternativ stil för knappar som gör dem mer synliga när de är aktiverade.

Om inställd på Auto, kommer Nomad att använda det här läget när UI-kontrasten mellan aktiverad/avaktiverad är låg.";
// Interface customization
interface.flipTop = "Spegelvänd toppfält";
// Interface customization
interface.flipBottom = "Spegelvänd bottenfält";
// Interface customization
interface.flipMiddle = "Spegelvänd sidofält";
// list of tools
interface.toolbox = "Verktygslåda";
// hide toolbox by default
interface.toolbox.hide = "Dold";
// Interface customization (the toolbox is a grid, we can adjust the column count)
interface.toolbox.columns = "Kolumner";
// Interface customization (the toolbox is a grid, we can adjust the column count)
interface.toolbox.rows = "Rader";
// Reset the tool's order in the toolbox
interface.toolbox.resetOrder = "Återställ ordning";
// Colored text and icon
interface.toolbox.color = "Färgad";
// Scale the interface
interface.scale = "Övergripande skala";
// Spacing between widgets
interface.cursorStep = "Vertikalt mellanrum";
// Width of the interface panels
interface.panelWidth = "Panelbredd";
// Size of fonts
interface.fontScale = "Teckensnittsskala";
// Inset
interface.inset.title = "Kantförskjutningar";
interface.inset.title.help = "Du kan ändra dessa värden endast om du har problem med att interagera med knapparna på skärmkanterna.

Om skjutreglaget är inaktiverat kommer Nomad att använda de säkra områdesvärden som enheten själv returnerat.";

// (see Glossary for Layer)
layer = "Lager";
layers.syncTransform = "Synkronisera transform";
layers.syncTransform.help = "Om aktiverad, kommer alla oönskade lager att justeras beroende på transformens rotation, skala och skevhet.

Inaktivera detta alternativ om de andra lagren ska användas utan den nya transformen som du tillämpar.

När den är inställd på auto, kommer endast de synliga lagren att justeras.";
// (see Glossary for Layer)
layers.lock = "Behåll toppskiktsdetaljer";
// (see Glossary for Layer)
layers.lock.yes = "Lås de översta lagren?";
// (see Glossary for Layer)
layers.lock.warning = "Under skulptering kommer deformationen från de översta lagren att ignoreras.

Men detaljerna i dessa lager kommer fortfarande att synas.

Detta alternativ fungerar endast om de översta lagren har relativt små detaljskalor.";
// (see Glossary for Layer)
layers.addLayer = "Lägg till lager";
// (see Glossary for Layer)
layer.factors = "Kanalfaktorer";
// (see Glossary for Layer)
layer.factor = "Faktor";
// (see Glossary for Layer)
layer.offset = "Förskjutning";
// Layer blend mode
layer.blendMode = "Blendläge";
// (see Glossary for Layer)
layer.base = "Bas";
layer.base.nothing = "Inget att extrahera!";
layer.base.background = "Bakgrundsmaterial";
layer.base.background.help = "Om aktivt, kommer endast de materialvärden som skiljer sig från bakgrundsmaterialet att extraheras.";
// (see Glossary for Layer)
layers = "Lager";
layers.title = "Lager";
// (see Glossary for Layer)
layers.title.help = "Lager kan spela in positionsförskjutningar och målning, vilket kan vara användbart för ett ickelinjärt arbetsflöde. Till exempel genom att experimentera med olika ansiktsuttryck utan att förlita sig på historikstacken för att ångra ändringarna.

För målardata sorteras lagren uppifrån och ner; så att lager ovanpå kommer att maskera de nedre.

Du kan radera en del av lagret med `DelLayer`-verktyget.";
layers.primitive = "Skikt är inte tillgängliga för primitiv.";
// When there is no layer selected (see Glossary for Layer)
layers.baseSelected = "Ingen";

light = "Ljus";
lights = "Ljuskällor";
// Intensity of light
light.intensity = "Intensitet";
// Color of light
light.color = "Färg";
// Kelvin (the temperature unit)
light.kelvin = "Kelvin";
// Temperature in Kelvin (Alternative way to compute the color of the light)
light.temperature = "Temperatur";
// The attachment of a light defines how it will move when the user moves the camera
light.attachment = "Fäste";
// The light will stay still even if the user moves the camera
light.attachment.fixed = "Fast";
// The light will move along the camera
light.attachment.camera = "Kamera";
light.attachment.help = "• Fixerad
Ljusorienteringen ändras inte.

• Kamera
Ljusorienteringen beror på kameravyen.";
// Light type (directional, spot, point)
light.type = "Typ";
// Directional light (synonym: sun light)
light.type.directional = "Riktad";
light.type.sun = "Sol";
// Directional light (synonym: sun light)
light.type.environment = "Miljö";
light.type.hdri = "HDRI";
// Spot light emits light in a single direction, restricted by a cone shape.
light.type.spot = "Spot";
// Point light emits lights everywhere (synonym: omni, omnidirectional)
light.type.point = "Punkt";
// For directional light (angle jitter)
light.angle = "Vinkel";
// For point/spot light (offset jitter)
light.size = "Storlek";
// Cone angle for spot angles
light.spot.angle = "Kotte vinkel";
// Softness of the spot light
light.spot.softness = "Mjukhet";
// Position of the light
light.position = "Position";
// Enable or disable shadows for a light
light.shadow.cast = "Skugga";
// Point light only works with "screenspace" shadow type (not "shadow map")
light.shadow.pointTip = "Punktljus stöder endast skärmyteskuggor.";
light.shadow.type = "Skuggtyp";
// https://en.wikipedia.org/wiki/Shadow_mapping
light.shadow.type.shadowMap = "Skuggkarta";
// Shadows computed with only the information visible on screen
light.shadow.type.screenspace = "Skärmyta";
light.shadow.type.screenspace.help = "Experimentell funktion, den kan tas bort i en framtida version.

Detta alternativ är avsett att användas med funktionen för mjuka skuggor.";
// Adjustment to fix artefacts
light.shadow.bias = "Bias";
// How blurry the shadow is
light.shadow.softness = "Mjukhet";
// Contact shadows are more precise shadows on small distance (synonym: cavity shadows?)
light.contact = "Kontakt";
light.contact.help = "Om 'auto' väljs kommer endast det mest dominerande ljuset att ha kontaktskugga.";
// Thickness threshold for screen-space shadows (synonym: threshold, bias)
light.shadow.tolerance = "Tolerans";
// Activated the light
light.visible = "Visa";
// Move the light in front of the camera (but keeps its inner orientation)
light.resetPosition = "Centrera om";

// Object's material
material = "Material";
// See glossary
material.pbrRoughnessMetalness.warning = "Roughness och metalness kräver PBR-skuggning.";
// See glossary
material.pbrReflectance.warning = "Reflectance kräver PBR-skuggning.";
// See glossary
material.pbrRefraction.warning = "Refraction kräver PBR-skuggning.";
// See glossary
material.pbrSubsurface.warning = "Underyta kräver PBR-skuggning.";
// Value that says how much light will change direction when hitting the surface
material.ior = "Brytningsindex";
// an object-level value that overrides the roughness interior/surface of the mesh
material.paintingOverride = "Åsidosätt grovhetsvärde";
// The roughness in the inside is turbidity
material.paintingOverride.help = "Det finns två grovhet som påverkar, en som driver ytan och en inuti.

Men det finns bara en målningsbar grovhet, så de två grovheterna har samma värden.";
// Glossiness is simply the opposite of roughness
material.refraction.surface = "Yta";
// Synonym: turbidity
material.refraction.interior = "Inre";
// Set the roughness of the object with a value of 0
material.paintGlossy = "Glansmåla";
material.paintGlossy.help = "Det kommer att måla objektet med en grovhet och metallhet på 0, vilket möjliggör skarp brytning.

Detta är samma sak som att gå in i målningsmenyn och använda funktionen 'måla allt' med färg avaktiverad.";
// Simulate the light being absorbed when it travels through the volume.
material.absorptionEnable = "Absorption";
material.absorptionEnable.help = "Simulera ljuset som absorberas när det passerar genom volymen.

Tunna delar kommer att lysa eftersom de släpper igenom mer ljus, medan tjocka områden blir mörkare.

Effekten beror kraftigt på objektets form, endast en ungefärlig tjocklek används.";
material.absorptionFactor = "Faktor";
// Depth means how far the light can travel under the surface
material.subsurfaceDepth = "Djup";
// Enable translucency (same as subsurface but only affect lights that enter a solid and escape from the other side)
material.translucency = "Translucens";
material.translucency.help = "Du behöver ha ett ljus som kastar skuggor för att se translucens.";
// Opacity factor, the opposite of transparency (synonym: Alpha)
material.opacity = "Opacitet";
// Fully opaque material
material.type.opaque = "Oopakt";
material.type.opaque.help = "Det här är standardmaterialtypen.

Den målade vertex-alpha, opacitetstexturen eller alfakanalen av färgkanalen kommer fortfarande att beaktas genom dithering.

Endast huvudsreglaget för opacitet ignoreras.";
// Fully opaque material
material.type.shadowCatcher = "Skuggfångare";
material.type.shadowCatcher.help = "Gör objektet helt genomskinligt, förutom skuggor som ljuskällor kastar.

Detta läge brukar användas på plangeometri.";
material.type.shadowCatcher.warning = "Det finns inga ljuskällor med skuggor i din scen, Skuggfångaren kommer att vara inaktiv.

Om skuggfångaren däremot är helt metallisk, kan Skuggfångaren reflektera scenen om SSR (Reflektion) Post Process är aktiverad.";
// See glossary
material.type.subsurface = "Subyta";
material.type.subsurface.help = "För bästa resultat kan du växla till PBR-skuggning och använda minst ett riktat ljus, idealiskt i en dim omgivning.";
// Transparency mode, alpha blendingd
material.type.blending = "Blandning";
material.type.blending.help = "Gör objektet halvgenomskinligt genom att justera opacitetsvärdet.

Observera att på grund av realtidsbegränsningar kan du ha märkbara visuella artefakter om ditt objekt har en komplex form.";
// Transparency mode
material.type.additive = "Additiv";
material.type.additive.help = "Gör objektet halvgenomskinligt genom att justera opacitetsvärdet.

Denna metod tenderar att ha färre artefakter än blandningsmetoden, men objektet kommer att vara ljusare.";
// Transparency mode based on dithering
// https://en.wikipedia.org/wiki/Dither
material.type.dithering = "Dithering";
material.type.dithering.help = "Gör objektet halvgenomskinligt genom att ignorera några pixlar slumpmässigt.";
// Simulate glass-like material
material.type.refraction = "Brytning";
material.type.refraction.help = "Detta läge kan användas för att simulera glasmaterial.

På grund av realtidsbegränsningar är självbrytning eller flerlagersbrytning begränsad.";
material.castShadows = "Kasta skuggor";
material.receiveShadows = "Ta emot skuggor";
// Lights are ignored, the object will be displayed with color only
material.alwaysUnlit = "Alltid utan belysning";
// Inverse the side of the object triangles
// https://en.wikipedia.org/wiki/Back-face_culling
material.flipCulling = "Omvänd rensning ";
// How much light a surface will reflect (synonym: specular)
material.reflectance = "Reflekterande förmåga";
material.reflectance.help = "Kontrollera mängden reflektion som materialet tar emot för icke-metalliska material.

Oftast bör standardvärdet användas (vilket motsvarar den standard 4 % reflekterat ljus vid normal vinkel).";
// Material preview in the viewport
material.preview = "Materialvisningsfönster förhandsvisning";
material.preview.help = "När du modifierar ett material kommer en förhandsvisning att visas i visningsfönstret på det valda objektet.

Förhandsvisningen visas medan du interagerar med reglagen för färg, grovhet, metallinnehåll, opacitet och intensitet.";
// Menu name
menu.files = "Filer";
// Menu name
menu.scene = "Scen";
// Menu name
menu.multires = "Multiresolution";
// Menu name
menu.voxel = "Voxel";
// Menu name
menu.dynamic = "DynTopo";
// Menu name (Synonym: Misc, Other)
menu.topology = "Blandat";
// Menu name
menu.primitive = "Grundform";
// Menu name
menu.render = "Rendera";
// Menu name
menu.material = "Material";
// Menu name
menu.postprocess = "Efterbehandling";
// Menu name
menu.camera = "Kamera";
// Menu name
menu.background = "Bakgrund";
// Menu name
menu.tool = "Verktyg";
// Menu name
menu.stroke = "Penseldrag";
// Menu name
menu.alpha = "Alpha";
// Menu name
menu.filter = "Filter";
// Menu name
menu.falloff = "Avmattning";
// Menu name
menu.paint = "Måla";
// Menu name
menu.symmetry = "Symmetri";
// Menu name
menu.operation = "Operation";
// Menu name (pencil pressure)
menu.pressure = "Tryck";
// Menu name
menu.gesture = "Gest";
// Menu name
menu.layers = "Lager";
// Menu name
menu.settings = "Inställningar";
// Menu name
menu.interface = "Gränssnitt";
// Menu name
menu.bindings = "Bindningar";
// Menu name
menu.history = "Historik";
// Menu name
menu.historySettings = "Inställningar";
// Menu name
menu.about = "Om";
// Menu name
menu.debug = "Debugga";

// Operation on the object (action)
mesh.holes = "Hål";
// If the object has holes, the algorithm will close them
mesh.holes.close = "Stäng hål";
// Says how dense (number of triangles) the algorithm will use in order to fill holes
mesh.holes.detail = "Detalj";
// If the mesh has disconnected parts, it will be split/separated into objects
mesh.separate = "Separera";
// When converting the object to a triplanar primitive, some object features will be lost
mesh.triplanar.warning = "Lager, målning och multiresolution kommer att förloras.";
// Resolution of the triplanar grid
mesh.triplanar.resolution = "Upplösning";
// Make the triplanar a regular cube (all 3 dimension equal)
mesh.triplanar.cubic = "Tvångs-kubb";
// Covnert an object to a triplanar primitive
mesh.triplanar.convert = "Konvertera";
// Static object means "static topology"
mesh.static = "Mesh";
// See glossary
mesh.multires = "Multiresolution";
// Dynamic topology
mesh.dynamic = "DynTopo";

// Disable this option to have per-tool material settings (instead of shared settings)
paint.useGlobal = "Globalt material";
paint.useGlobal.help = "Om detta alternativ är aktiverat, kommer det valda materialet att vara detsamma som för de andra verktygen.

Observera att det endast tar hänsyn till inställningar för grovhet, metallämne och färg.";
// The current tool will paint the object if this option is enabled
paint.usePainting = "Streckmålning";
// If true save the textures data into
paint.preset.embed = "Bädda in texturer";
paint.preset.embed.help = "Texturerna finns i mappen Nomad textures/. Materialförinställningarna finns i mappen Nomad materials/.

När det här alternativet är avstängt refererar materialförinställningen endast till texturen i mappen textures/.

Du kan aktivera detta alternativ för att skapa en kopia av texturerna i materialförinställningen.
Det kan vara användbart om du vill dela en texturerad förinställning utan att tillhandahålla de tillhörande texturerna.";
paint.preset.embed.apply = "Applicera på alla material";
// Factor/Opacity of paint tool
paint.intensity = "Målarkraft";
// Apply the paint on the object
paint.paintAll = "Måla allt";
paint.paintAll.help = "Applicera det nuvarande materialet på objektet.";
paint.paintAll.help.mask = "Maskerat område påverkas inte.";
paint.paintAll.help.hide = "Dolt område påverkas inte.";
paint.paintAll.help.opacity = "Använd verktygsfaktorn för målning ovan.";
paint.paintAll.help.layer = "Omålat område av ett lager påverkas inte.";
paint.strokePainting.title = "Målning";
// Brush stroke texture
paint.texture.warningEnable = "Streckmålning måste aktiveras för att tillåta texturprojektion (kryssruta längst upp)!";
paint.texture.warningIgnored = "Det aktuella verktyget kan inte använda texturer!";
// use stencil mode
paint.stencil = "Schablon";
// Inherit stroke falloff option for the painting
paint.tool.help = "Använd verktygs alfa, falloff och slumpmässig för att modulera intensiteten i dina måleriska penseldrag. Dessa alternativ ignoreras för målningen av alla objekt, men alfan beaktas för den triplanära varianten.";
// when the user choose a new item name (through iOS/Android virtual keyboard)
input.name = "Nytt namn";
// when the user choose a new number value (through iOS/Android virtual keyboard)
input.number = "Nytt värde";
// when the user choose a new color (through iOS/Android virtual keyboard)
input.hexcolor = "Ny färg (hex-format)";

// Post process effect
postprocess = "Efterbehandling";
// Denoise
postprocess.denoise = "Dämpa ljud";
postprocess.denoise.help = "Tillämpa ett reduceringspass efter att alla ramar har ackumulerats.";
postprocess.denoise.warning = "Detta är en dyr operation, aktivera bara denna effekt om bilden är brusig.";
// Quality vs performance
postprocess.quality = "Kvalitet";
postprocess.quality.help = "Aktivera dessa alternativ för att förbättra kvaliteten till bekostnad av prestandan.";
// More samples means better quality but slower performance
postprocess.maxSamples = "Maximalt prover";
// Full resolution (1:1 resolution) instead of half resolution
postprocess.fullResolution = "Full upplösning";
// Number of frames that we accumulate (higher value means better quality)
postprocess.accumulateCount = "Maximal bildprovering";
postprocess.accumulateCount.help = "Maximalt antal bildrutor att ackumulera innan rendering stannar.

När rendering stannar kommer Nomad inte att göra något, vilket sparar batteritid.

Många renderingsegenskaper gynnas av bildackumulering, särskilt:
• Mjuka skuggor
• Global illumination
• Reflektion (SSR)
• Ambient Occlusion
• Subsurface
• Fältdjup

Höga bildantal är mest nödvändiga för mjuka skuggor och global illumination.
Nomad kan stoppa rendering tidigare om funktionerna ovan är inaktiverade.";
// The value is a ratio (0.5 means half resolution 2 means twice the resolution)
postprocess.renderRatio = "Renderupplösning";
postprocess.renderRatio.warning = "Tillbakaställt av Pixel Art-effekten.";
postprocess.renderRatio.help = "Detta alternativ påverkar prestandan mycket.
Det rekommenderas att ha ett värde under 1,25.

Detta alternativ sparas inte i inställningarna.";
// Temporal Anti-Aliasing (no need to translate "TAA")
postprocess.taa = "Anti-aliasing (TAA)";
postprocess.taa.help = "Minskar flimmer när du rör kameran.";
// Ditherhing pixel
postprocess.dithering = "Dithering";
postprocess.dithering.help = "Ordna pixlar för att minska banding-artefakter.";
// Screen-Space Reflection (no need to translate "SSR")
postprocess.ssr = "Reflektion (SSR)";
postprocess.ssr.warning = "SSR kräver PBR-skuggning.";
// Screen-Space Global Illumination (no need to translate "SSGI")
postprocess.ssgi = "Global illumination (SSGI)";
// Thickness threshold for ssgi tracing algorithm (synonym: threshold, bias)
postprocess.ssgi.tolerance = "Tolerans";
postprocess.ssgi.warning = "SSGI kräver PBR-skuggning.";
// Screen-space ambient occlusion (SSAO)
// https://en.wikipedia.org/wiki/Ambient_occlusion
postprocess.ssao = "Omgivande Occlusion";
// How far the effect spreads
postprocess.ssao.radius = "Storlek";
// How strong the effect is
postprocess.ssao.factor = "Styrka";
// Adjustment to fix artefacts
postprocess.ssao.bias = "Krökningsförskjutning";
postprocess.ssao.bias.help = "Hur känslig effekten är beroende på ytans krökning.";
// Depth of Field (bokeh)
// https://en.wikipedia.org/wiki/Depth_of_field
postprocess.dof = "Skärpedjup";
// The blur factor behind the focused point
postprocess.dof.blurFar = "Fjärroskärpa";
// The blur factor in front of the focused point
postprocess.dof.blurNear = "Nära oskärpa";
postprocess.dof.focusTip = "Tryck på ett objekt för att ändra fokuspunkt.";
// Bloom (light bleeding)
// https://en.wikipedia.org/wiki/Bloom_(shader_effect)
postprocess.bloom = "Blomma";
// Intensity of the effect
postprocess.bloom.intensity = "Intensitet";
// How far the effect spreads
postprocess.bloom.radius = "Radie";
postprocess.bloom.radius.help = "Hur utbredd blomman är.";
// Luminosity threshold (below this value, no bloom is generated)
postprocess.bloom.threshold = "Tröskel";
postprocess.bloom.threshold.help = "Ljusstyrketröskel för att avgöra om en pixel kommer att producera blom eller inte.
Om värdet är 0 kommer allt att bloma.";
// https://en.wikipedia.org/wiki/Tone_mapping
postprocess.tone = "Tonkartläggning";
postprocess.tone.exposure = "Exponering";
postprocess.tone.contrast = "Kontrast";
postprocess.tone.saturation = "Mättnad";
postprocess.tone.hue = "Färgton";
// No tonemapping operator is used
postprocess.tone.mapping.none = "Ingen";
// A neutral tonemapping is used
postprocess.tone.mapping.neutral = "Neutral";
// Color curves
postprocess.curve = "Färgteckning";
// Curve for pixel luminance
postprocess.curve.luminance = "Huvudsak";
postprocess.curve.red = "Röd";
postprocess.curve.green = "Grön";
postprocess.curve.blue = "Blå";
// Reset color grading curves
postprocess.curve.resetAll = "Återställ Allt";
// https://en.wikipedia.org/wiki/Chromatic_aberration
postprocess.chromatic = "Kromatisk Aberration";
postprocess.chromatic.factor = "Styrka";
// Darking on the edges
postprocess.vignette = "Vinjett";
// How far the effect spreads
postprocess.vignette.size = "Storlek";
// How sharp the edge of the effect is
postprocess.vignette.hardness = "Hårdhet";
// Unblur the image (sharpening)
// https://en.wikipedia.org/wiki/Unsharp_masking
postprocess.sharpness = "Skarphet";
postprocess.sharpness.factor = "Styrka";
// Filmic Grain
// https://en.wikipedia.org/wiki/Film_grain
postprocess.grain = "Korn";
postprocess.grain.factor = "Styrka";
// Accentuate the edges of the model
postprocess.curvature = "Krökning";
// main strength of curvatre
postprocess.curvature.factor = "Faktor";
// Color/Strength of concave curvature
postprocess.curvature.cavity = "Hålighet";
// Color/Strength of convex curvature
postprocess.curvature.bump = "Bula";
// https://en.wikipedia.org/wiki/Pixel_art
postprocess.pixelArt = "Pixelkonst";
// Override frame accumulation feature
postprocess.pixelArt.allowAccumulate = "Tillåt bildruta sampling";
// Simulate scanline rendering (horizontal line)
postprocess.scanline = "Linjeskanning";
postprocess.scanline.factor = "Faktor";
// Spacing between lines
postprocess.scanline.spacing = "Mellanrum";

// Geometry Primitive (box, sphere, cylinder, etc)
primitive = "Prim";
primitive.box = "Box";
primitive.sphereCube = "Kvadsfären";
primitive.sphereUV = "UV-sfär";
primitive.icosahedron = "Ikosaeder";
primitive.cylinder = "Cylinder";
primitive.cone = "Kon";
primitive.torus = "Torus";
primitive.lathe = "Drej";
primitive.tube = "Rör";
primitive.plane = "Plan";
primitive.triplanar = "Triplanar";
primitive.needValidate = "Prim borde valideras!";

// If enabled, we can edit primitive inside the viewport
primitive.edit = "Redigera";
primitive.edit.help = "Tillåt 3d-redigering i vyn.

Du kan inaktivera denna funktion om du vill interagera med Gizmo eller transformera verktyget utan att ändra prim.";

// Primitive configuration
primitive.mainConfig = "Parameter";
// Interface section where we change the topology (number of triangles/polygons)
primitive.topology = "Topologi";
// Interface section where we change the geometry (shape of the primitive)
primitive.geometry = "Geometri";

// Validating the primitive (then it can be sculpted)
primitive.validate = "Validera";
// Maximum number of faces of the primitives
primitive.maxFaces = "Max ansikten";
primitive.maxFaces.help = "Det maximala antalet ansikten en prim kan ha.

Detta gräns är endast aktivt medan primen inte är validerad, därefter försvinner skyddet.";
// Synonym: Flat subdivision
primitive.linear = "Linjär delning";
// Post as "subdivision that occurs after the primitive computation"
primitive.subdivision = "Postdelning";

// Radius (of a sphere, torus, etc)
primitive.radius = "Radie";
// Make sure the two end-point of a primitive (cylinder, tube, etc) have the same size
primitive.radius.sync = "Samma radie";
primitive.radius.start = "Radie start";
primitive.radius.end = "Radie slut";
// Size (of cube x dimension)
primitive.size = "Storlek";
primitive.sizeX = "Storlek X";
primitive.sizeY = "Storlek Y";
primitive.sizeZ = "Storlek Z";
// Division only impacts the topology (synonym: resolution)
primitive.division = "Division";
primitive.divisionX = "Division X";
primitive.divisionY = "Division Y";
primitive.divisionZ = "Division Z";
// Angle of torus, etc
primitive.angleX = "Vinkel X";
primitive.angleY = "Vinkel Y";
primitive.angleZ = "Vinkel Z";
// It means we try to keep regular sized quad (square) instead of highly distorted rectangule
primitive.constantDensity = "Konstant densitet";
// Make sure the shape is perfectly spherical
primitive.projectOnSphere = "Projektera på sfär";
primitive.projectOnSphere.help = "Fäster punkterna på en perfekt sfär.";

// triplanar
primitive.triplanar.title = "Triplanar";
primitive.triplanar.title.help = "Triplanar använder maskinformationen från 3 plan för att fylla en voxelnät som sedan polygoniseras.

Om du interagerar med delnings- eller storleksreglagen, kommer målningsinformationen återställas (släthet påverkas ej).

Du bör nog inaktivera symmetri eftersom den kanske inte fungerar som förväntat.

Du kan använda `Topologiskt kopplad` - alternativet i maskpanelen för att måla ett plan som påverkar de andra planen.";
// Make sure the box is a regular cube (same 3 dimension)
primitive.triplanar.sameSize = "Samma storlek (kub)";
primitive.triplanar.polish = "Glathet";
// Mask refers to the painted mask on the triplanar planes
primitive.triplanar.resetMask = "Återställ mask";
// One side of a cube (the back plane)
primitive.isolate.back = "Bak";
// One side of a cube (the right plane)
primitive.isolate.right = "Höger";
// One side of a cube (the bottom plane)
primitive.isolate.bottom = "Botten";
// Plane
primitive.planeSameSize = "Samma storlek (kvadrat)";
// Make the plane a disk/ellipse instead of a rectangle
primitive.planeDisk = "Skiva";
// Box
primitive.boxRegular = "Samma storlek (kub)";
// Torus
primitive.torus.radiusOuter = "Yttre radie";
primitive.torus.radiusInner = "Inre radie";
primitive.torus.angle = "Vinkel";
primitive.torus.angleOffset = "Vinkelförskjutning";
// Cylinder
primitive.cylinder.height = "Höjd";
// Cone
primitive.cone.radius = "Radie";
primitive.cone.height = "Höjd";
// Hole sub menu (cylinder, tube, etc)
primitive.hole = "Hål";
// Make a hole in the primitive to make it hollow
primitive.hasHole = "Har hål";
// Curve profile (synonym: profile, curve)
primitive.profile = "Profil";
primitive.profile.viewport = "Visa i viewport";
// If the revolution surface has caps (E.g: cylinder)
primitive.cap = "Hätta";

// Singular of Repeaters (Nodes that make many copies of its children (type of mirror/curve/array/radial))
repeater = "Repeater";
// All the new items will be inserted inside the bound rather than outside
repeater.array.fitInside = "Passas inuti";
// The object will follow the curve
repeater.curve.align = "Justera";

// Import resource (Alpha, Textures, MatCaps, etc)
resource.import = "Importera...";
// iOS Photos gallery
resource.import.ios.photos = "Foton";
// iOS Files App
resource.import.ios.files = "Filer";

scene.title = "Scen";
scene.title.help = "När du använder synlighets-/valknapparna, håll och dra fingret för att enkelt markera andra objekt.

Du kan också långtrycka på synlighets-/valknapparna för att påverka barnen också.";
// The view will focus on the item when we click on it
scene.focus = "Gränssnitt: Fokusera på objekt vid dubbeltryck";
// Add new object on gizmo position
scene.addOnGizmo = "På gizmo";
scene.addOnGizmo.help = "Flytta noden till gizmo-positionen (om gizmo-verktyget är valt)";
// Select the gizmo tool after adding a new object
scene.addSelectGizmo = "Välj gizmo";
scene.addSelectGizmo.help = "Välj gizmo-verktyget när du lägger till en ny nod";
// Icon size in pixel (min/max)
scene.iconSize = "Ikonstorlek";
// Min size of icon
scene.iconSize.min = "Min";
// Max size of icon
scene.iconSize.max = "Max";
// display hierarchy lines (visibility helper)
scene.showHierarchy = "Hierarkilinjer";
scene.showHierarchy.help = "Visa en linje mellan förälder och dess barn i vyn.";
scene.showHierarchyNomadPivot = "Använd Nomad pivot";
scene.showHierarchyNomadPivot.help = "Nomad pivot är den pivot som används av Transform och Gizmo verktygen.

Om detta alternativ inaktiveras, kommer det använda den naturliga baspivoten.
I vissa fall kan denna baspivot vara långt från objektets centrum!";
// The view will focus on the item when we click on it
scene.syncVisible = "Synka synlighet";
scene.syncVisible.help = "När aktiverat kommer användandet av synlig (öga) ikonen att påverka alla valda objekt.";
// Merge 2 objects without modifying the geometry or the topology
scene.join = "Foga ihop";
// Group the selected object with a new created Empty Node as a parent
scene.group = "Grupp";
// Move the item outside its parent (synonym: ungroup)
scene.unparent = "Lossa från förälder";
// Mirror node type, a node that make many copies of its children (mirror symmetry)
scene.mirror = "Spegla";
// Curve node type, a node that make many copies of its children (along a curve)
scene.curve = "Kurva";
// Array node type, a node that make many copies of its children (grid repetition pattern)
scene.array = "Array";
// Radial node type, a node that make many copies of its children (radial symmetry)
scene.radial = "Radiell";
// Nodes that make many copies of its children (type of mirror/curve/array/radial)
scene.repeaters = "Repeterare";
scene.repeaters.help = "Repeteringsnoder som skapar instanser av alla geometrier under dem i scenhierarkin.";
// Validate button
scene.validateGroup = "Valide";
// Keep instances in the scene
scene.validateGroup.keepInstances = "Behåll instanser";
// If we should join children
scene.validateGroup.joinChildren = "Foga ihop barn";
// Merge/weld 2 objects by recomputing all the topology and creating a new object
scene.mergeVoxel = "Voxelsammanslagning";
scene.voxelResolution = "Upplösning";
// The hidden objects will be "substracted" (the object will carve the other object)
scene.subtractionTip = "Subtraktion: Dolda objekt";
// If all the objects are hidden, only the parts where they intersect (collide) will be kep
scene.intersectionTip = "Snittyta: Alla objekt dolda";

// Need at least to select one object
scene.noneButNeedAtLeastOne = "Inget valt objekt, vänligen välj minst ett objekt.";
// Need to select one object only
scene.noneButNeedOne = "Inget valt objekt, vänligen välj ett objekt.";
// Need to select one object only
scene.onlyOneObject = "Flera objekt är valda, vänligen välj endast ett objekt.";
// Boolean operation
scene.boolean = "Boolean";
scene.boolean.help = "Slå ihop, subtrahera eller skär objekt genom att utföra en boolean operation.

Operationen kan misslyckas om några objekt inte är mångfaldiga eller inte är vattenfyllda.

Om boolean-funktionen misslyckas kan du alltid använda voxel-remesharen på det problematiska objektet för att säkerställa att det är en vattenfylld mångfald.";
// Weld intersection
scene.boolean.mergeIntersection = "Svetsintersektion";

// General scene display settings
settings.display.title = "Visa inställningar";
// Wireframe (show triangles and quad edges)
settings.wireframe = "Wireframe";
// Display the material texture
settings.debugChannel = "Visa Textur";
// Display the material texture in the background
settings.debugChannel.onBackground = "I Bakgrunden";
// Display the material texture on the mesh
settings.debugChannel.onMesh = "På Mesh";
// If the object is opened (a simple plane for example), two sided means we'll be able to see if from the two sides of the planes
settings.twoSided = "Två sidor";
settings.twoSided.help = "Ytor kommer att synas från båda sidor.";
// If we colorize the inverted side of faces
settings.backface.color = "Baksidans färg";
// Color of the inverted side of faces
settings.backface.colored = "Färgad baksida";
// Outline (contour highlight around the selected object)
settings.outline = "Kontur";
// Outline (contour highlight around the selected object)
settings.outline.help = "De valda objekten kommer att kontureras.";
settings.outline.thickness = "Tjocklek";
// Navigation cube (easy to snap/align the view)
settings.snapCube = "Snap-kub";
// Move the navigation cube to the bottom of the screen
settings.snapCube.bottom = "Botten";
// Move the navigation cube on the left side of the screen
settings.snapCube.left = "Vänster";
// Flip the camera (rotate 180° to see the other side)
settings.snapCube.flip = "Vänd 180°";
settings.snapCube.flip.help = "Vänd vy om vyn redan är snappad.";
// Alignment (can be auto/on/off)
settings.snapCube.align = "Begränsa justering";
settings.snapCube.align.help = "Justera vyerna till världsaxeln. Om aktiverat, endast 6 snapping-vyer är möjliga.

På Auto kommer begränsningen endast att ske om kameran är i Orbit-läge.";
// Stats (information logs about the scene displayed on screen)
settings.stats = "Statistik";
settings.stats.right = "Höger";
settings.stats.all = "Visa fullständig scen";
// Grid
settings.grid = "Rutnät";
// Cursor
settings.cursor.title = "Markör";
settings.cursor.whileSculpting = "Visa cirkel vid skulptering";
// A small indicator dot
settings.cursor.showDot = "Visa liten prick";
settings.cursor.showDot.help = "Pricken kan visas som kamerans vridpunkt eller när du skulpterar.";
settings.cursor.showRope = "Visa repstabilisator";
// indicator
settings.indicator.title = "Indikator";
settings.indicator.title.help = "Visa en visuell indikator (handledningar, skärmdump, etc).";
settings.indicator.size = "Storlek";
// Highlight (the object glows when we select it)
settings.highlight.selection = "Markera val";
// Highlight settings
settings.highlight = "Höjdpunkt";
settings.highlight.duration = "Varaktighet";
// Mesh that are not selected will be dark
settings.darkenUnselected = "Mörka aobjekt som inte valts";
// https://en.wikipedia.org/wiki/Shading
settings.smoothShading = "Jämn skuggning";
// Experimental feature
settings.partialDraw = "Delvis ritning";
settings.partialDraw.help = "Experimentell funktion!

Använd det om du skulpterar en relativt liten del av ett högupplöst mesh.

Det borde underlätta skulpteringen, men du bör inte aktivera wireframe!

Det kan också skapa visuella artefakter under penseldragen";
settings.partialDraw.warning = "Glöm inte att stänga av det här alternativet om de visuella artefakterna stör för mycket!";
// Disable this option to force a white uniform paint instead of showing the objects painting
settings.showPainting = "Visa måleri";
// Show and use the masking on the mesh
settings.showMasking = "Visa mask";
// Disable this option to force show the hidden faces
settings.showDiscard = "Använd Dölj";
// Show icon on the canvas
settings.icon = "Ikon";
// Show icons on the canvas
settings.icons = "Ikoner";
// Tooltip
settings.icons.help = "Visa en ikon på duken så att du kan välja och redigera dem direkt.";
// Hole filling settings
settings.hole = "Fyllning av hål";
// Allow the hole filling algorithm to handle non-manifold (non regular topology)
settings.hole.nonManifold = "Fyll icke-manifold";
settings.hole.nonManifold.help = "Försök att fylla icke-manifold hål.
Detta alternativ sparas inte i inställningarna.";
// Maximum number of vertices (points)
settings.multires.maxVertices = "Max antal vertiser";
settings.multires.maxVertices.help = "Nomad utför ingen minneskontroll innan indelning, ett högt antal polygoner kan lätt leda till kraschar.";
settings.multires.lowResVertices = "Låg upplösningströskel";
settings.multires.lowResVertices.help = "En lägre upplösning av meshet kan visas när du rör kameran.

Du kan öka detta värde om du vill visa en högre upplösning av meshet.";

// The main rendering mode
shading = "Skuggning";
// Main rendering mode (PBR stands for Physically Based Rendering)
shading.pbr = "Upplyst (PBR)";
shading.pbr.help = "I det här läget kan du lägga till ljus (med skuggor), tillsammans med en HDR-miljö.

Du kan också måla metalliskhet och grovhet, vilket ger mer kontroll över utseendet på ditt material.";
// Fast rendering mode for sculpting purpose
shading.matcap = "MatCap";
shading.matcap.help = "Står för MATerial CAPture, en MatCap hanterar både ljus och materialinformation i en enda bild.

Detta är ett snabbt renderingläge, mest lämpligt för rå skulptering.";
// Unlit rendering mode, it simply displays a solid/flat color
shading.unlit = "Ej upplyst";
shading.unlit.help = "Solid färglägesläge, utan belysning.";
// Helper rendering mode that display solid colors
shading.object = "Objekt-ID";
shading.object.help = "Oljus renderingläge där varje objekt har en slumpmässigt tilldelad färg.

Detta är mest användbart när du har många objekt i din scen.";
// Helper rendering mode that display solid colors
shading.instance = "Instans-ID";
shading.instance.help = "Samma som Objekt-ID, men instanserna kommer att ha samma färg.";
// Helper rendering mode that display solid colors
shading.material = "Material-ID";
shading.material.help = "Visa en solid färg för varje materialinstans.";
// Randomize colors
shading.id.randomize = "Slumpmässigt ID";
shading.textures = "Använd texturer";
shading.textures.help = "För tillfället kan du inte skapa eller redigera texturer i Nomad.

Men om du importerar en fil med texturer i, borde den fungera.

• Stödda texturer
Opak: Lit, MatCap, Oljus
Normal: Lit, MatCap
Färg: Lit, Oljus
Ljus: Lit
Grovhet: Lit
Metallness: Lit";
// Lights
shading.lights = "Belysning";
shading.lights.addLight = "Lägg till ljus";
shading.lights.warning = "Belysning kräver PBR-lägesläge.";
// Environment based lighting (synonym: HDRI)
shading.environment = "Miljö";
shading.environment.import = "Importera HDR";
shading.environment.exposure = "Exponering";
shading.environment.backgroundBlur = "Oskärpa (bakgrund)";
shading.environment.rotation = "Rotation";
shading.environment.rotation.help = "Du kan rotera miljön genom att dra 3 fingrar horisontellt på vyn.";
// The environment will always be aligned with the camera (so that the lighting is consistent)
shading.environment.attachedToCamera = "Fäst vid kamera";
shading.environment.attachedToCamera.help = "Fäst miljön vid kameran.

Detta kommer att säkerställa att ljuset är konsekvent, vilket kan vara användbart för skulpturändamål.";
shading.matcap.rotation = "Rotation";
shading.matcap.rotation.help = "Du kan rotera MatCap genom att dra 3 fingrar horisontellt på visningsfönstret.";
shading.matcap.global = "Använd global MatCap";
shading.matcap.global.help = "Avmarkera detta alternativ för att använda en annan MatCap för detta speciella mesh.";

// bottom shortcut buttons (should be SHORT)
shortcut.maskVisible = "Mask";
shortcut.solo = "Solo";
shortcut.xray = "Röntgen";
shortcut.voxelRemesh = "Voxel";
shortcut.wireframe = "Tråd";
shortcut.cameraReset = "Återställ";
shortcut.cameraSnap = "Knäppa";
shortcut.lockSelection = "Lås";
shortcut.lockSelection.help = "När aktiverad kan du inte ändra urvalet genom att peka på ett mesh.";
shortcut.grid = "Rutnät";

// Memory taken by the scene
stat.ramScene = "Scen";
// Vram = Video RAM (Video Memory, the memory of the graphic card)
stat.vramScene = "Vram-scen";
// Vram = Video RAM (Video Memory, the memory of the graphic card)
stat.vramRender = "Vram rendering";
// Vram = Video RAM (Video Memory, the memory of the graphic card)
stat.vramTextures = "Vram Texturer";
// Memory taken by the undo/redo history
stat.ramHistory = "Historik";
// Memory taken by other stuffs
stat.ramOther = "Övrigt";
// Memory used by the app (RAM, not storage!)
stat.usedMemory = "Använd minne";
// Memory available for the app (RAM, not storage!)
stat.freeMemory = "Fri minne";
// RAM, not storage!
stat.ram = "RAM";
stat.used = "Använd: $0";
stat.free = "Fri: $0";
stat.faces = "Ytor";
stat.triangles = "Trianglar";
stat.vertices = "Vertexer";
// quadrangular polygon (polygon with 4 sides)
stat.quads = "Kvadrater";
stat.vertex = "Vertex";
stat.scene.face = "Scenytor";
stat.scene.vertex = "Scene vertices";

// Brush stroke
stroke = "Penseldrag";
// The brush radius is either screen-space (fixed size on the screen) or world-space (fixed size in the scene)
stroke.useWorldRadius = "Världsutrymmets radie";
// The settings is shared among every tools
stroke.useWorldRadius.help = "Detta delas mellan alla verktyg.";
// Share the radius value among every tools.
stroke.useShareRadius = "Dela radie";
stroke.useShareRadius.help = "Dela radievärdet mellan alla verktyg.";
// When doing a brush stroke, the spacing is the distance between 2 sculpt operations
stroke.spacing = "Penseldragsavstånd";
// Adjust the brush intensity to ensure consistent deformation depending on the stroke spacing.
stroke.spacing.adjust = "Justera avståndsintensitet";
stroke.minSpacingAdjustIntensity.help = "Justera penselns intensitet för att säkerställa konsekvent deformation beroende på penseldragsavståndet.";
stroke.minSpacing.help = "Avstånden mellan varje penseldrag, relativt till verktygets radie.

Lägre värde ger ett mjukare penseldrag men prestandan försämras.";
// Brush stroke smoothing
stroke.lazySmooth = "Penselslätning";
stroke.lazySmooth.help = "Genomsnittlig flera pekarposition för att få ett jämnare penseldrag.

Med höga värden kommer penseldraget att ligga efter pekaren men till slut hinna ikapp.";
// Make the brush stroke lags behind the pointer cursor
stroke.lazyRadius = "Slö repsstabilisator";
stroke.lazyRadius.help = "Penseldrag kommer att ligga efter pekarens position enligt ett visst avstånd.

Detta kan användas för att rita mjuka linjer.";
// It is not a per-tool settings
stroke.globalSettings = "Detta är en global inställning";
// Start the brush stroke from the last sculpted position to ensure there is no discontinuity
stroke.snapRadius = "Fäst radie";
stroke.snapRadius.help = "Fäst penseldraget om pekaren ligger nära den senaste registrerade strokes.

Detta kan vara användbart när man ritar långa sammanhängande linjer, medan man gör frekventa pauser.";
// offset between the cursor and the brush stroke (for fat finger on small screen)
stroke.sculptOffset = "Penseldragsförskjutning";
stroke.sculptOffset.help = "Applicera en konstant förskjutning på penseldraget.

Detta alternativ finns där för att hjälpa små skärmar vid användning av fingrar, så att ditt finger inte täcker penseldraget.";
stroke.accumulate = "Akkumulera penseldrag";
stroke.accumulate.help = "Om det här alternativet är aktiverat, finns det ingen gräns för hur mycket material du kan lägga till/ta bort per penseldrag.";
// The tool can use DynTopo
stroke.useDynamic = "Tillåt dynamisk topologi";
// Only sculpt the part that are linked topologically
stroke.connect = "Ansluten topologi";
stroke.connect.help = "Det här alternativet kommer att skulptera endast de vertices som är länkade till den valda ytan.

Det här används vanligtvis med Flytta-verktyget, till exempel om du enbart vill flytta en del som skär sig själv med en annan del.";
stroke.connect.short = "Anslutna";
// sculpt on hide or mask
stroke.protect = "Skyddsområde";
stroke.protect.hide.help = "När den är inställd på auto, redigeras dolda ytor om wireframe på de dolda ytorna är synliga (se wireframe-menyn).";
// Only sculpt the vertex that points toward the camera
stroke.culling = "Endast framåtvända vertex";
stroke.culling.help = "Det här alternativet kommer att ignorera bakåtvända vertex.

Det kan vara användbart om du vill måla en del av en tunn geometri utan att påverka andra sidan.

Det fungerar även för skulptering men du kan uppleva vissa artefakter.";
// Infinite depth, move everything under the circle, disregarding depth
stroke.silhouette = "Silhuett";
stroke.silhouette.view = "Visa";
stroke.silhouette.snapped = "Om fäst";
stroke.silhouette.closest = "Närmaste";
// Only sculpt the vertex that points toward the direction of the deformation
stroke.sameSide = "Endast vertex på samma sida";
stroke.sameSide.help = "Ignorera vertex som pekar i motsatt riktning som deformationen.";
stroke.onlyLasso = "Inställningar endast aktiva för lassoverktyget.";

// Here sampling refers to the app gathering information under the mouse
stroke.area = "Områdesprovtagning";
stroke.area.help = "Vissa borst- eller stroke-alternativ kräver en plan vinkelrät mot ytan för att fungera.
Du kan styra hur detta medelvärde beräknas genom att ställa in provtagningsområdet som en andel av verktygets radie.

Vid 100% beaktas alla punkter inom valcirkeln.
Vid 0% beaktas endast närmaste vertex eller triangel.";
// Sampling radius size (percent)
stroke.area.normal.radius = "Normalradie";
// Sampling radius size (percent)
stroke.area.point.radius = "Positionsradie";
// Sampling averaging
stroke.area.normal.average = "Normal medelvärde";
// Sampling averaging
stroke.area.point.average = "Position medelvärde";
// Keep sharp edges
stroke.keepSharp = "Behåll skarpa kanter";
stroke.keepSharp.help = "Exkludera punkter vars normala skiljer sig för mycket från ytan.

Det kommer att ändra hur planområdet beräknas (Områdesprovtagning).

Detta alternativ kan vara användbart för ett verktyg baserat på utjämning, eller om du vill färglägga en plan yta utan att spilla.";

// Only paint the part of the mesh above a certain height
stroke.depthFilter = "Djupmaskering";
stroke.depthFilter.help = "Exkludera punkter som är över eller under ett visst avstånd från den beräknade planet (Områdesprovtagning).

Som ett exempel kan det användas för att måla stötnar eller håligheter.";
stroke.depthFilter.max = "Övre området";
stroke.depthFilter.min = "Nedre området";
stroke.depthFilter.offset = "Höjdkompensation";

// Invert the pixel (black <-> white)
stroke.alpha.invert = "Invertera pixlar";
// Repeat the alpha image (pattern)
stroke.alpha.wrap = "Tile";
// No repeat pattern
stroke.alpha.wrap.none = "Ingen";
// Repeat the alpha in a regular manner (tiles with seams)
stroke.alpha.wrap.repeat = "Upprepa";
// Repeat the alpha in a mirrored (seamless tiling)
stroke.alpha.wrap.mirror = "Spegel";
// Tight fit when using tiling
stroke.alpha.fit = "Åtsittande passform (icke fyrkantiga bilder)";
stroke.alpha.fit.help = "Detta alternativ är endast relevant om alpha- och borsttexturerna inte är fyrkantiga.

När det är aktiverat, kommer varje bild att kaklas oberoende utan mellanrum.
Du kan inaktivera detta alternativ om du vill hålla alpha och andra bilder synkroniserade, ifall deras proportioner inte är desamma.";
// Alpha rotation
stroke.alpha.rotation = "Rotation";
stroke.alpha.rotation.lock.help = "Lås alfans orientering.

Om rotationen är olåst kommer orienteringen att följa stroke-riktningen i realtid.";
// Repeat the image
stroke.alpha.tiling = "Tile";
// Scale the image (make it bigger or smaller)
stroke.alpha.scale = "Skalning";
stroke.alpha.scale.help = "Vid minsta värde befinner sig alfa-kvadraten inom verktygets cirkelradie.";
// Middle-point value at which no deformation occurs
stroke.alpha.midValue = "Mellanvärde";
stroke.alpha.midValue.help = "Mittpunktsvärdet där ingen deformation förekommer.

(Mellanhål värde = 0)
• Svart: ingen förskjutning
• Vit: positiv förskjutning

(Mellanhål värde = 0.5)
• Svart: negativ förskjutning
• Vit: positiv förskjutning

(Mellanhål värde = 1)
• Svart: negativ förskjutning
• Vit: ingen förskjutning";
// Synonymous: Scatter/Jitter/Randomize
stroke.jitter = "Randomisera";
// Sculpt and paint along the brush stroke at regular spacing
stroke.type.dot = "Punkt";
// Sculpt and paint along with alpha spaced by brush radius
stroke.type.roll = "Rulla";
// Sculpt and paint with alpha projected on screen stencil
stroke.type.tile = "Platta";
// Sculpt and paint with alpha projected on 3 axis
stroke.type.triplanar = "Triplanar";
// Sculpt continuously
stroke.type.drag = "Dra";
// Lock a region and move it around
stroke.type.grab = "Greppa";
// Lock a point of interest and sculpt it by changing the tool radius
stroke.type.grabRadius = "Lås + radie";
// Lock a region and sculpt it by changing the tool intensity
stroke.type.grabIntensity = "Lås + intensitet";

stroke.falloffProject = "Påverkan";
stroke.falloffProject.help = "• Sfär (3d)
Påverkan beräknas genom att ta avståndet från vertex till penselns mittpunkt.

• Cirkel (2d)
Vertex projiceras först på områdesplanet, innan avståndet tas till penselns centrum.
Detta liknar hur alpha-värden samplas.";
stroke.falloffProject.sphere = "Sfär";
stroke.falloffProject.circle = "Cirkel";
stroke.falloffProject.cylinder = "Cylinder";

// Symmetry
symmetry = "Symmetri";
symmetry.enable = "Aktiverad";
symmetry.primitiveWarning = "Penselns symmetri är endast tillgänglig för validerade primitiver, med undantag för Triplanar.";
symmetry.plane.title = "Plan";
symmetry.toolIgnore = "Det aktuella verktyget ignorerar symmetri.";
// Instead of planar symmetry, use a radial symmetry
symmetry.radial.title = "Radiell";
symmetry.radialX = "Radiell X";
symmetry.radialY = "Radiell Y";
symmetry.radialZ = "Radiell Z";
// A warning indicating that we limit the number of repetitions ($0 is a number)
symmetry.limited = "Antalet upprepningar är begränsat till $0!";
// Synonym: Offset
symmetry.offset.title = "Förskjutning";
symmetry.offsetX = "Förskjutning X";
symmetry.offsetY = "Förskjutning Y";
symmetry.offsetZ = "Förskjutning Z";
// Number of clones
symmetry.count.title = "Antal";
symmetry.countX = "Antal X";
symmetry.countY = "Antal Y";
symmetry.countZ = "Antal Z";
// method
symmetry.method = "Metod:";
symmetry.method.help = "• Lokal
Symmetriplanen kommer att röra sig längs med mesh när du använder ett av omvandlingsverktygen (Gizmo eller Transformera).

• Värld
Symmetriplanen är fast och kommer inte att röra sig.";
// Local means: in the coordinate of the scene (synonym: absolute)
symmetry.method.world = "Värld";
// Local means: in the coordinate of the object (synonym: relative)
symmetry.method.local = "Lokal";
// Move the object to the other side of the symmetry (mirror it as well)
symmetry.flip = "Vänd objekt";
// Mirror the mesh
symmetry.mirror = "Spegling";
symmetry.mirror.help = "Försök att återanvända symmetrien utan att påverka topologin.

Radial symmetri kommer att ignoreras.

Om topologin inte kan behållas eftersom den inte betraktas som symmetrisk, får du möjligheten att påtvinga spegling.";
symmetry.mirrorFail = "Ingen symmetri kunde detekteras.

Vill du påtvinga symmetri genom att spegla meshen?";
symmetry.mirrorUseMasking = "Skydda maskeradt område";
symmetry.mirrorUseMasking.help = "Behåll maskeradt område intakt.

Detta alternativ kommer att ignoreras med icke-symmetrisk topologi (eller frånkopplade ytor, som ett par ögon).";
symmetry.apply = "Spegla
(behåll topologi)";
symmetry.splitMirror = "Dela & Spegla
(ny topologi)";
// Reset the symmetry plane position
symmetry.reset = "Återställ";
// Reset the symmetry plane positon to the object center
symmetry.reset.centerMesh = "Objekt centrum";
// Reset the symmetry plane positon to the scene (world) center
symmetry.reset.centerWorld = "Världscentrum";
// Reset the symmetry plane orientation
symmetry.reset.direction = "Orientering";
// Display a line on the object (to show where the symmetry lies)
symmetry.showLine = "Visa linje";
// Display the symmetry plane in 3d
symmetry.showPlane = "Visa plan";
// Allow the editing of the symmetry plane with the gizmo
symmetry.edit = "Gizmo redigera";
symmetry.edit.warning = "Symmetrieditering är experimentell.";
symmetry.edit.help = "Du kan fritt ställa in symmetriplanet.

Den här funktionen är lite experimentell och du bör förmodligen aldrig använda den.";

// Ideally <10 chars
tool.dynamic = "DynTopo";
// Ideally <10 chars (Symmetry)
tool.symmetry = "Sym";
// Ideally <10 chars (Mirror primitive)
tool.mirror = "Spegel";
// Ideally <10 chars
tool.clay = "Lera";
// Ideally <10 chars (Subtract)
tool.clay.sub = "Sub";
// Ideally <10 chars
tool.brush = "Pensel";
// Ideally <10 chars
tool.move = "Flytta";
// Ideally <10 chars (Normal vector, perpendicular to surface)
tool.move.normal = "Normal";
// Ideally <10 chars
tool.drag = "Dra";
// Ideally <10 chars (Smooth the surface by erasing the details)
tool.smooth = "Jämna ut";
// Ideally <10 chars (Tries to smooth the topology by making the polygons more regular)
tool.smooth.relax = "Slappna av";
// Ideally <10 chars (Paint mask)
tool.mask = "Mask";
// Ideally <10 chars
tool.mask.unmask = "Avmaskera";
// Ideally <10 chars (Selector Mask, use lasso/ellipse,etc shape to mask the mesh)
tool.maskSelector = "SelMask";
// Ideally <10 chars (Smudge the paint of the object)
tool.smudge = "Smeta ut";
// Ideally <10 chars (Flatten the surface)
tool.flatten = "Platta ut";
// Ideally <10 chars (Flatten the surface, more strongly than Flatten)
tool.planar = "Plan";
// Ideally <10 chars (Flatten the surface by offsetting the surface in the opposite direction)
tool.flatten.fill = "Fyll";
// Ideally <10 chars (Layer brush)
tool.layer = "Layer";
// Ideally <10 chars
tool.crease = "Veck";
// Ideally <10 chars (Cut part of the mesh cleanly)
tool.trim = "Beskär";
// Ideally <10 chars (Cut part of the mesh cleanly into two separate meshes)
tool.split = "Dela";
// Ideally <10 chars (Project part of the object onto a curve)
tool.project = "Projekt";
// Ideally <10 chars
tool.inflate = "Blås upp";
// Ideally <10 chars
tool.pinch = "Klämma";
// Ideally <10 chars
tool.nudge = "Knuffa";
// Ideally <10 chars
tool.stamp = "Stämpel";
// Ideally <10 chars (Delete Layer, a tool that can cancel the Layer deformation/paint)
tool.clearLayer = "Radera lager";
// Ideally <10 chars (Select multiple objects with a lasso tool)
tool.select = "Välj";
// Ideally <10 chars (Rotate, Translate and Scale the object)
tool.gizmo = "Gizmo";
// Ideally <10 chars
tool.gizmo.editPivot = "Pivot";
// Ideally <10 chars (Snap angle)
tool.gizmo.rotateSnap = "Snap";
// Ideally <10 chars (Snap translation)
tool.gizmo.moveSnap = "Snap";
// Ideally <10 chars (Local/Relative space)
tool.gizmo.local = "Lokal";
// Ideally <10 chars (Align/Snap the gizmo to world axis)
tool.gizmo.align = "Rikta";
// Ideally <10 chars (Pin the gizmo, so that it stays in place when switching between objects)
tool.gizmo.pin = "Fäst";
// Ideally <10 chars (Rotate, Translate and Scale the object)
tool.transform = "Transformera";
// Ideally <10 chars (Translate the object)
tool.transform.move = "Flytta";
// Ideally <10 chars (Rotate the object)
tool.transform.rotate = "Rotera";
// Ideally <10 chars (Scale the object)
tool.transform.scale = "Skala";
// Ideally <10 chars (Snap the object on another object surface)
tool.transform.snap = "Snap";
// Ideally <10 chars (Measure distance between 2 points)
tool.measure = "Mät";
// Ideally <10 chars (Lattice, deformer)
tool.lattice = "Galler";
// If an option is shared among the tools
tool.all = "Alla";
// Ideally <10 chars (Quad Remesher)
tool.remesh = "Quad Remesher";
tool.remesh.guides = "Guider";
tool.remesh.density = "Täthet";
tool.remesh.same = "Samma";
tool.remesh.half = "Halv";
// Ideally <10 chars (FaceGroup)
tool.faceGroup = "Face Group";
tool.faceGroup.autoPick = "Auto-välj";
tool.faceGroup.flush = "Ta bort oanvänd";
tool.faceGroup.skip = "Hoppa över små grupper baserat på:";
tool.faceGroup.skipFace = "Antal ansikten";
tool.faceGroup.skipFace.help = "Skapa inte en ny grupp om antalet ansikten är mindre än eller lika med denna tröskel.";
tool.faceGroup.skipArea = "Ytområde";
tool.faceGroup.skipArea.help = "Skapa inte en ny grupp om det nya gruppens ytarea är lägre än denna tröskel.

Tröskelvärdet anges i procent av objektets totala area.";
// Ideally <10 chars (Hide)
tool.hide = "Dölj";
// Ideally <10 chars (View tool, do nothing in particular)
tool.view = "Visa";
// Ideally <10 chars (Revolving surface along a line)
tool.lathe = "Svarv";
// Ideally <10 chars (Revolving surface along a curve)
tool.tube = "Rör";
// Ideally <10 chars (Insert object into the scene)
tool.insert = "Infoga";
// Ideally <10 chars (Flip/Invert/Negate the shape)
tool.shape.flip = "Vänd";
// Ideally <10 chars (No shape selected, same as Camera mode, does nothing in particular)
tool.shape.view = "Visa";
// Ideally <10 chars (Lasso selection)
tool.shape.lasso = "Lasso";
// Ideally <10 chars (Curve selection, same as Lasso and it's an open shape)
tool.shape.curve = "Kurva";
// Ideally <10 chars (Polygon selection, same as Lasso but with more precision)
tool.shape.polygon = "Polygon";
// Ideally <10 chars (Path selection, same as Lasso but with more precision and it's an open shape)
tool.shape.path = "Bana";
// Ideally <10 chars (Rectangular selection)
tool.shape.rectangle = "Rekt";
// Ideally <10 chars (Ellipse selection)
tool.shape.ellipse = "Ellips";
// Ideally <10 chars (Line selection, split the screen in half)
tool.shape.line = "Linje";
// Ideally <10 chars (Whether a shape is closed or not, a tube is open, a torus is closed)
tool.shape.closed = "Stängd";

// Radius of the tool (size)
tool.radius = "Radie";
// Intensity of the tool (force)
tool.intensity = "Intensitet";

tool.settings = "Inställningar";
tool.settings.none = "Detta verktyg har inga specifika inställningar.";

tool.crease.pinchFactor = "Klämfaktor";
tool.crease.offsetFactor = "Offsetfaktor";

tool.layer.removeInfluence = "Använd lagerdata";
tool.layer.removeInfluence.help = "Det här alternativet är endast aktivt när ett lager är valt.

Det kommer att använda lagerdata för att begränsa förskjutningen över penseldragen.";
tool.layer.noLayerSelected = "Det här alternativet är endast tillgängligt om ett lager är valt.";

tool.flatten.planeLockOrigin = "Lås planorsprung";
tool.flatten.planeLockNormal = "Lås planriktning";

// Option for Tube, Lathe and Insert tool
tool.syncInstance = "Sync";
tool.syncInstance.message = "Det nya objektet kommer att läggas till i alla andra instanser!";

// The vertex on the border of the mesh will stay still even if we try to smooth the border
tool.smooth.stickyBorder = "Klistrig vertice på kanten";
tool.smooth.screen = "Skärmutjämning";
tool.smooth.screen.help = "Använd detta alternativ för att få topologioberoende utjämning, även vid höga poly.";
tool.smooth.screen.samples = "Skärmexempel";
tool.smooth.stable = "Stabil utjämning";
tool.smooth.stable.help = "Försöker göra utjämningen oberoende av topologi.

Detta läge fungerar bäst med varierande topologitäthet och med högt utjämningsintensitetsvärde.";

tool.paint = "Måla";
// Erase the painting
tool.paint.erase = "Radera";
// Only paint the part of the mesh that was already painted in the layer (repainting)
tool.paint.layerFilter = "Lagerren filtrering";
tool.paint.layerFilter.help = "Använd det här alternativet om du bara vill måla om det redan målade området i ett lager.";

// Clear the painted mask
tool.mask.clear = "Rensa";
tool.mask.clearAll = "Rensa allt";
// Invert the painted mask
tool.mask.invert = "Invertera";
// Mask or Unmask a region (leave other region that unconnected intact)
tool.mask.flipConnected = "Invertera mask (ansluten)";
// Blur the painted mask
tool.mask.blur = "Sudda";
// Sharpen the edge of the painted mask area
tool.mask.sharpen = "Skärpa";
// Transform/Matrix
tool.matrix = "Matris";
// The target of the transform is either the Matrix or the Vertex of the object
tool.matrix.target = "Mål";
// Automatic
tool.matrix.target.auto = "Auto";
tool.matrix.target.auto.help = "Som standard fungerar detta på samma sätt som Grupp-alternativet.
Om mesh har masker, eller om symmetri är aktiverat, fungerar det på samma sätt som Vertex.";
// Auto apply the transform on the vertices
tool.matrix.target.vertex = "Vertice";
tool.matrix.target.vertex.help = "Försök att applicera transformeringen på vertikalerna, det kommer inte att fungera på icke-validerade primitiver.
Instanser påverkas också.";
// Transform the object alone (the children stands still)
tool.matrix.target.object = "Objekt";
tool.matrix.target.object.help = "Flytta bara objektet, ignorera symmetri och maskering.
Endast den redigerade noden kommer att flyttas, barnen kommer att förbli stilla.";
// Transform the object and its children
tool.matrix.target.group = "Grupp";
tool.matrix.target.group.help = "Flytta noden, ignorera symmetri och maskering.
Resten av hierarkin kommer också att transformeras.";
// Operation on the mesh
tool.matrix.action = "Operation";
tool.matrix.action.origin = "Flytta ursprung";
tool.matrix.action.origin.help = "Flytta meshen till världsursprunget.";
tool.matrix.action.bake = "Baka";
tool.matrix.action.bake.help = "Applicera matrisen till vertex och återställ matrisen. Visuellt bör inget förändras.";
tool.matrix.action.reset = "Återställ";
tool.matrix.action.reset.help = "Återställ meshens transformation till identiteten.";

// Synonym: shear, https://en.wikipedia.org/wiki/Shear_matrix or https://en.wikipedia.org/wiki/Shear_mapping
tool.matrix.skew = "Skevhet";
tool.matrix.translation = "Översättning";
tool.matrix.rotation = "Rotation";
tool.matrix.scale = "Skala";
tool.matrix.uniformScale = "Jamförd skala";

tool.transform.tip = "Enkeltryck med andra fingret för att byta läge";

// Size of the gizmo
tool.gizmo.size = "Gizmo storlek";
// If true, there is less spacing between gizmo handlers (rotate, scale, etc)
tool.gizmo.compact = "Kompakt";
// When enabled, tapping one the gizmo widget will open a numerical input popup
tool.gizmo.allowInput = "Numerisk inmatning";
tool.gizmo.allowInput.help = "Tillåt numerisk inmatning när du trycker på en av Gizmo-widgetens";
// Angle threshold
tool.gizmo.linearRollThreshold = "Tangentstödrullens tröskel";
tool.gizmo.linearRollThreshold.help = "Vinkeln för att välja mellan linjär eller cirkulär rullmetod.

Värden över detta tröskel kommer att använda cirkulär rull.

Om du föredrar den linjära rullen (riktningen för tangenten), ställ bara in detta värde till 90°.";
// Partially hide/fade the gizmo when we interact with it
tool.gizmo.autoHide = "Dölj vid interaktion";
tool.gizmo.tap = "Vid tryck";
tool.gizmo.tap.help = "Detta alternativ styr hur man flyttar pivån när man klickar en gång på mesh-ytan.";
tool.gizmo.tap.none = "Ingen";
tool.gizmo.tap.none.help = "Inget händer när man klickar på mesh.";
tool.gizmo.tap.normal = "Normal";
tool.gizmo.tap.normal.help = "Flytta gizmo till den första skärningspunkten och aligna den efter ytnormalen.";
tool.gizmo.tap.first = "Första";
tool.gizmo.tap.first.help = "Flytta gizmoot till den första skärningspunkten.";
tool.gizmo.tap.medial = "Medial";
tool.gizmo.tap.medial.help = "Flytta Gizmo till mitten av de två första korsningarna.";

// The lathe generator is a vertical line and cannot be rotated
tool.lathe.axisFixed = "Fast";
tool.lathe.axisOnly = "Endast axel";
tool.lathe.stable = "Stabil";
tool.lathe.axis = "Axel";

// Fill the object's hole
tool.hole = "Hål utfyllnad";
tool.hole.fillHoles = "Fyll hål";
// synonym: Alternative method
tool.hole.method.fill = "Fyll";
tool.hole.method.legacy = "Legacy";
tool.hole.method.boolean = "Boolean";
tool.hole.bridges = "Skärmrymds-boolean";
tool.hole.bridges.help = "Om detta alternativ är aktiverat kan du slå hål i volymen.
Snittlutningen kommer också att följa närmare skärformens kontur.";
tool.hole.threshold = "Tröskel epsilon";
tool.hole.threshold.help = "Att justera detta värde kan hjälpa algoritmen för hålfyllning.";
tool.hole.smoothing = "Hålslätning";

tool.smudge.quality = "Kvalitet";
tool.smudge.quality.help = "Det ändrar upplösningen av de projicerade pixlarna. Lägre värden innebär snabbare streck.";

// Shape for the tools: Trim / Split / Project / SelMask
tool.shape = "Form";
// Auto-validate the drawn shape
tool.shape.autoValidate = "Auto-validate";
// Force the rectangle selection to be a square
tool.shape.rectangleSquare = "Kvadrat";
// The selection rectangle will be centered around the cursor
tool.shape.rectangleCentered = "Centrerad";
// Force the ellipse selection to be a circle
tool.shape.ellipseCircle = "Cirkel";
// The selection ellipse will be centered around the cursor
tool.shape.ellipseCentered = "Centrerad";
// Rotate by step (angle value)
tool.shape.lineRotateStep = "Rotera stegvis";

// Show a yellow dot on the golden ratio point
tool.measure.goldenRatio = "Gyllene snitt";
// volume of a mesh
tool.measure.volume = "Volym";
// Surface of a mesh
tool.measure.surface = "Yta";

// Always display the camera shortcut buttons on the viewport
tool.view.stickyCamera = "Kameragenväg (alltid)";

// Topology
topology = "Topologi";
// Synynom: detail value, density
topology.dynamic.detail = "Detalj";
// See glossary
topology.multires = "Multiresolution";
topology.multires.help = "Behåll flera upplösningar av ett mesh.

Om du gör ändringar i en lägre upplösning, kommer detaljer från högre upplösningar att återprojiceras när du byter tillbaka.

Lager är tillgängliga på varje upplösning.";
// Synonym: Unsubdivide, Un-subdivide
topology.multires.reverse = "Omvänd";
topology.multires.reverse.confirm = "Kunde inte skapa grundläggande indelning.

Den nuvarande topologin är förmodligen inte ett resultat av en indelning.";
topology.multires.subdivide = "Dela upp";
topology.multires.subdivide.confirm = "Mesh kommer att ha $0M vertikaler, är du säker?";
// Prevents the user from subdivide the object again, a warning is displayed (with a UI link to increase this limit)
topology.multires.subdivide.limit = "Indelningsgräns överskriden, se $0";
topology.multires.deleteLower = "Ta bort lägre";
topology.multires.deleteHigher = "Ta bort högre";
topology.multires.keepTriangles = "Behåll trianglar";
topology.multires.lock = "Lås (LV0)";
// Navigate toward multiple resolutions (go to higher level)
topology.multires.up = "Multiresolutionsnivå →";
// Navigate toward multiple resolutions (go to lower level)
topology.multires.down = "Multiresolutionsnivå ←";
// Synonym: Flat subdivision
topology.multires.linear = "Linjär indelning";
topology.multires.linear.help = "Dela enkelt upp meshen utan att applicera någon utjämning";
// Only show the lowest resolution wireframe
topology.multires.minWireframe = "Endast nivå 0";
// Create a new object by recomputing a new topology
topology.remesh = "Remesha";
// Create a new object by recomputing a new topology, by using voxels (see Glossary)
topology.voxel = "Voxel Remeshing";
topology.voxel.help = "Remesh genom att sampla meshen på ett rutnät.

Om objektet inte är stängt (vattentät), kommer en hålfyllningsalgoritm att tillämpas först.

Lager återprojiceras efter remeshing men kvaliteten kommer att försämras.";
topology.voxel.resolution = "Upplösning";
topology.voxel.sharp = "Behåll skarpa kanter";
topology.voxel.sharp.help = "Detta alternativ är mest användbart för enkla primitiva booleanska operationer.

Det kommer att introducera distorsion i vissa områden på grund av att punkterna snäpps på kanterna.";
topology.voxel.subLevel = "Bygg multiresolution";
topology.voxel.subLevel.help = "Du kan bygga om en multiresolution-hierarki från resultatet av voxel-remesher.

Det kommer också att köras snabbare och använda mindre minne, särskilt om voxel-detaljerna är höga.
Men om voxel-detaljerna är låga och du ber om många multirelösnivåer kommer du att förlora detaljer.";
// Dynamic topology (DynTopo)
topology.surface.remesh = "Remesherna";
topology.surface.detail = "Detalj";
topology.surface.detail.help = "Till skillnad från voxel-remeshing kräver inte ytan-remeshing att meshen är stängd.

Det kan också stödja maskering så att du kan skydda vissa delar av meshen från topologiska förändringar.

Lagren uppdateras korrekt.";
topology.surface.method = "Metod";
// Uniformisation means we can both add and remove triangles/quads
topology.surface.method.uniformisation = "Uniformisering";
// We can only add triangles/quads (synonym: Refine)
topology.surface.method.subdivision = "Indelning";
// We can only remove triangles/quads (synonym: Simplify)
topology.surface.method.decimation = "Dekimation";
topology.surface.method.help = "Beteende hos dynamisk topologi:
• Uniformisering: lägga till och ta bort detalj
• Subdivision: lägga till detalj
• Decimation: ta bort detalj";
topology.surface.useMasking = "Skydda maskerat område";
topology.surface.useMasking.help = "De maskerade områdena kommer att skydda topologin från att ändras.";
topology.surface.extrapolate = "Växtextrapolering";
// DynTopo
topology.dynamic = "Dynamisk topologi";
topology.dynamic.global = "Global på/av";
topology.dynamic.activate = "Aktiverad";
topology.dynamic.activate.help = "Med dynamisk topologi kan skulpteringsverktyg dela upp eller förenkla mesh lokalt i realtid.

Denna funktion kan ha en märkbar påverkan på prestanda.

Lagren uppdateras korrekt.";
topology.dynamic.method = "Detaljer baserade på...";
topology.dynamic.method.screen = "Skärm";
topology.dynamic.method.radius = "Radie";
topology.dynamic.method.constant = "Konstant";
topology.dynamic.method.help = "• Zooma
Detaljnivån baseras på hur långt bort du är från ytan.

• Radie
Verktygsradien bestämmer mängden detaljer.

• Konstant
Detaljen är fast, detaljvärdet delas även med voxel-reglaget.";
topology.dynamic.quality = "Föredra...";
topology.dynamic.quality.help = "Om du väljer Kvalitet är de två huvudsakliga skillnaderna:
• Förfining tillämpas innan skulpteringsoperatören, du får färre interpoleringsartefakter när du målar eller skulpterar mycket små detaljer
• Förfining tillämpas inte stegvis, om du skulpterar mycket små detaljer eller gör snabba drag kommer topologin alltid att förfinas korrekt";
topology.dynamic.quality.speed = "Hastighet";
topology.dynamic.quality.quality = "Kvalitet";
// Whether the pencil pressure can impact the level of detail
topology.dynamic.usePressure = "Använd tryck på radien";
topology.dynamic.usePressure.help = "Använd det här alternativet om du vill att verktygets tryck på radien ska påverka detaljnivån.";
topology.dynamic.useFalloff = "Använd stroke-avfall";
// Decimate
topology.decimate.title = "Sprängning";
topology.decimate.title.help = "Minska antalet polygoner genom att försöka behålla så många detaljer som möjligt.

Denna funktion kan vara användbar om du vill exportera för 3D-utskrift.
Men du bör förmodligen inte använda det om du vill fortsätta skulptera, eftersom det kan producera ojämna trianglar.

Observera att det maskerade området inte kommer att sprängas.";
// Synonym: Simplify (Decimate reduce the number of triangles/quads while retaining details as much as possible)
topology.decimate = "Spränga";
topology.decimatePaintWeight = "Bevara målning";
topology.decimatePaintWeight.help = "Ett högre värde kommer att försöka bevara målningen.

Ställ in detta värde på 0 om du inte bryr dig om målningen.";
topology.decimateUniform = "Enhetliga ytor";
topology.decimateUniform.help = "Ett högre värde kommer att producera trianglar med liknande storlek.";
topology.decimatePreserveBorders = "Bevara kanter";
topology.decimatePreserveBorders.help = "Spräng inte nätets kant.";
// Target a certain number of triangles, faces and vertices
topology.target.triangles = "Målinriktade trianglar";
topology.target.faces = "Målinriktade ytor";
topology.target.quads = "Målinriktade fyrkanter";
topology.target.points = "Målinriktade punkter";
// Quad remesher
topology.qremesh = "Quad Remesh";
topology.qremesh.angle = "Veckvinkel";
topology.qremesh.border = "Bevara kanter";
topology.qremesh.onlyQuad = "Endast fyrkanter";
topology.qremesh.hole = "Max fyllhål";
topology.qremesh.hole.help = "Algoritmen kan ibland producera oönskade hål.

Om ett hål har färre hörn än detta värde, kommer det att fyllas.";

// Unwrapping means compute UV (texture coordinates), with uvs you can appliy (wrap) a texture onto the model
topology.uv.title = "UV Unwrap";
// UV Unwrap but as a Verb
topology.uv.unwrap = "Packa upp";
// The operation can be very slow
topology.uv.atlas.warning = "Kan vara mycket långsam, mål <100k vertikaler!";
// Handles are topological holes (synonym: genus, hole)
topology.uv.bff.warning = "Kan ha överlappningar om nätet har handtag!";
// Solo patch
topology.uv.bff.seamless = "Sömlösa plåster";
topology.uv.bff.seamless.help = "Detta alternativ kan introducera betydande förvrängning.

Vanligtvis kan det användas när ansiktsgrupper är noggrant konfigurerade.";
// Synonym: Point count? Singularity count ?
topology.uv.bff.cones = "Kon-räkning";
topology.uv.bff.help = "Högre värde kommer att minska förvrängning för komplexa objekt.

Högre värde betyder längre beräkningstid.";
topology.uv.delete = "Radera UVs";

// Transfer the vertex painting in the texture, bake means "create texture (from mesh data)"
topology.bake.title = "Baka";
// Bake here means "create texture (from mesh data)"
topology.bake.title.help = "Texturbakning kommer att skapa texturer genom att projicera andra synliga objekt i scenen.

Här är det typiska arbetsflödet för bakning:
• Du har en mesh med fina detaljer och målning
• Klona den
• Reducera den (ställ in `Bevara målning` till 0!)
• UV-frigör den
• Baka den!

Nu bör du ha en mesh med låg upplösning som behåller det mesta av din föregående objekts målning och detaljer.

Efter operationen kommer vertexfärger att flyttas till ett nytt inaktiverat lager, så att de ignoreras istället för att multipliceras mot den färgade texturen.

Följande logik kommer att gälla för vilka objekt som används för bakning:
- alla valda objekt och huvudsakliga valda objekt kommer att bakas (det starkaste markerade i scenmenyn)
- om det bara finns ett valt objekt kommer Nomad istället överväga alla synliga objekt
- om alla objekt är dolda (till exempel genom att använda Solo), kommer hela scenen att beaktas";
// Bake here means "create texture (from mesh data)"
topology.bake.self = "Från sig själv";
// Bake here means "create texture (from another mesh data)"
topology.bake.other = "Från högupplöst";
topology.bake.resolution = "Upplösning";
// Cage is a specific term, synonyom: "Bake offset"
topology.bake.offset = "Strål offset";
topology.bake.radius = "Burens radie";
// Bake opacity (from mask data)
topology.bake.opacityFromMask = "Mask -> Opacitet";
topology.bake.backup = "Backup";

// project a high resolution mesh details onto another
topology.reproject.title = "Projektera om";
topology.reproject.title.help = "Projektera skulpterade detaljer, målningar och lager från de närmaste synliga objekten.

Detta är mest avsett att användas på ett högupplöst nät, normalt med en ren topologi.";
// tweaking value
topology.reproject.rayBias = "Strålfel";
topology.reproject.rayBias.help = "Två metoder används för omprojektion:
• närmast: den närmaste punkten på ytan
• stråle: skärningspunkt genom normal riktning

Högre biasvärden kommer att gynna strålgenomgång istället för den närmaste ytan.";
topology.reproject.normalOffset = "Normalavvikelse";
topology.reproject.shpereCast = "Sfär kasta fall-back";
topology.reproject.shpereCast.help = "Om normalstrålens omprojektion misslyckas kommer Nomad att falla tillbaka till närmaste ytskärning.";
// number of iteration the algorithm will take
topology.reproject.iterations = "Iterationer";
topology.reproject.relax = "Avslappna";
topology.reproject.relax.help = "Avslappning bör föredras när mesh är låg poly.";
topology.reproject.layers.help = "Överför andra lager till det valda nätet.";

topology.manifold = "Mångfald";
topology.nonManifold = "Icke-mångfald";
topology.manifold.clean = "Rensa";
topology.manifold.collapse = "Ta bort små ytor";
topology.manifold.title = "Tvinga mångfald";
topology.manifold.title.help = "Försöker att rensa icke-mångfald kant.

Det kan vara användbart för externa mjukvaror som inte stödjer kanter som har fler än 2 gemensamma ytor.";

// Reset key-bindings/shortcuts
binding.reset = "Återställ bindningar";
// Add node in a sync mode (synchronize instance)
binding.addSync = "Sync";
binding.addSync.help = "Som standard kommer den att använda synkvärdet som ställs in i scene-menyn.";
// Binding option
binding.context.toggle = "Växla kontext";
binding.toggleTool = "Växla verktygssnabbval";
binding.toggleTool.help = "När du använder ett av verktygssnabbvalen, väljs det tidigare verktyget om det aktuella snabbvalet är aktivt.";
// When the key is tap once, the value will be toggled
binding.toggleTap = "Växla genväg när du trycker på tangenten";
// The binding force camera movement
binding.forceCamera = "Tvinga kamera";
binding.forceCamera.help = "Tvinga kamerainteraktion i händelse av konflikt med en annan bindning. Detta kan vanligtvis hända om samma bindning är tilldelad som ett verktygssnabbkomando eller Lägg till/Subtrahera.";
// Same as Color Picker but it pick the material (color, roughness, metalness, etc)
binding.pickMaterial = "Välj Material";
// Same as Color Picker but it pick the material (color, roughness, metalness, etc)
binding.pickFaceGroup = "Välj Ansiktsgrupp";
// Edit the tool brush size/radius
binding.editRadius = "Verktygsradie";
// Edit the tool brush size/radius
binding.editIntensity = "Verktygsintensitet";
// Controller dead zone
binding.joystick = "Joystick";
binding.controller.deadZone = "Styrspaks dödzon";
binding.controller.deadZone.help = "Höj detta värde om kameran rör sig även om styrstav inte har rörts.";
// Snap the camera
binding.view.front = "Framifrån";
binding.view.left = "Vänster vy";
binding.view.top = "Toppvy";
// Move/Translate the view
binding.pan.left = "Panorera vänster";
binding.pan.right = "Panorera höger";
binding.pan.forward = "Panera Framåt";
binding.pan.backward = "Panera Bakåt";
binding.pan.up = "Panera Uppåt";
binding.pan.down = "Panera Nedåt";
// Snap the view (while rotating)
binding.snapViewOnRotate = "Snäppa vy (medan du roterar)";
// Open a Nomad internal project (replace current scene)
binding.project.open = "Öppna (projekt)";
// Open a Nomad internal project (add it to the current scene)
binding.project.add = "Lägg till (projekt)";
// Select all the objects in the scene
binding.selectAll = "Markera allt";
// Rotate environment and the lighting
binding.rotateLighting = "Rotera belysningen";
// The Camera pivot is the point around which the camera rotates
binding.updatePivot = "Uppdatera axel...";

quadremesh.adaptQuadCount = "Adaptiv Kvadrattal";
quadremesh.curvatureAdaptivness = "Adaptiv storlek";
quadremesh.curvatureAdaptivness.help = "Vid 100% kommer fyrkanternas storlek variera beroende på objektets krökning, vilket möjliggör mindre fyrkanter på hög krökning.
Vid 0% kommer fyrkanternas storlek vara enhetlig.";
quadremesh.useVertexColors = "Bevara målningen";
quadremesh.autoDetectHardEdges = "Automatisk upptäckt av hårda kanter";
quadremesh.autoDetectHardEdges.short = "Hårda kanter";
quadremesh.reprojectVertex = "Uppreprojekt Vertex";
quadremesh.reprojectVertex.short = "Uppreprojekt Vertex";
quadremesh.reprojectVertex.label = "När aktiverad, kommer Nomad att uppreprojekt positionen på den tidigare meshen.

Observera att om meshen har lager, kommer reprojektion alltid att användas.";

// Privacy policy
privacyPolicy.title = "Integritetspolicy";
privacyPolicy.reject = "Avvisa";
// Hexanomad is the company name
privacyPolicy = "Hexanomad samlar inte in någon data från Nomad Sculpt.";

sonar.disconnect = "Koppla från SonarPen";
sonar.connect = "Anslut SonarPen";
sonar.connect.confirm = "Anslut SonarPen?";
sonar.connect.confirm.warning = "Sonar Pen kommer att använda mikrofonen (ljudåterkoppling) för att upptäcka pennans tryck.";

// Color disc mode
widget.color.disc = "Skiva";
widget.color.ring = "Ring";
widget.color.square = "Kvadrat";

nomad.mainFolder = "Nomad huvudmapp";
nomad.mainFolder.warning = "Filer lämnas orörda.
De kopieras, tas inte bort eller flyttas.";
nomad.mainFolder.error = "Efter att du valt ja, kommer Nomad att stängas och du kan enkelt starta om den.";

license.title = "Licens";
license.retry = "Försök igen";
license.key = "Licensnyckel";
license.activate = "Aktivera licens";
// ----------------------------------------------
license.newest = "Ny version tillgänglig!";
// ----------------------------------------------
license.portal.title = "Befintliga användare";
license.portal.label = "Licensportal";
// ----------------------------------------------
license.checkout.title = "Nya användare";
license.checkout.label = "Köp Nomad";
// ----------------------------------------------
license.device.error = "Kunde inte hämta enhets-ID.";
license.device.mismatch = "Uppsnitt enhets-ID!";
// ----------------------------------------------
license.validate.error404 = "Licensnyckeln hittades inte.";
license.validate.error422 = "Ohanterbar enhet.";
// ----------------------------------------------
license.activate.error403 = "Maximalt antal enheter nått!
Du kan avaktivera en annan enhet på din licensportal.";
license.activate.error404 = "Licensnyckeln hittades inte.";
license.activate.error422 = "Ohanterbar enhet.";
// ----------------------------------------------
// version trial
version.restore = "Återställ köp";
version.buyWeb = "Webbversionen är endast en demo";
version.buyFull = "Uppgradera till full version";
version.buyQR = "Köp";
version.buyQR.promo = "
Quad Remesher är en algoritm som genererar en fyrkantig dominerande nätmodell.
Fyrkantsfördelningen kommer att försöka följa objektets naturliga krökning.

Algoritmen kan även anpassa fyrkanternas storlek beroende på den lokala krökningen.

Du kan också styra den resulterande topologin med:

• Ansiktsgrupp $0 (se till att jämna ut deras kanter för bättre resultat!)

• Plan X/Y/Z-symmetri $1

• Kurvguider $2

• Densitetsmålning $3

Quad Remesher utvecklas av https://exoside.com/.";

version.trialHistory = "Prova versionen: 4 ångra/gör om möjliga ";
version.trialLayer = "Prova versionen: 1 lager per objekt";
version.trialNoImport = "Prova versionen: Ingen import";
version.trialNoExport = "Prova versionen: Ingen export";

version.fullFeatures = "• Engångsköp
• Obegränsad ångra/göra om
• Obegränsade lager
• Exportera & importera";

version.demo.purpose = "Denna version har skapats speciellt för demonstrationsändamål.";
version.demo.disable = "Funktionen är inte aktiverad för demo.";

// app store main page
store.name = "Nomad Sculpt";
store.headline = "Skulptera, måla och skapa i 3D";
store.tag = "skulptera, 3d, nomad, måla, modellering";
// ----------------------------------------------
store.description.sculpt = "• Skulpteringsverktyg
Lera, jämna ut, släta, maskera och många andra penslar låter dig forma din skapelse.
Du kan också använda trim-boolean skärverktyg med lasso, rektangel och andra former för hårdytasyften.";
// ----------------------------------------------
store.description.stroke = "• Anpassning av penseldrag
Nedtrappning, alphas, kakel, penntemperatur och andra penseldragsparametrar kan anpassas.
Du kan också spara och ladda dina verktygsinställningar.";
// ----------------------------------------------
store.description.paint = "• Måleriverktyg
Vertexmålning med färg, ojämnhet och metallikhet.
Du kan också enkelt hantera alla dina materialinställningar.";
// ----------------------------------------------
store.description.layer = "• Lager
Spela in dina skulptering- och målningoperationer i separata lager för att enklare kunna iterera under skapandeprocessen.
Både skulpteringens och målningens förändringar spelas in.";
// ----------------------------------------------
store.description.multires = "• Multiresolution skulptering
Växla fram och tillbaka mellan flera upplösningar av din mesh för ett flexibelt arbetsflöde.";
// ----------------------------------------------
store.description.voxel = "• Voxel remeshning
Remesha snabbt din mesh för att få en enhetlig detaljnivå.
Det kan användas för att snabbt skissa en grov form i början av skapelseprocessen.";
// ----------------------------------------------
store.description.dynamic = "• Dynamisk topologi
Förfina lokalt din mesh under din pensel för att få en automatisk detaljnivå.
Du kan till och med behålla dina lager, eftersom de automatiskt uppdateras!";
// ----------------------------------------------
store.description.topology = "• Decimera
Minska antalet polygoner och bibehåll så många detaljer som möjligt.";
// ----------------------------------------------
store.description.group = "• Ansiktsgrupp
Segmentera ditt mesh i undergrupper med hjälp av ansiktsgruppverktyget.";
// ----------------------------------------------
store.description.unwrap = "• Automatisk UV-uppvikning
Den automatiska UV-uppvikningen kan använda ansiktsgrupper för att kontrollera uppvikningsprocessen.";
// ----------------------------------------------
store.description.baking = "• Baking
Du kan överföra vertexdata som färg, roughness, metalness och små skalade detaljer till texturer.
Du kan också göra motsatsen, överföra texturdata till vertexdata eller lager.";
// ----------------------------------------------
store.description.primitive = "• Primitiva former
Cylinder, torus, tub, svarv och andra primitiva former kan användas för att snabbt starta nya former från grunden.";
// ----------------------------------------------
store.description.rendering = "• PBR-rendering
Vacker PBR-rendering som standard, med ljus och skuggor.
Du kan alltid byta till matcap för mer standard skuggning för skulpteringsändamål.";
// ----------------------------------------------
store.description.postprocess = "• Efterbearbetning
Screen Space Reflection, Depth of Field, Ambient Occlusion, Tone Mapping, etc.";
// ----------------------------------------------
store.description.files = "• Export och Import
Stöd för format inkluderar glTF, OBJ, STL eller PLY-filer.";
// ----------------------------------------------
store.description.interface = "• Gränssnitt
Användarvänligt gränssnitt, utformat för mobilupplevelse.
Anpassning är också möjligt!";
// ----------------------------------------------
store.description.remesher = "• Quad Remesher (separat köp inom appen endast)
Remeshera ditt objekt automatiskt med en kvaddominant mesh som följer meshens kurvatur.
Det stödjer guider, ansiktsgrupper och densitetsmålning.";
// ----------------------------------------------