// Generic confirmation (Confirm? [yes/ok/delete, cancel])
confirm = "אישור?";
// Answer to a question (Are you sure you want to do that? [yes, cancel])
confirm.yes = "כן";
// Answer to a question (Are you sure you want to do that? [yes, no, cancel])
confirm.no = "לא";
// The generic ok in a confirm box (The next operation is dangerous. [ok, cancel])
confirm.ok = "אוקיי";
// Cancel something after being asked (Question? [answer, cancel])
confirm.cancel = "ביטול";

// Experimental feature
experimental = "ניסיוני!";

status.exit = "שינויים לא נשמרו! לשמור לפני הסגירה?";
status.exit.yes = "שמור";
status.exit.no = "אל תשמור";

// On single tap (should be short)
ontap = "בלחיצה";

all = "הכל";
error = "שגיאה";

reset = "אפס";
resetOrder = "איפוס סדר";

clipboard = "לוח גזירים";
clipboard.copy = "העתק";
clipboard.paste = "הדבק";

// memory size
bytes = "בייטים";
kB = "קב";
MB = "מג";
GB = "גב";
TB = "טרב";

// Noun
instance = "מופע";
object = "אובייקט";

// Same value (usually for axis, e.g: x == y == z)
uniform = "אחיד";

sync = "סנכרן";

// position
position.top = "עליון";
position.bottom = "תחתון";
position.left = "שמאל";
position.right = "ימין";
position.center = "מרכז";
// direction
direction.up = "למעלה";
direction.down = "למטה";
direction.left = "שמאלה";
direction.right = "ימינה";
// 3D cube
cube.top = "למעלה";
cube.bottom = "למטה";
cube.left = "שמאל";
cube.right = "ימין";
cube.front = "קדימה";
cube.back = "אחורה";

// Name of an item (object, tool, etc)
item.name = "שם";
// Add a new item (object, tool, etc)
item.new = "חדש";
// Rename an item (object, tool, etc)
item.rename = "שינוי שם";
// Add a new item (object, tool, project, etc)
item.add = "הוסף";
// Update an item image with a new image (synonym: Update)
item.replace = "החלף";
// Save an item (object, tool, etc)
item.save = "שמור";
item.save.confirm = "לאשר שמירה?";
// Update an item (update camera view point, etc)
item.update = "עדכן";
// Reload last save of an item (object, tool, etc)
item.lastSave = "שמירה אחרונה";
// Reload last save of an item (object, tool, etc)
item.lastSave.confirm = "לטעון שמירה אחרונה?";
// Reset an item to its initial value (object, tool, etc)
item.reset = "איפוס";
item.reset.confirm = "לאשר איפוס?";
// Make an item instance, similar to clone but keeps the underlying geometry (Synonym: link? soft clone?)
item.instance = "מופע";
// Uninstance the object, make the object real
item.uninstance = "הסר מופע";
// Clone an item (object, tool, etc)
item.clone = "שכפול";
// Delete an item (object, tool, etc)
item.delete = "מחיקה";
item.delete.confirm = "לאשר מחיקה?";
item.delete.confirm.yes = "כן, מחק";
// When we delete the item but the image is used somewhere
item.delete.used = "תמונה בשימוש";
// Convert the item type (mesh, light) to a simple Node type
item.toNode = "לצומת";
// Item visibility (object, layer, etc)
item.visible = "נראה";
// Show an item (object, layer, etc)
item.show = "הראה";
// Hide an item (object, layer, etc)
item.hide = "הסתר";
// Select an item (object, layer, etc)
item.select = "בחר";
// Unselect an item (object, layer, etc)
item.unselect = "בטל בחירה";
// Merge an item with another one below (layer)
item.mergeDown = "מזג מטה";
// The order of an item in a list
item.order = "סדר";
// Focus on previous item
item.previous = "קודם";
// Focus on next item
item.next = "הבא";
// The item is locked (either it cannot be selected, edited, or we preserve its details)
item.lock = "נעל";
// No item selected
item.none = "אין";
// Draggable, moveable
item.draggable = "";

// Search something (text entry to filter item)
search = "חיפוש";

// Three-state toggle button (Auto, Off, On)
toggle.on = "פועל";
// Three-state toggle button (Auto, Off, On)
toggle.off = "כבוי";
// Three-state toggle button (Auto, Off, On)
toggle.auto = "אוטומטי";

// When you launch the app and we need to reprocess some resource thumbnails
loading.reprocess = "תמונות ממוזערות חסרות, מעבד מחדש קבצים...";
loading.reprocess.cancel = "דילוג על יצירת תמונות ממוזערות?";

access.title = "נגישות";
access.window = "חלון עזר";
access.pinch = "צימות";
access.drag = "גרירה";
access.rotate = "סובב";
access.roll = "גלגלול";

// Color of an object
material.color = "צבע";
// Defines how blurry or sharp the reflection on a material is (opposite of glossiness)
material.roughness = "חספוס";
// Defines how blurry or sharp the reflection on a material is (opposite of roughness)
material.glossiness = "ברק";
// Whether the material is a metal or not
material.metalness = "מתכתיות";
// How much light a surface will reflect
material.specular = "ספוקולרי";
// Light that the surface can emit (glow)
material.emissive = "פולט אור";
// Normal map (synonym: detail, bump)
material.normal = "נורמל";
// flip y coordinate
material.normal.flipY = "היפוך Y";
// Ambient Occlusion (AO)
material.occlusion = "אקלוזיה";
// Textures, basically images wrapped on models (synonym: Maps, Texture maps)
material.textures = "טקסטורות";
// Textures/Image
material.texture = "טקסטורה";
// A warning indicating that the mesh has no UVs
material.warningNoUVs = "אין נתיבי UV!";
// Texture filtering https://en.wikipedia.org/wiki/Texture_filtering
material.texture.filter = "סינון";
// Nearest Filtering (closest sample)
material.texture.nearest = "הקרוב ביותר";
// Bilinear Filter
material.texture.linear = "לינארי";
// Mipmap filtering
material.texture.mipmap = "מיפמאפ";
// Triplanar mapping
material.projection = "הקרנה";
material.projection.triplanar = "טריפלאנר";

// Prefer low power
about.lowPower = "GPU כוח נמוך";
about.lowPower.confirm = "לאחר שינוי הערך הזה, יש לאתחל את Nomad.";
// Wintab wacom API
about.wintab = "השתמש ב-WinTab";
about.wintab.help = "אם WinTab מופעל, עליך אולי להשבית את Windows Ink בהגדרות Wacom שלך.

באופן דומה, אם WinTab מושבת, יש להפעיל את Windows Ink בהגדרות Wacom";
// Prefer low power
about.fullScreen = "מסך מלא";
// Minify
about.minify = "הקטנת ממשק המשתמש";
about.minify.help = "ניתן גם להקיש על המסך עם 4 אצבעות, אם המכשיר תומך בזה.";
// Turntable will rotate the whole scene on itself (as it if was on a turntable)
about.turntable = "פטיפון";
// Rotation center of the turntable
about.turntable.pivot = "מרכז סיבוב";
// Keep current pivot
about.turntable.pivot.keep = "שמירה על הנוכחי";
// Turntable pivot will be at the center of the scene
about.turntable.pivot.scene = "סצנה";
// Make the entire scene turn around (speed of the animation)
about.turntable.speed = "מהירות";
// Stuffs that I used to make the app
about.credits = "קרדיטים";
// Link to open source projects that I used for the app
about.credits.openSource = "קוד פתוח";
// Only translate the &
about.credits.arts = "MatCaps ו-HDRIs";
// Change languages of the app
about.languages = "שפות";
about.languages.help = "קבצי תרגום זמינים ב-$0";
// Link to the App Website
about.website = "אתר";
// Link to the App Forum
about.forum = "פורום";
// Link to the App Manual
about.manual = "מדריך";
// Link to the App Email
about.mail = "תמיכה";
// Link to the App Twitter account
about.twitter = "טוויטר";
// Link to the App Instagram account
about.instagram = "אינסטגרם";
// Link to the App Facebook account
about.facebook = "פייסבוק";
// Link to the App Discord account
about.discord = "דיסקורד";
// Link to the App Threads account
about.threads = "פוסטים";

// The user canceled an operation that was running
alert.aborted = "הפעלה בוטלה!";
// Empty mesh
alert.mirror.empty = "יציאה ריקה!";
// Mesh already mirrored
alert.mirror.same = "אותה יציאה!";
// Error when an algorithm needs the object to have an hole (usually to fill it)
alert.hole.nothing = "ללא חורים!";
// No operation occured because the mesh is already manifold
alert.manifold.already = "הרשת כבר מסודרת בצורה סגורה!";
// Visibility of the object is off (but should be on)
alert.shape.notVisible = "העצם הנוכחי אינו נראה!";
// The user tried to trim an object but the selected region didn't touch the object
alert.trim.nothing = "אין מה לגזום.";
// The user tried to trim an object but the selected region completely encompassed the object
alert.trim.full = "הפסקת גזם: האובייקט גזום במלואו.";
// In order to extract something, the mesh needs to have painted mask
alert.extract.none = "אין מה לחלץ!";
// In order to split something, the mesh needs to have painted mask
alert.extract.split.none = "אין מה לפרק!";
// List of disabled features when View Mode is selected
alert.view.disabled = "תכונות מושבתות במצב תצוגה:";
// Primitive Widgets are small ui stuffs in the viewport that the user can interact with to modify an object
alert.view.disabled.widgetPrimitive = "ווידג'טים פרימיטיביים";
// The object needs to have two parts disconnected
alert.separate.fail = "לא ניתן להפריד: האובייקט מכיל רק חלק אחד!";
// Remesh is when you create a new topology (mesh) on an object
alert.voxelRemesh.success = "נרמז מחדש!";
alert.voxelRemesh.empty = "בטל רימש: לרשת המתקבלת אין משטחים.";
// Should not happen or very rarely, input here is an object
alert.voxelRemesh.invalidInput = "קלט לא חוקי!";
// Helper popup to tell the users the object will cloned
alert.matrix.clone = "האובייקט ישוכפל";
// Helper popup to tell the users the object will cloned
alert.matrix.instance = "האובייקט ייוצג";
// A pivot refers the gizmo 3D position, this mode means we are moving the pivot
alert.gizmo.editPivot = "ערוך מצב נקודת ציר.";
alert.mask.full = "מסכה = 100%!";
// A pivot refers the gizmo 3D position
alert.gizmo.editObject = "ערוך מצב אובייקט.";
// See Glossary (DynTopo)
alert.dynamic.enable = "טופולוגיה דינמית פועלת";
// See Glossary (DynTopo)
alert.dynamic.disable = "טופולוגיה דינמית כבויה";
alert.colorPicker = "גרור על האובייקט כדי לבחור צבע.";
// Transform mode is when the user can move the reference (image in the background) with its two fingers
alert.backgroundTransform = "הקש פשוט כדי לצאת ממצב טרנספורמציה.";
// Edit the symmetry plane with the gizmo
alert.editSymmetry = "הקש פשוט כדי לצאת ממצב עריכת סימטריה.";
// Show the painted mask on the mesh
alert.mask.show = "הצג מסכה";
// Hide the painted mask on the mesh
alert.mask.hide = "הסתר מסכה";
// Selection refers to the objects that are currently selected
alert.selection.lock = "נעל בחירה";
// Selection refers to the objects that are currently selected
alert.selection.unlock = "שחרר בחירה";
// Hide the objects that are not selected
alert.selection.isolate = "בודד בחירה";
// Show the objects that are hidden
alert.selection.showAll = "הצג הכול";
// Project quick saving
alert.quickSave = "שומר...";
// Painting on the object was hidden but the user did paint the object
alert.forcePainting.fill = "הצגת הציור הופעלה, [צייר הכול] הוסת.";
// Painting on the object was hidden but the user started to paint on the object
alert.forcePainting.tool = "הצגת הציור הופעלה,האובייקט נצבע.";
// See Glossary (Multiresolution)
alert.multiresLost = "הרזולוציה המרובת תאבד!";
// Boolean cut mode will ignore some features
alert.booleanIgnored = "מודול בוליאני יתעלם ממרחבים מכוסים או מוסתרים!";
// The user is starting an operation that can lead to a crash
alert.range.warning = "ערך הפירוט גבוה ועלול לדרוש הרבה זיכרון!";
// Autosave popup
alert.autoSave.auto = "שמירה אוטומטית ב... $0 שניות";
// The selected object doesn't have any layers
alert.needLayer = "הכלי הנוכחי דורש שכבה פעילה.";
// The user decided to hide the painting on the objects
alert.paintingHidden = "הציור מוסתר!";
// The user decided to hide the masking on the objects
alert.maskingHidden = "המסכה מוסתרת!";
// The user decided to display hidden faces
alert.hideIgnored = "הסתרה מתעלמת!";
// The selected object doesn't have any layers
alert.noPartialWireframe = "ציור חלקי מבוטל כאשר מוצג תצוגת קווים.";
// The user has selected a tool that is more intuitive to use when the camera is in orthographic mode
alert.shapeOrthographic = "שקול להשתמש במצלמה אורתוגרפית אם תרצה למנוע עיוות פרספקטיבה בעת שימוש במקרן מסך.";
// Trial version has a limited number of undo
alert.state.trial = "גרסת ניסיון: ביטול פעולה מבוטל";

background = "רקע";
// A flat color will be displayed in the background of the scene
background.color = "צבע";
// 2 color with rotation
background.gradient = "מעבר צבע";
// The environment (HDRI) will be displayed in the background
background.environment = "סביבה";
background.blur = "טשטוש";
background.exposure = "חשיפה";

// Image that the artist uses as a reference
background.imageEnable = "תמונת התייחסות";
// The image will be displayed in overlay (used as a reference by the artist)
background.imageOverlay = "שכבות";
// Opposite of transparency (Alpha)
background.imageAlpha = "אטימות";
background.imageReset = "אפס הגדרות";
background.imageTransform = "המר";
// X screen coordinate of the image reference
background.imageX = "מיקום X";
// Y screen coordinate of the image reference
background.imageY = "מיקום Y";
// Rotation of the reference image
background.imageRotation = "סיבוב";
// Scale of the reference image
background.imageScale = "קנה מידה";
// Auto adjust the reference when moving the camera
background.syncLock = "סנכרן עם נעילת מצלמה";

// Blend: normal
blend.normal = "רגיל";
// Blend: darker
blend.darker = "כהה יותר";
blend.darker.darken = "להכהות";
blend.darker.multiply = "הכפל";
blend.darker.linearBurn = "שריפה לינארית";
blend.darker.colorBurn = "שריפת צבע";
// Blend: lighter
blend.lighter = "בהיר יותר";
blend.lighter.lighten = "להבהיר";
blend.lighter.screen = "מסך";
blend.lighter.linearDodge = "דודג' לינארי";
blend.lighter.colorDodge = "דודג' צבע";
// Blend: contrast
blend.contrast = "ניגודיות";
blend.contrast.hardLight = "אור חזק";
blend.contrast.softLight = "אור רך";
blend.contrast.overlay = "שכבת על";
blend.contrast.hardMix = "שילוב קשיח";
blend.contrast.linearLight = "אור לינארי";
blend.contrast.vividLight = "אור עז";
blend.contrast.average = "ממוצע";
// Blend: inversion
blend.inversion = "היפוך";
blend.inversion.exclusion = "הוצאה";
blend.inversion.difference = "הבדל";
// Blend: cancelation
blend.cancelation = "ביטול";
blend.cancelation.divide = "חלוקה";
blend.cancelation.subtract = "חיסור";
// Blend: component
blend.component = "רכיב";
blend.component.luminosity = "בהירות";

// Camera (point of view in 3D)
camera = "מצלמה";
cameras = "מצלמות";
camera.view = "צפייה";
// Copy the views
camera.updateView = "לעדכן נקודת מבט?";
// Add a new camera
camera.addView = "הוסף תצוגה";
// Focus on the camera
camera.focus = "מיקוד";
// Add on the camera camera
camera.focusOn = "מיקוד על $0";
// Camera projection, Orthographic or Perspective
camera.projection = "הקרנה";
// Camera projection, Orthographic or Perspective
camera.projection.orthographic = "אורתוגרפי";
// Camera projection, Orthographic or Perspective
camera.projection.perspective = "פרספקטיבה";
// camera Vertical Field of View
camera.fov = "שדה ראייה אנכי";
// Camera Field of View hint
camera.focal = "מוקד $0ממ (חיישן 35ממ)";
// Rotation mode controls how the user will interact with the camera rotation
camera.rotation = "סיבוב";
// Camera interaction mode, 2 degrees of freedom (synonym: Orbit)
camera.rotation.orbit = "פלטה מסתובבת";
// Camera interaction mode, 3 degrees of freedom
camera.rotation.trackball = "כדור תנועה";
camera.rotation.trackball.help = "כדור תנועה מאפשר חופש תנועה רחב יותר, אתה יכול גם לגלגל את המצלמה עם 2 אצבעות.";
// Camera interaction mode, 1st person view
camera.firstPerson = "תצוגת אדם ראשון";
// How sensitive the camera is (synonym: sensitivity)
camera.speed = "מהירות";
// Camera rotation sensitivity
camera.speed.rotation = "סיבוב";
// Camera translation sensitivity
camera.speed.panning = "תרגום";
// Camera zooming sensitivity
camera.speed.zooming = "זום";
// Reset camera position
camera.resetView = "אפס תצוגה";
// Align the view (snap to nearest 90° angle)
camera.snapView = "מיקום תצוגה";
// Warning (camera is snapped and it switched to orthographic)
camera.snapOrthographic.warning = "המיקום נכון (אורתוגרפי)";
// Switch to orthographic view when the view is snapped
camera.snapOrthographic = "מיקום אורתוגרפי";
camera.snapOrthographic.help = "אפשרות זו פועלת גם בשימוש בקובייה הפינתית.";
// The Camera pivot is the point around which the camera rotates
camera.pivot = "עדכן ציר...";
// When we double tap on the object with the finger/stylus
camera.doubleTapMesh = "הקשה כפולה על האובייקט";
// When we double tap on the background with the finger/stylus
camera.doubleTapBackground = "הקשה כפולה על הרקע";
// When we double tap on the background with the finger/stylus
camera.doubleTapBackgroundFocus.toggle = "מתג";
// Focus on the selection
camera.doubleTapBackgroundFocus.selection = "בחירה";
// Focus on the entire scene
camera.doubleTapBackgroundFocus.scene = "סצנה";
// When double tapping with the finger/stylus, the camera pivot will be updated
camera.doubleTapPivot = "כאשר מקישים כפול";
camera.doubleTapPivot.help = "עדכן את ציר הסיבוב כאשר לוחצים פעמיים על פני השטח של האובייקט.";
// Allow new pivot even when zooming outside the object surface
camera.airPivot = "אפשר ציר אוויר";
camera.airPivot.help = "אפשר ציר חדש גם כאשר מגדילים מחוץ למשטח האובייקט.";
// Update the pivot when you start interacting with the camera
camera.autoPivot = "כאשר המצלמה מתחילה לזוז";
camera.autoPivot.help = "עדכן את הציר כאשר אתה מתחיל לבצע אינטראקציה עם המצלמה.";
// Move the camera so that it focus on the intersection point
camera.doubleTapFocus = "פוקוס";
camera.doubleTapFocus.help = "כאשר מקישים פעמיים על האובייקט, המצלמה תנוע ותתמקד בנקודה הנבחרת.";
// Disable XY panning when unzomming
camera.centerZoomOut = "מרכז תצוגה בעת זום החוצה";
camera.panZoomOut.help = "כאשר אפשרות זו מבוטלת, מיקום ההיצוג הזה יישאר ללא שינוי.";

// Toolbox context (when expanded), multiple objects are selected
context.multiselection = "בחירה מרובה";
// There is 0 nodes/items selected
context.noSelection = "אין בחירה";

// Curve type, presets lets the user chooses between predefined curves
curve.preset = "תבנית קבועה";
// Quick curve x side shift
curve.shift = "העברה";
// Curve type, https://en.wikipedia.org/wiki/Centripetal_Catmull%E2%80%93Rom_spline
curve.catmull = "Catmull-Rom";
// Curve curve, https://en.wikipedia.org/wiki/Spline_(mathematics)
curve.spline = "ספלאין";
curve.bspline = "B-spline";
curve.precision = "דיוק";
// merge or collapse 1 point into another
curve.merge = "מיזוג";
// snap
curve.snap = "הצמדה";
curve.snap.offset = "שינוי מיקום";
curve.snap.offset.help = "ערך של 100% שווה לרדיוס הצינור.";
curve.snap.surface = "משטח";
curve.snap.vertex = "קודקוד";
curve.snap.grid = "רשת (אם מוצמדת)";
// Regular spaced sampling
curve.uniform = "אחיד";
curve.uniform.help = "העקומה תדגום במרווחים קבועים, כדי להבטיח צפיפות אחידה.

ניתן לבטל אפשרות זו כדי לשלוט מעט בלולאות הקצה על ידי הוספת נקודות שליטה חדשות על העקומה.";
// Display the falloff curve in a symmetric way
curve.symmetric.help = "הצג את הדעיכה באופן סימטרי.

אפשרות זו היא רק רמז חזותי, היא לא משפיעה על הדעיכה עצמה";
curve.radius = "רדיוס";
curve.twist = "טוויסט";
curve.spiral = "ספירלה";
curve.spiral.twist = "זווית פיתול";
curve.spiral.scale = "קנה מידה";
curve.spiral.offset = "הטיה";
curve.spiral.angle = "היסט זווית";
curve.pivot = "ציר";
curve.pivot.self = "עצמי";
curve.pivot.children = "ילדים";

// Set the desired FPS (frame per second, refresh rate)
debug.limitFps = "יעד FPS";
debug.limitFps.help = "כאשר מבוטל, הערך הדיפולטי אומר שהוא יסונכרן עם קצב הרענון של התצוגה.";

// Warning about UVs (using extra memory)
debug.uvPrimitive.warning = "השבת את האפשרות הזו אם אינך זקוק ל-UVs.

רשתות עם UVs ישתמשו ביותר זיכרון.";
// Debug option, Normalize means transforming the data so that it fits in [0-1] the range
debug.uvNormalize = "נרמל UVs";
debug.uvNormalize.help = "נומד ינרמל את ה-UVs בת הב מקובץ [0-1].";

// Debug option, display an window with some debugging logs
debug.logs = "לוגים";
// Model shortcut window
debug.shortcut = "חלון קיצור דרך";
// Debug option, overrides the rendering to display the depth buffer
debug.heightmap = "גובה מפה";
// Debug options, graphical stuffs
debug.graphics = "גרפיקה";
// Debug options, generate screenshots with size compatible with the iOS store
debug.thumbnails = "צור תמונות ממוזערות לחנות";

// Open file explorer
file.explore = "חקור";
// Empty list: there is no projects
file.project.load = "טען מחדש את הפרויקט בעת ההפעלה";
// Empty list: there is no projects
file.project.empty = "עדיין לא שמרת פרויקט!";
// The current opened project has some unsaved changes
file.project.unsaved = "שינויים לא שמורים!";
// The user will loose its project's unsaved changes
file.project.loseUnsaved = "אתה תאבד שינויים לא שמורים!";
// Indicates to the user that the project thumbnail corresponds to the last manual save
file.project.lastManualSave = "תצוגה מקדימה של השמירה הידנית האחרונה";

file.project = "פרויקט";
// Save current project (or overwrite if the project has already been saved once)
file.project.save = "שמור";
// E.g: Save "my_project"?
file.project.save.confirm = "שמור $0?";
// Make a copy
file.project.saveAs = "שמור בשם";
// Overwrite another project
file.project.overwrite = "החלפה";
// E.g: Overwrite "my_other_project"?
file.project.overwrite.confirm = "להחליף את $0?";
// Open a project
file.project.open = "פתח";
// E.g: Open "my_project"?
file.project.open.confirm = "לפתוח $0?";
// E.g: Clone "my_project"?
file.project.clone.confirm = "לשכפל את $0?";
// Load another project and add/append all its data to the current scene
file.project.add = "הוסף לתרחיש";
// E;g: Add "my_other_project" to the scene?
file.project.add.confirm = "הוסף $0 לתרחיש?";
// Reset the scene and create a new project
file.project.new = "חדש";
file.project.new.confirm = "ליצור תרחיש חדש?";
// Delete a project (not corresponding to the currently opened one)
file.project.delete.confirm = "מחק $0?";
// Delete a project (corresponding to the currently opened one)
file.project.delete.confirmActive = "מחק $0?

זהו הפרויקט הנוכחי הפעיל!";

// Auto save section
file.autoSave = "שמירה אוטומטית";
file.autoSave.confirm = "לבטל שמירה אוטומטית?";
file.autoSave.help = "שמור את הפרויקט שלך בקובץ נפרד במרווחי זמן קבועים.

ניתן למצוא את קובץ השמירה האוטומטית ב:";
// Interval in minutes in which the auto save popup will appear
file.autoSave.popup = "פסק זמן של חלון קופץ";
// In minutes
file.autoSave.minutes = "טיימר חלון קופץ";
// Delete the current autoSave data
file.autoSave.delete = "דחה שמירה אוטומטית";
// Open the outdated auto save
file.autoSave.open.manual = "פתח שמירה ידנית מיושנת";
file.autoSave.open.auto = "פתח שמירה אוטומטית מיושנת";

// color space (linear or srgb), do not translate linear/srgb if there is a doubt
file.colorSpace = "מרחב צבע";
file.colorSpace.help = "נסה להפעיל אפשרות זו אם הצבעים נראים לא נכונים.";
file.colorSpace.linear = "ליניארי";
file.colorSpace.srgb = "sRGB";

// Configure imports option
file.importSettings = "אפשרויות ייבוא";

// Load interface preference settings when opening a scene file
file.import.guiSettings = "שמור הגדרות ממשק משתמש גרפי";
file.import.guiSettings.help = "כאשר פותחים או מייבאים קובץ פרויקט, כל ההגדרות הקשורות לממשק המשתמש המוטמעות בפרויקט יטענו.";
// OBJ have "groups" and "objects", by default groups are ignored, use this option to consider groups as separate objects
file.import.obj.splitByGroup = "פיצל OBJ לפי קבוצות";
file.import.obj.splitByGroup.help = "כאשר מופעל, נומד תפצל את קבוצות ה-OBJ לאובייקטים נפרדים.";
// Merge all the object layers at when loading a file (deleting them in the process)
file.import.mergeLayers = "מיזוג שכבות";
// Ignore the textures present in the file to load
file.import.skipTextures = "דלג על טקסטורות";
// Do not fiddle with the object topology when loading the file
file.import.keepTopology = "שמירת טופולוגיה";
file.import.keepTopology.help = "השתמש באפשרות זו אם אינך מעוניין שנומד יתעסק בטופולגיה של רשת המיובאת.

זה ישבית את סידור מחדש של ראש/פנים, הסרה של כפילויות ראש/פנים והסרת ראשים לא בשימוש.";

// Import file section
file.import.title = "ייבוא";
file.import.title.help = "פורמט נתמך:";
// The user imports a scene file that will replace the current scene
file.import.open = "פתח";
file.import.open.confirm = "לייבא קובץ חדש?";
// The user imports a scene file that will be added/appended the current scene
file.import.add = "הוסף לסצנה";
file.import.add.confirm = "לייבא קובץ חדש?";

// Export scene file
file.export = "ייצוא";

// Filter nodes that we want to export
file.select.include = "כלול";
file.select.all = "הכל";
file.select.visible = "נראה";
file.select.selected = "נבחר";
file.select.unselected = "לא נבחרו";

// Export each node in a separate file
file.export.separate = "קובץ אחד לכל אובייקט";

// Export the current selected objects instead of the entire scene
file.onlySelection = "כולל רק אובייקטים נבחרים";
file.onlySelection.help = "כולל רק את הבחירה, במקום את כל הסצנה.";
// Tries to generate quad (rectangle polygon) from triangles
file.convertToQuad = "בנייה מחדש של קוואד";
file.convertToQuad.help = "שחזור קוואדים מתוך משולשים על ידי התאמת משולש (אם הם סמוכים בקבצים).";
// ----------------------------------------------
// Whether we include the textures in the exported file
file.export.texture = "טקסטורות";
// Baking means transfering/converting
file.export.texture.help = "אפשרות זו אינה אופה את צבעי הוורטקס לתוך הטקסטורות.

היא כוללת טקסטורות רק אם לאובייקט יש טקסטורות על החומר שלו.";
// ----------------------------------------------
file.export.color0 = "צבעי קודקוד";
file.export.color1 = "צבע PBR";
file.export.color1.help = "ייצא ריווי, מתכתיות וצבע מסכה. זה יתעלם על ידי תוכנות אחרות.";
// ----------------------------------------------
// Whether we include normals vector in the exported file
file.export.normal = "נורמלים";
file.export.normal.help = "סמן אפשרות זו אם ברצונך לפתוח את הקובץ בתוכנות אחרות.

נומד תמיד מתעלם מהנורמלים כי הם יחושבו מחדש.";
// ----------------------------------------------
file.export.tangent = "משיקים";
file.export.tangent.help = "סמן אפשרות זו אם ברצונך לפתוח את הקובץ בתוכנות אחרות. 

גזירים משמשים רק אם למודל יש מפה נורמלית. 

Nomad תמיד מתעלם מהגזירים שכן הוא יחשב מחדש.";
// ----------------------------------------------
file.export.nomad.help = "פורמט הקובץ הפנימי של נומד סקולפט.

פורמט זה לא ייטען בתוכנות אחרות, זה בעיקר למטרות יבוא חוזר.";
// ----------------------------------------------
// Whether we include layers in the exported file (see glossary for layer)
file.export.gltf.layer = "שכבות";
file.export.gltf.layer.help = "ייצא שכבות כמורפים. נתמך באופן רשמי על ידי glTF כך שהוא אמור לעבוד גם בתוכנות אחרות.";
// Whether we include painting of layers in the exported file (see glossary for layer)
file.export.gltf.layerPaint = "ציור שכבה";
file.export.gltf.layerPaint.help = "ייצוא ציור שכבות. בדרך כלל מתעלמים ממנו על ידי תוכנות אחרות.";
// ----------------------------------------------
file.export.obj.warning = "שכבות וציור נוסף (מרקם מתכתי ומסכה) יאבדו.";
// Whether we include the vertex color in the exported file
file.export.obj.color = "צבעי צמת ";
file.export.obj.color.help = "חלק מהתוכנות תלת-ממד יצליחו לקרוא את זה, אך לא כולן.";
file.export.obj.color.help.append = "הוסף מידע צבע אחרי צמתי העליון.";
file.export.obj.color.help.hexa = "דרך חלופית לקידוד צבע. תומכת גם בנתוני מסכות.";
file.export.obj.faceGroup = "קבוצת משטחים";
file.export.obj.object = "כתוב אובייקטים";
file.export.obj.object.help = "החזק אובייקטים בנפרד.

ביטול אפשרות זו ייצא הכל כישות אחת.
עליך לבטל אפשרות זו אם ברצונך להשתמש בתכונת 'זיהוי רשת / קבוצה' ב-Substance Painter.";
file.export.obj.archive = "סוג";
file.export.obj.archive.folder = "תיקיה";
file.export.obj.archive.zip = "Zip";
file.export.obj.archive.help = "חלק מהאפליקציות (Google Drive, One Drive) לא תומכות ביבוא התיקיות, אולם ניתן להשתמש ב-Zip במקום.";
// ----------------------------------------------
file.export.ply.warning = "שכבות וציור נוסף (מרקם מתכתי וכו') יאבדו.";
// ----------------------------------------------
file.export.stl.warning = "שכבות וציור נוסף (מרקם מתכתי וכו') יאבדו.";
// Whether we include the vertex color in the exported file
file.export.stl.color = "צבעי ורטיקס";
file.export.stl.color.help = "תוכנות תלת-מימד מסוימות יוכלו לקרוא את זה, אך לא כולן.";
// ----------------------------------------------
file.export.usd.skew = "אפשר עקמומיות";
file.export.usd.skew.help = "אפשר הטיה בהמרות המטריצות.

כאשר בוטל, Nomad יפצל את המטריצות להטיה לשתי המרות נפרדות של קנה מידה והסתובבות.";
// ----------------------------------------------
// Advanced settings
settings.advanced = "מתקדם";
// Means that all these options will be resetted when the app restarts
settings.notSaved = "אפשרויות אלו אינן נשמרות בהגדרות.";
settings.reset.title = "הגדרות";
settings.reset.title.help = "זה יאפס את הגדרות ההעדפות של היישום.

משאבים מסוימים נשמרים בנפרד ולא יאופסו, כולל:
• פרויקטים
• הגדרות מפתחות
• קביעות כלים (כלים מוכנים)
• סביבות HDR
• MatCaps
• אלפא
• טקסטורות (מברשת)
• תמונות התייחסות

יש לציין שכל מה שקשור לפרויקט נשמר בשלמותו, כגון תאורה, עיבוד לאחרי, זוויות המצלמה וכו'.";

// Reset preference settings button
settings.reset = "איפוס לברירות מחדל";
settings.reset.confirm = "לאתחל את הגדרות ההעדפה?";

// Render a screenshot of the scene
file.render = "עיבוד";
// If we include the App Interface in the exported screenshot
file.render.showInterface = "הצג ממשק משתמש";
// Resolution ratio of the exported screenshot
file.render.renderRatio = "יחס עיבוד";
file.render.renderRatio.help = "ערך של 1.0 אומר שנומאד יעבד ברזולוציה זהה לגודל התמונה המבוקשת למטה.

 השתמש באפשרות זו אם אינך יכול לעבד ברזולוציה מסוימת (קריסה עקב חוסר זיכרון).";
// Desired size of the exported screenshot
file.render.size = "גודל סופי";
// Desired size of the exported screenshot (custom vs predefined size)
file.render.size.custom = "מותאם אישית";
// Screen resolution parameters for the export screenshot features
file.render.screenResolution = "מסך";
// width of exported screenshot
file.render.width = "רוחב";
// height of exported screenshot
file.render.height = "גובה";
// export screenshot of the scene
file.render.warn = "רזולוציית הייצוא גבוהה ($0x$1)!

 ודא שהפרויקט שלך נשמר למקרה שהמכשיר שלך ייגמר זיכרון VRAM ויקרוס.";
// If true, then the exported screenshot will have transparency data in the image
file.render.transparent = "רקע שקוף";
file.render.transparent.help = "אפשרות זו יכולה להיות מועילה אם ברצונך להכניס את המש ל תוכנה ליצירת 2D.

שקיפות חלקית של אובייקטים אינה נתמכת כרגע.";

// Disable this option to have per-tool pressure settings (instead of shared settings)
pressure.useGlobal = "השתמש בהגדרות כלליות";
pressure.useGlobal.help = "כברירת מחדל, הכלים חולקים את אותן הגדרות לחץ.

בטל את הסימון של אפשרות זו אם אתה רוצה הגדרות לחץ ספציפיות לכלי זה.";

// Pencil pressure
pressure.title = "לחץ";
// Pencil/Stylus pressure will be ignored
pressure.noTool = "כלי זה אינו משתמש בלחץ מהעיפרון.";
// The tool can support pressure but its selected stroke type will ignore it
pressure.noGrab = "סוג מכת הפגיעה יתעלם מהגדרות הלחץ.";
// The stylus pressure will impact the tool radius (more pressure -> bigger radius)
pressure.radius = "רדיוס";
// The stylus pressure will impact the tool intensity (more pressure -> stronger intensity)
pressure.intensity = "עוצמה";
// Average pencil pressure event to get smoother result
pressure.average = "החלקת לחץ";
pressure.average.help = "החלק את אירועי הלחץ בעיפרון לתוצאות חלקות יותר.";
// Limit pressure to 100%
pressure.limit = "הגדר הגבלת לחץ ל-100%";
pressure.limit.help = "זו הגדרה כללית.

השתמש באפשרות זו כדי להבטיח שלחץ הסטיילוס לא יעלה על 100%.";

// list of inputs allowing camera interaction
gesture.camera = "מצלמה";
// list of inputs allowing sculpting interaction
gesture.sculpt = "פסל";
// Select object
gesture.select = "בחר אובייקט";
// Finger/Touch input
gesture.finger = "אצבע";
// Stylus/Pencil
gesture.stylus = "עט נוגע";
// Mouse/Trackpad
gesture.mouse = "עכבר";

// long press to pick the color/material under the cursor
gesture.dropper = "בחירת חומר";
gesture.dropper.help = "ניתן להפעיל את בוחר הצבע/חומר על ידי לחיצה ממושכת על הבד.

שימו לב שזה פועל רק אם את המכחול הנוכחי מופעלת הצביעה.";

camera.airStroke = "אפשר מכת אוויר";
camera.airStroke.help = "אפשר להפעיל את מכת הפיסול גם אם הסמן הראשוני מפספס את הרשת.

אפשרות זו פעילה רק עבור קלטים עם פיסול מופעל ומצלמה כבויה.";

// Three fingers on screen
gesture.three.title = "שלוש אצבעות";
gesture.three.light = "סובב תאורה";
gesture.three.light.help = "סובב את הסביבה, האורות והMatCap.";
gesture.three.radius = "רדיוס הכלי";
gesture.three.intensity = "עוצמת הכלי";

// If this option is enabled, finger inputs on screen will use the smoothing tool
gesture.finger.smooth = "האצבע תמיד מחליקה";
gesture.finger.smooth.help = "אפשרות זו פעילה רק אם כלי הפיסול פעיל.";
// If enabled, the pressure will be taken into account even if it's not coming from a recognized stylus
gesture.unknownPressure = "אפשר לחץ שאינו מוכר";
gesture.unknownPressure.help = "בדוק אפשרות זו אם הלחץ לא עובד עם העיפרון שלך או אם אתה צריך לחץ אצבע.";

// Action when we press an Android pencil button
gesture.pencilAction.android = "לחצן העיפרון";
// Action when we use the Pencil double Tap
gesture.pencilAction.ios = "לחיצה כפולה על העיפרון";
gesture.pencilAction.ios.help = "פעיל רק לעיפרון Apple מדור שני.";
// Pencil button (or iOS pencil double tap) action: Nothing
gesture.pencilAction.none = "ללא";
// Pencil button (or iOS pencil double tap) action: flip adding/substracting sculpt matter setting
gesture.pencilAction.alt = "הוסף/הורד";

// Enable Mask gesture by tapping once on the screen
gesture.mask.oneTap = "קיצורי דרך בנגיעה אחת";
gesture.mask.oneTap.help = "אפשר את קיצור המסכה על ידי הקשה על המסך פעם אחת, ללא צורך להחזיק את קיצור המסך של המסכה.

זה יאפשר את המחוות הבאות:
• הקש על הרקע כדי להפוך את המסכה
• הקש על אזור ממוסך כדי לטשטש את המסכה
• הקש על אזור לא ממוסך כדי לחדד את המסכה";
// Hold the finger on screen to toggle between two tools: Mask and SelMask
gesture.mask.holdStroke = "מכה";
gesture.mask.holdStroke.help = "לחץ ארוך יחליף בין מסכה ו-SelMask ויתחיל משיכת עפרון חדשה.

בסוף המשיכה, הכלי הקודם ייבחר שוב.";
gesture.mask.holdIdle = "כלי";
gesture.mask.holdIdle.help = "לחץ ארוך ושחרור ללא תזוזה למעבר בין Mask ל-SelMask.";

// Shortcut customization, choose the action that the shortcut will performan (select tool, etc)
gesture.shortcut = "קיצור";

// Shortcuts to undo/redo
gesture.history = "קיצורי היסטוריה";
gesture.history.help = "• ביטול: הקש עם 2 אצבעות
• חזור: הקש עם 3 אצבעות";
gesture.history.hold = "החזק לחיצה";
gesture.history.hold.help = "החזק 2/3 אצבעות למטה.";

// Size rejection is when we try to ignore the palm of the hand when we interact with a tablet
gesture.palmRejection = "דחיית כף היד";
gesture.palmRejection.confirm = "ודא לבטל אפשרות זו אם יש לך בעיות באינטראקציה עם הקנבס!";
gesture.palmRejection.help = "לדחות קלט אם שטח אישור הקשר גדול מערך זה.

עלול לא לעבוד על כל מכשיר.";
// Size in pixel for the palm rejection feature
gesture.palmRejection.size = "סף גודל מקסימלי";

// Smoothing strategy
extract.polish.all = "הכל";
extract.polish.sharp = "קצה חד";
extract.polish.border = "קצוות בלבד";
// Smooth the border in a way that it matches completely with its dual
extract.polish.syncBorder = "סנכרון קצה";
// topology of extracted mesh
extract.edgeLoop = "לולאת קצה (צד)";
extract.edgeLoop.auto = "לולאת קצה אוטומטית";
extract.edgeLoop.division = "חולק";
// The thickness of the extracted mesh (from the painted mask)
extract.thickness = "עובי";
// Carve the mask into the surface
extract.carve = "לחרוט";
// Extract a new mesh from the painted mask
extract = "לחלץ";
// Preview extract
extract.preview = "תצוגה מקדימה";
// Extract two new mesh from the painted mask and from the unmasked area
extract.split = "להפריד";
// How should we close the topology of the extracted object
extract.action = "פעולת סגירה";
extract.action.help = "• אף אחד
פשוט חולץ את החלק והשאר את החלק החולץ פתוח.

• מילוי
החור ממולא ומוחלק.
אל תשתמש באפשרות זו עבור משטח שטוח.

• קליפה
סגור את הצורה החולצה תוך שימוש בערך העובי.

• שכבה
חלץ את ההפרש בשכבה (רק תפריט משנה של השכבה).";
// Do not close the mesh (leave it open)
extract.action.none = "אין";
// Close the mesh with a hole-filling algorithm
extract.action.fill = "למלא";
// Close the mesh by adding a thickness on the surface
extract.action.shell = "קליפה";
// Close the mesh by using the layer data as a difference thickness
extract.action.layer = "שכבה";

// uv part of revolution surface
genus.main = "ראשי";
genus.hole = "חור";
genus.bottom = "תחתון";
genus.top = "עליון";

// History, list of undo/redo
history = "היסטוריה";
// First "undo" state
history.root = "שורש";
history.undoConfirm = "האם אתה מאשר לבטל את כל הפעולות האלה?";
history.undoWarning = "אם תבצע עריכה לאחר מכן, ייתכן שתאבד שינויים רבים.";
// Settings concerning the history stack of undo/redo
history.stack = "מחסנית";
// Actions to include in the undo/redo stack
history.include = "כלול פעולות";
// include lighting editing in the undo/redo
history.includeLights = "מאורות";
history.includeLights.help = "אם אפשרות זו מושבתת, העברת התאורה עם ה-Gizmo עדיין תיכלל, מכיוון שהיא יכולה להשפיע על אובייקטים אחרים בהיררכיית הסצנה.";
// include postProcess editing in the undo/redo
history.includePostProcess = "פוסט-פרוססינג";
// include shading parameters (MatCap & HDRIs) editing in the undo/redo
history.includeShading = "MatCaps ו-HDRIs";
// Can limit the stack of undo/redo size
history.limitSize = "מגבלת היסטוריה";
history.limitSize.help = "הגודל המקסימלי של ההיסטוריה.

ההיסטוריה תעודכן בפעולה הבאה שתתועד.";
// Limit the number of undo in the history stack
history.limitStack = "הגבלת מחסנית";
history.limitStack.help = "המספר המקסימלי של פעולות שהאפליקציה יכולה לשמור.

ההיסטוריה תעודכן בפעולה הבאה שתתועד.";
// Value where you define how many operations you can undo before it displays a warning
history.rangeProtect = "מקסימום לביטול";
history.rangeProtect.help = "אם תלך רחוק בהיסטוריה, התיבה תבקש אישור לפני ביטול פעולות רבות.";
// When enabled, each time the user undo an operation it will undo the camera position as well
history.restoreCamera = "שחזר מצלמה";
history.restoreCamera.help = "הפעל אפשרות זו כדי לשחזר את זווית הראייה של המצלמה כשאתה מבטל/משחזר פעולה.";
// Undo
history.undo = "ביטול";
// Redo
history.redo = "שחזור";
// Shown during undo
history.state.undo = "ביטול: $0";
// Shown during redo
history.state.redo = "שחזור: $0";
// Shown during undo/redo
history.state.voxelRemesh = "רתימה מחודשת של ווקסל";
// Shown during undo/redo
history.state.surfaceRemesh = "רתימה מחודשת של משטח";
// Shown during undo/redo
history.state.multiresLevel = "שינוי רזולוציה";

// Debugging/Inspect object material (view channel separately color, roughness, normal, uv, etc)
inspect = "מפקח";
// Inspector but SHORT
inspect.short = "בדיקה";
// Display the material channel on the background
inspect.onBackground = "ברקע";
// Display the material channel on the mesh
inspect.onMesh = "על הרשת";
// Show UV seams
inspect.seams = "תפרים";

// Interface customization
interface = "ממשק";

// Resize window (should be short)
interface.resize = "שנה גודל";

// UI customization: one item row will stands on one line (synonym: Inlined)
interface.compact = "UI: קומפקטי";

// UI customization: each row of the list will be bigger
interface.expandList = "UI: הרחבת רשימה";
// UI customization: each row of the list will be bigger
interface.expandList.help = "רק אפשרות UI לניהול רשימה קל יותר.";

// Add shortcuts buttons to the bottom of the screen
interface.shortcut.bottom = "הוסף קיצורים (תחתון) ...";
// Floating window
interface.shortcut.float = "הוסף קיצורים (חלון)...";

// Interface option (main base color)
interface.colorBase = "בסיס צבע";
// Interface option (accent widget color)
interface.colorSelect = "וידג'ט צבע";
// Interface option (if the menus are transparent or opaque)
interface.panelTransparent = "פנל שקוף";
// Interface option (panel blurriness, if the menus are transparent)
interface.blurFactor = "חוזק טשטוש";
// Interface option (color of panels, if the menus are transparent)
interface.colorBaseTransparent = "פאנל צבע";

// Interface color style
interface.preset.title = "הגדרות קבועות מראש";

// Reset interface settings
interface.resetAll = "איפוס סגנון";
interface.resetAll.confirm = "לאפס את הגדרות הממשק?";
// help popup when hovering
interface.hoverHelp = "חלון עזרה במעבר";
// Interface option (main base color)
interface.iconSupport = "כפתור בולט גבוהה";
interface.iconSupport.help = "סגנון חלופי לכפתורים שהופך אותם ליותר נראים כאשר הם מופעלים.

אם נקבע אוטומטית, Nomad ישתמש במצב זה כאשר הניגודיות הצבעונית של ממשק המשתמש בין מופעל/מכובה נמוכה.";
// Interface customization
interface.flipTop = "שקיפות סרגל עליון";
// Interface customization
interface.flipBottom = "שקיפות סרגל תחתון";
// Interface customization
interface.flipMiddle = "שקיפות סרגלים צדדיים";
// list of tools
interface.toolbox = "תיבת כלים";
// hide toolbox by default
interface.toolbox.hide = "מוסתר";
// Interface customization (the toolbox is a grid, we can adjust the column count)
interface.toolbox.columns = "עמודות";
// Interface customization (the toolbox is a grid, we can adjust the column count)
interface.toolbox.rows = "שורות";
// Reset the tool's order in the toolbox
interface.toolbox.resetOrder = "איפוס סדר";
// Colored text and icon
interface.toolbox.color = "צבוע";
// Top bar
interface.top.title = "סרגל עליון";
interface.top.responsive = "רספונסיבי";
interface.top.responsive.help = "אפשרות זו רלוונטית בעיקר למסכים קטנים.";
interface.top.responsive.multiline = "רב-שורה";
interface.top.responsive.scroll = "גלגל";
interface.top.responsive.collapse = "קרוס";
interface.top.alt = "סדר חלופי";
interface.top.alt.help = "אייקון סדר חלופי עבור התפריט העליון.

תפריטים הקשורים לעריכת מסה נמצאים בעיקר בצד הנגדי של תפריט הסצנה, מה שעשוי לעזור בעריכת סצנה.";
// Scale the interface
interface.scale = "סקאלה כללית";
// Spacing between widgets
interface.cursorStep = "מרווח אנכי";
// Width of the interface panels
interface.panelWidth = "רוחב הפאנל";
// Size of fonts
interface.fontScale = "סקאלת פונט";
// Inset
interface.inset.title = "תזוזה מהקצה";
interface.inset.title.help = "ניתן לשנות את הערכים האלה רק אם יש בעיות באינטראקציה עם הכפתורים על הקצוות של המסך.

אם המחוון מושבת, Nomad ישתמש בערכי האזור הבטוח שהוחזרו על ידי המכשיר עצמו.";

// (see Glossary for Layer)
layer = "שכבה";
layers.syncTransform = "סנכרן טרנספורמציה";
layers.syncTransform.help = "אם הופעל, כל השכבות שלא נבחרו יתאימו בהתאם לסיבוב, קנה המידה והנטייה של השינוי.

השבת אפשרות זו אם שאר השכבות מתכוונות לשמש ללא שינוי החדש שאתה מחיל.

כאשר על אוטומטי, רק השכבות הנראות יתאימו.";
// (see Glossary for Layer)
layers.lock = "לשמור על פרטי השכבות העליונות";
// (see Glossary for Layer)
layers.lock.yes = "לנעול את השכבות העליונות?";
// (see Glossary for Layer)
layers.lock.warning = "במהלך הפיסול, יש להתעלם מהעיוות המגיע מהשכבות העליונות. למרות זאת הפרטים של השכבות האלה ימשיכו להיות נראים. אפשרות זו פועלת רק אם לשכבות העליונות יש פרטים בסקאלה יחסית קטנה.";
// (see Glossary for Layer)
layers.addLayer = "הוסף שכבה";
// (see Glossary for Layer)
layer.factors = "גורמי ערוץ";
// (see Glossary for Layer)
layer.factor = "גורם";
// (see Glossary for Layer)
layer.offset = "הסטה";
// Layer blend mode
layer.blendMode = "מצב שכבה";
// (see Glossary for Layer)
layer.base = "בסיס";
layer.base.nothing = "אין מה לחלץ!";
layer.base.background = "חומר רקע";
layer.base.background.help = "אם פעיל, רק הערכי החומר השונים מחומר הרקע יוחלצו.";
// (see Glossary for Layer)
layers = "שכבות";
layers.title = "שכבות";
// (see Glossary for Layer)
layers.title.help = "שכבות יכולות לרשום פרושי מקומות וציור, זה עשוי להיות מועיל לזרם עבודה לא לינארי. לדוגמה על ידי ניסוי עם ביטוי פנים שונה בלי להסתמך על הסטוריית השינויים כדי לשחזר את השינויים. 
לפרטי הציור, השכבות מסודרות מלמעלה למטה; כך שהשכבות העליונות ימסכו את התחתונות.
ניתן למחוק חלק מהשכבה על ידי שימוש בכלי `DelLayer`.";
layers.primitive = "שכבות אינן זמינות עבור יסודות.";
// When there is no layer selected (see Glossary for Layer)
layers.baseSelected = "אין";

light = "אור";
lights = "אורות";
// Intensity of light
light.intensity = "עוצמה";
// Color of light
light.color = "צבע";
// Kelvin (the temperature unit)
light.kelvin = "קלווין";
// Temperature in Kelvin (Alternative way to compute the color of the light)
light.temperature = "טמפרטורה";
// The attachment of a light defines how it will move when the user moves the camera
light.attachment = "חיבור";
// The light will stay still even if the user moves the camera
light.attachment.fixed = "קבוע";
// The light will move along the camera
light.attachment.camera = "מצלמה";
light.attachment.help = "• קבוע
כיוון האור לא ישתנה.

• מצלמה
כיוון האור תלוי בתצוגת המצלמה.";
// Light type (directional, spot, point)
light.type = "סוג";
// Directional light (synonym: sun light)
light.type.directional = "כיווני";
light.type.sun = "שמש";
// Directional light (synonym: sun light)
light.type.environment = "סביבה";
light.type.hdri = "HDRI";
// Spot light emits light in a single direction, restricted by a cone shape.
light.type.spot = "מוקד";
// Point light emits lights everywhere (synonym: omni, omnidirectional)
light.type.point = "נקודה";
// For directional light (angle jitter)
light.angle = "זווית";
// For point/spot light (offset jitter)
light.size = "גודל";
// Cone angle for spot angles
light.spot.angle = "זווית חרוט";
// Softness of the spot light
light.spot.softness = "רכות";
// Position of the light
light.position = "מיקום";
// Enable or disable shadows for a light
light.shadow.cast = "צל";
// Point light only works with "screenspace" shadow type (not "shadow map")
light.shadow.pointTip = "אור נקודתי תומך רק בצללים מרחביים.";
light.shadow.type = "סוג צל";
// https://en.wikipedia.org/wiki/Shadow_mapping
light.shadow.type.shadowMap = "מפת צל";
// Shadows computed with only the information visible on screen
light.shadow.type.screenspace = "מרחב מסך";
light.shadow.type.screenspace.help = "מאפיין ניסיוני, ייתכן שיוסר בגרסה עתידית.

אפשרות זו מתוכננת לשימוש עם מאפיין רכות הצל.";
// Adjustment to fix artefacts
light.shadow.bias = "מתח";
// How blurry the shadow is
light.shadow.softness = "רכות";
// Contact shadows are more precise shadows on small distance (synonym: cavity shadows?)
light.contact = "מגע";
light.contact.help = "אם נבחר אוטומטית, רק האור הדומיננטי ביותר שיהיה עם צל מגע.";
// Thickness threshold for screen-space shadows (synonym: threshold, bias)
light.shadow.tolerance = "סובלנות";
// Activated the light
light.visible = "הצג";
// Move the light in front of the camera (but keeps its inner orientation)
light.resetPosition = "ממרכז מחדש";

// Object's material
material = "חומר";
// See glossary
material.pbrRoughnessMetalness.warning = "מרקם וציפוי מתכת מצריכים מצב הצללת PBR.";
// See glossary
material.pbrReflectance.warning = "החזר נזקק במצב הצללה PBR.";
// See glossary
material.pbrRefraction.warning = "שבירה נדרשת במצב הצללה PBR.";
// See glossary
material.pbrSubsurface.warning = "תת-שטח מצריך מצב הצללת PBR.";
// Value that says how much light will change direction when hitting the surface
material.ior = "אינדקס השבירה";
// an object-level value that overrides the roughness interior/surface of the mesh
material.paintingOverride = "עקוף גסות";
// The roughness in the inside is turbidity
material.paintingOverride.help = "יש שתי מחוספסיות במשחק, זו שמנחה את המשטח וזו שבפנים.

עם זאת, יש רק מחוספסות אחת שניתן לצבוע, כך שלשתי המחוספסויות יש את אותם הערכים.";
// Glossiness is simply the opposite of roughness
material.refraction.surface = "משטח";
// Synonym: turbidity
material.refraction.interior = "פנים";
// Set the roughness of the object with a value of 0
material.paintGlossy = "צבע גלוסי";
material.paintGlossy.help = "זה יצבע את האובייקט עם קשיחות ומתכתיות של 0, מה שיאפשר שבירה חדה. 

זהה כאילו משתמשים בתפריט הצבע ובאפשרות צביעת הכל ללא צבע.";
// Simulate the light being absorbed when it travels through the volume.
material.absorptionEnable = "בליעה";
material.absorptionEnable.help = "דמים את בליעת האור כשהוא עובר דרך הנפח.

חלקים דקים יהיו יותר מוארים כשהם נותנים לאור יותר לעבור דרכם, בעוד שהאזורים העבים יהיו יותר כהים.

אפקט זה תלוי באופן כבד בצורת האובייקט, רק הערכה לקרובה לעובי האובייקט משמשת.";
material.absorptionFactor = "גורם";
// Depth means how far the light can travel under the surface
material.subsurfaceDepth = "עומק";
// Enable translucency (same as subsurface but only affect lights that enter a solid and escape from the other side)
material.translucency = "זכירות";
material.translucency.help = "עליכם להחזיק באור שמטיל צללים כדי לראות זכירות.";
// Opacity factor, the opposite of transparency (synonym: Alpha)
material.opacity = "אטימות";
// Fully opaque material
material.type.opaque = "אטום";
material.type.opaque.help = "זהו סוג החומר ברירת המחדל.

אלפא ורטקס שנצבעה, טקסטורת שקיפות או ערוץ אלפא של ערוץ הצבע יילקחו בחשבון דרך דית'רינג.

רק המחליק הראשי של השקיפות ייתעלם.";
// Fully opaque material
material.type.shadowCatcher = "קולט צל";
material.type.shadowCatcher.help = "הפוך את האובייקט לשקוף לחלוטין, למעט הצללים הנוצרים על ידי האורות.

מצב זה משמש בדרך כלל בגיאומטריה של מישור.";
material.type.shadowCatcher.warning = "אין אורות עם צללים בסצנה שלך, קולט הצל יהפוך ללא פעיל.

כאשר קולט הצל הוא מתכתי לחלוטין, הוא יוכל לשקף את הסצנה אם הפוסט פרוסס של ההשתקפות (SSR) מופעל.";
// See glossary
material.type.subsurface = "תת-משטח";
material.type.subsurface.help = "כדי לקבל את התוצאה הטובה ביותר, תוכלו לעבור למצב שיידינג PBR ולהשתמש לפחות באור כיווני אחד, באופן אידיאלי בסביבה מעומעמת.";
// Transparency mode, alpha blendingd
material.type.blending = "שילוב";
material.type.blending.help = "בצעו את האובייקט למחצה שקוף על ידי כיוונון ערך האטימות.

שימו לב, בגלל המגבלות המיידיות, אתם עלולים לראות אטיפקטים מורגשים אם האובייקט שלכם בעל צורה מורכבת.";
// Transparency mode
material.type.additive = "הוספה";
material.type.additive.help = "בצעו את האובייקט למחצה שקוף על ידי כיוונון ערך האטימות.

שיטה זו נוטה לייצר פחות אטיפקטים מדרך השילוב, אבל האובייקט יהיה מואר יותר.";
// Transparency mode based on dithering
// https://en.wikipedia.org/wiki/Dither
material.type.dithering = "הישגות";
material.type.dithering.help = "בצעו את האובייקט למחצה שקוף על ידי הסרת כמה פיקסלים באופן אקראי.";
// Simulate glass-like material
material.type.refraction = "שבירת אור";
material.type.refraction.help = "מצב זה יכול לשמש כדי לדמות חומרי זכוכית.

בגלל מגבלות זמן אמת, שבירת אור עצמית או שבירה מרובת שכבות היא מוגבלת.";
material.castShadows = "השלכת צללים";
material.receiveShadows = "קליטת צללים";
// Lights are ignored, the object will be displayed with color only
material.alwaysUnlit = "תמיד לא מואר";
// Inverse the side of the object triangles
// https://en.wikipedia.org/wiki/Back-face_culling
material.flipCulling = "היפוך קילול";
// How much light a surface will reflect (synonym: specular)
material.reflectance = "החזריות";
material.reflectance.help = "בקר את כמות ההחזר שהחומר יקבל עבור חומרים לא מתכתיים. 

ברוב הזמן יש להשתמש בערך ברירת המחדל (שזה תואם ל-4% אור מוחזר במצב רגיל).";
// Material preview in the viewport
material.preview = "תצוגה מקדימה של חומר בתצוגה";
material.preview.help = "כשאתה משנה חומר, תוצג תצוגה מקדימה בתצוגה על האובייקט שנבחר.

התצוגה המקדימה מוצגת בזמן שאתה מקיים אינטראקציה עם הצבע, החספוס, המתכתיות, השקיפות והעוצמה.";
// Menu name
menu.files = "קבצים";
// Menu name
menu.scene = "סצנה";
// Menu name
menu.multires = "ריבוי רזולוציות";
// Menu name
menu.voxel = "ווקסל";
// Menu name
menu.dynamic = "דין טופו";
// Menu name (Synonym: Misc, Other)
menu.topology = "שונות";
// Menu name
menu.primitive = "פרימיטיבי";
// Menu name
menu.render = "הפקדה";
// Menu name
menu.material = "חומר";
// Menu name
menu.postprocess = "עיבוד לאחר";
// Menu name
menu.camera = "מצלמה";
// Menu name
menu.background = "רקע";
// Menu name
menu.tool = "כלי";
// Menu name
menu.stroke = "קו";
// Menu name
menu.alpha = "אלפא";
// Menu name
menu.filter = "מסנן";
// Menu name
menu.falloff = "דעיכת אינטנסיביות";
// Menu name
menu.paint = "צבע";
// Menu name
menu.symmetry = "סימטריה";
// Menu name
menu.operation = "פעולה";
// Menu name (pencil pressure)
menu.pressure = "לחץ";
// Menu name
menu.gesture = "מחווה";
// Menu name
menu.layers = "שכבות";
// Menu name
menu.settings = "הגדרות";
// Menu name
menu.interface = "ממשק";
// Menu name
menu.bindings = "הקשרים";
// Menu name
menu.history = "היסטוריה";
// Menu name
menu.historySettings = "הגדרות";
// Menu name
menu.about = "אודות";
// Menu name
menu.debug = "ניפוי שגיאות";

// Operation on the object (action)
mesh.holes = "חורים";
// If the object has holes, the algorithm will close them
mesh.holes.close = "סגור חורים";
// Says how dense (number of triangles) the algorithm will use in order to fill holes
mesh.holes.detail = "פרטים";
// If the mesh has disconnected parts, it will be split/separated into objects
mesh.separate = "הפרד";
// When converting the object to a triplanar primitive, some object features will be lost
mesh.triplanar.warning = "שכבות, צבע וריבוי רזולוציות יאבדו.";
// Resolution of the triplanar grid
mesh.triplanar.resolution = "רזולוציה";
// Make the triplanar a regular cube (all 3 dimension equal)
mesh.triplanar.cubic = "הכפה קוביתיות";
// Covnert an object to a triplanar primitive
mesh.triplanar.convert = "להמיר";
// Static object means "static topology"
mesh.static = "רשת";
// See glossary
mesh.multires = "ריבוי רזולוציות";
// Dynamic topology
mesh.dynamic = "דנטופו";

// Disable this option to have per-tool material settings (instead of shared settings)
paint.useGlobal = "חומר גלובלי";
paint.useGlobal.help = "אם אפשרות זו מופעלת, החומר שנבחר יהיה זהה לכלים האחרים.

שימו לב כי הוא מתחשב רק בהגדרות חוספנות, מתכתיות וצבע.";
// The current tool will paint the object if this option is enabled
paint.usePainting = "ציור מברשת";
// If true save the textures data into
paint.preset.embed = "הטמע טקסטורות";
paint.preset.embed.help = "הטקסטורות נמצאות בתיקיית Nomad textures/. ניתן למצוא את הגדרות החומר בתיקיית Nomad materials/.

כאשר אפשרות זו מושבתת, הגדרת החומר מתייחסת רק לטקסטורה שבתוך התיקייה textures/.

ניתן להפעיל אפשרות זו כדי להעתיק את הטקסטורות לתוך ההגדרה. זה יכול להיות מועיל אם ברצונכם לשתף סט שהושלם מבלי לספק את הטקסטורות הנלוות.";
paint.preset.embed.apply = "החל על כל החומרים";
// Factor/Opacity of paint tool
paint.intensity = "עוצמת צבע";
// Apply the paint on the object
paint.paintAll = "צבע הכל";
paint.paintAll.help = "מרח את החומר הנוכחי על האובייקט.";
paint.paintAll.help.mask = "האזור המכוסה לא יושפע.";
paint.paintAll.help.hide = "האזור הנסתר לא יושפע.";
paint.paintAll.help.opacity = "השתמש בפרמטר הצביעה של הכלי למעלה.";
paint.paintAll.help.layer = "האזור הלא צבוע של שכבה לא יושפע.";
paint.strokePainting.title = "צביעה";
// Brush stroke texture
paint.texture.warningEnable = "יש להפעיל ציור מברשת כדי לאפשר הקרנת טקסטורה (תיבת סימון למעלה)!";
paint.texture.warningIgnored = "הכלי הנוכחי אינו יכול להשתמש בטקסטורות!";
// use stencil mode
paint.stencil = "שבלונה";
// Inherit stroke falloff option for the painting
paint.tool.help = "השתמש בכלי אלפא, נזק ונפילה ע'מ להתאים את עוצמת פעולת הצביעה.

אפשרויות אלו אינן משולבות בפונקציית הציירת הכללית, אך אלפא נלקחת בחשבון עבור גרסת הטריפלנר.";
// when the user choose a new item name (through iOS/Android virtual keyboard)
input.name = "שם חדש";
// when the user choose a new number value (through iOS/Android virtual keyboard)
input.number = "ערך חדש";
// when the user choose a new color (through iOS/Android virtual keyboard)
input.hexcolor = "צבע חדש (בפורמט hex)";

// Post process effect
postprocess = "תהליך פוסט";
// Denoise
postprocess.denoise = "מסנן רעשים";
postprocess.denoise.help = "בצע מעבר להסרת רעשים לאחר שצבירת כל הפריימים הסתיימה.";
postprocess.denoise.warning = "זוהי פעולה יקרה, אפשר את האפקט הזה רק אם התמונה מרעישה.";
// Quality vs performance
postprocess.quality = "איכות";
postprocess.quality.help = "הפעל את האפשרויות הללו כדי לשפר את האיכות על חשבון ביצועים.";
// More samples means better quality but slower performance
postprocess.maxSamples = "דגימות מקסימום";
// Full resolution (1:1 resolution) instead of half resolution
postprocess.fullResolution = "רזולוציית מסך מלאה";
// Number of frames that we accumulate (higher value means better quality)
postprocess.accumulateCount = "דגימת פריימים מקסימלית";
postprocess.accumulateCount.help = "מספר מקסימלי של פריימים הנוצרים לפני שהרינדור נעצר.

כאשר הרינדור נעצר, Nomad לא תבצע פעולה כלשהי, וכך תחסוך בחיי סוללה.

פונקציות רבות של רינדור מרוויחות מצבירת פריימים, במיוחד:
• צללים רכים
• תאורה גלובלית
• השתקפות (SSR)
• אקלולי סביבה
• תת-משטח
• עומק שדה

רמת פריימים גבוהה נדרשת בעיקר לצללים רכים ותאורה גלובלית.
Nomad יכולה להפסיק את הרינדור מוקדם יותר אם התכונות הנ'ל מושבתות.";
// The value is a ratio (0.5 means half resolution 2 means twice the resolution)
postprocess.renderRatio = "רזולוציית ההצגה";
postprocess.renderRatio.warning = "הוספר על ידי אפקט הפיקסל ארט.";
postprocess.renderRatio.help = "אפשרות זו משפיעה מאוד על הביצועים.
מומלץ לשמור על ערך נמוך מ-x1.25.

אפשרות זו אינה נשמרת בהגדרות.";
// Temporal Anti-Aliasing (no need to translate "TAA")
postprocess.taa = "אי-חלקות (TAA)";
postprocess.taa.help = "מפחית הבהוב כשאתם מזיזים את ה-קמרה.";
// Ditherhing pixel
postprocess.dithering = "הסטת צבעים";
postprocess.dithering.help = "הסחת צבעים כדי להקטין פגמי פיזור.";
// Screen-Space Reflection (no need to translate "SSR")
postprocess.ssr = "השתקפות (SSR)";
postprocess.ssr.warning = "SSR דורש מצב צללים PBR.";
// Screen-Space Global Illumination (no need to translate "SSGI")
postprocess.ssgi = "הארה גלובלית (SSGI)";
// Thickness threshold for ssgi tracing algorithm (synonym: threshold, bias)
postprocess.ssgi.tolerance = "סיבולת";
postprocess.ssgi.warning = "SSGI דורש מצב הצללה PBR.";
// Screen-space ambient occlusion (SSAO)
// https://en.wikipedia.org/wiki/Ambient_occlusion
postprocess.ssao = "חסימת קרן אור";
// How far the effect spreads
postprocess.ssao.radius = "גודל";
// How strong the effect is
postprocess.ssao.factor = "עוצמה";
// Adjustment to fix artefacts
postprocess.ssao.bias = "העדפה לעקמומיות";
postprocess.ssao.bias.help = "כמה רגיש ההשפעה בהתאם לעקמומיות המשטח.";
// Depth of Field (bokeh)
// https://en.wikipedia.org/wiki/Depth_of_field
postprocess.dof = "עומק שדה";
// The blur factor behind the focused point
postprocess.dof.blurFar = "טשטוש מרוחק";
// The blur factor in front of the focused point
postprocess.dof.blurNear = "טשטוש קרוב";
postprocess.dof.focusTip = "לחץ על אובייקט לשינוי נקודת המוקד.";
// Bloom (light bleeding)
// https://en.wikipedia.org/wiki/Bloom_(shader_effect)
postprocess.bloom = "אפקט פריחה";
// Intensity of the effect
postprocess.bloom.intensity = "עוצמה";
// How far the effect spreads
postprocess.bloom.radius = "רדיוס";
postprocess.bloom.radius.help = "כמה רחבה הפריחה.";
// Luminosity threshold (below this value, no bloom is generated)
postprocess.bloom.threshold = "סף";
postprocess.bloom.threshold.help = "סף הבהירות הקובע אם פיקסל יפיץ אפקט פריחה או לא.
אם הערך הוא 0, הכל יקבלו אפקט פריחה.";
// https://en.wikipedia.org/wiki/Tone_mapping
postprocess.tone = "מיפוי גוונים";
postprocess.tone.exposure = "חשיפה";
postprocess.tone.contrast = "ניגודיות";
postprocess.tone.saturation = "רוויה";
postprocess.tone.hue = "גוון";
// No tonemapping operator is used
postprocess.tone.mapping.none = "ללא";
// A neutral tonemapping is used
postprocess.tone.mapping.neutral = "ניטראלי";
// Color curves
postprocess.curve = "כיוונון צבע";
// Curve for pixel luminance
postprocess.curve.luminance = "עיקרי";
postprocess.curve.red = "אדום";
postprocess.curve.green = "ירוק";
postprocess.curve.blue = "כחול";
// Reset color grading curves
postprocess.curve.resetAll = "אפס הכל";
// https://en.wikipedia.org/wiki/Chromatic_aberration
postprocess.chromatic = "חשבונייה כרומטית";
postprocess.chromatic.factor = "עוצמה";
// Darking on the edges
postprocess.vignette = "וינייט";
// How far the effect spreads
postprocess.vignette.size = "גודל";
// How sharp the edge of the effect is
postprocess.vignette.hardness = "קשיחות";
// Unblur the image (sharpening)
// https://en.wikipedia.org/wiki/Unsharp_masking
postprocess.sharpness = "חדות";
postprocess.sharpness.factor = "עוצמה";
// Filmic Grain
// https://en.wikipedia.org/wiki/Film_grain
postprocess.grain = "גרעיניות";
postprocess.grain.factor = "עוצמה";
// Accentuate the edges of the model
postprocess.curvature = "עקמומיות";
// main strength of curvatre
postprocess.curvature.factor = "גורם";
// Color/Strength of concave curvature
postprocess.curvature.cavity = "שקע";
// Color/Strength of convex curvature
postprocess.curvature.bump = "בליטה";
// https://en.wikipedia.org/wiki/Pixel_art
postprocess.pixelArt = "אמנות פיקסלים";
// Override frame accumulation feature
postprocess.pixelArt.allowAccumulate = "אפשר דגימת מסגרת";
// Simulate scanline rendering (horizontal line)
postprocess.scanline = "קו סריקה";
postprocess.scanline.factor = "פקטור";
// Spacing between lines
postprocess.scanline.spacing = "מרווח";

// Geometry Primitive (box, sphere, cylinder, etc)
primitive = "פרימיטיבה";
primitive.box = "קופסה";
primitive.sphereCube = "ספירה מרובעת";
primitive.sphereUV = "כדור UV";
primitive.icosahedron = "עשרימון";
primitive.cylinder = "גליל";
primitive.cone = "קונוס";
primitive.torus = "טורוס";
primitive.lathe = "מחרטה";
primitive.tube = "תעלה";
primitive.plane = "מישור";
primitive.triplanar = "טריפלנר";
primitive.needValidate = "את הפרימיטיבה יש לאשר!";

// If enabled, we can edit primitive inside the viewport
primitive.edit = "עריכה";
primitive.edit.help = "אפשר לערוך ב-3D בתוך חלון התצוגה.

ניתן להשבית את הפיצ׳ר הזה אם רוצים לעבוד עם הגיזמו או כלי הטרנספורם מבלי לשנות את הפרימיטיבה.";

// Primitive configuration
primitive.mainConfig = "פרמטר";
// Interface section where we change the topology (number of triangles/polygons)
primitive.topology = "טופולוגיה";
// Interface section where we change the geometry (shape of the primitive)
primitive.geometry = "גיאומטריה";

// Validating the primitive (then it can be sculpted)
primitive.validate = "אישור";
// Maximum number of faces of the primitives
primitive.maxFaces = "מקסימום פאות";
primitive.maxFaces.help = "המקסימום של פאות שפרימיטיבה יכולה להכיל.

ההגבלה פעילה רק כל עוד הפרימיטיבה אינה מאושרת, אחר כך ההגנה מוסרת.";
// Synonym: Flat subdivision
primitive.linear = "חילוק ליניארי";
// Post as "subdivision that occurs after the primitive computation"
primitive.subdivision = "חלוקה לאחר תהליך";

// Radius (of a sphere, torus, etc)
primitive.radius = "רדיוס";
// Make sure the two end-point of a primitive (cylinder, tube, etc) have the same size
primitive.radius.sync = "אותו רדיוס";
primitive.radius.start = "התחלת רדיוס";
primitive.radius.end = "סיום רדיוס";
// Size (of cube x dimension)
primitive.size = "גודל";
primitive.sizeX = "גודל X";
primitive.sizeY = "גודל Y";
primitive.sizeZ = "גודל Z";
// Division only impacts the topology (synonym: resolution)
primitive.division = "חלוקה";
primitive.divisionX = "חלוקה X";
primitive.divisionY = "חלוקה Y";
primitive.divisionZ = "חלוקה Z";
// Angle of torus, etc
primitive.angleX = "זווית X";
primitive.angleY = "זווית Y";
primitive.angleZ = "זווית Z";
// It means we try to keep regular sized quad (square) instead of highly distorted rectangule
primitive.constantDensity = "צפיפות קבועה";
// Make sure the shape is perfectly spherical
primitive.projectOnSphere = "הטלה על כדור";
primitive.projectOnSphere.help = "מצמיד את הנקודות על כדור מושלם.";

// triplanar
primitive.triplanar.title = "תלת מישורי";
primitive.triplanar.title.help = "תלת מישורי משתמש במידע המסכה מ-3 מישורים כדי למלא רשת ווקסלים שמופולגנת לאחר מכן.

אם תשתמש במחליף הערך של החלוקה או הגודל, מידע הצביעה יאופס (החלקות תישאר).

כנראה שכדאי לבטל סימטריה כי עשוי לא לתפקד כפי שאתה מצפה.

תוכל להשתמש באופציה `מחובר טופולוגית` בלוח המסכה לצבוע מישור שמשפיע על מישורים אחרים.";
// Make sure the box is a regular cube (same 3 dimension)
primitive.triplanar.sameSize = "אותו גודל (קוביה)";
primitive.triplanar.polish = "חלקות";
// Mask refers to the painted mask on the triplanar planes
primitive.triplanar.resetMask = "איפוס מסיכה";
// One side of a cube (the back plane)
primitive.isolate.back = "חזרה";
// One side of a cube (the right plane)
primitive.isolate.right = "ימין";
// One side of a cube (the bottom plane)
primitive.isolate.bottom = "תחתית";
// Plane
primitive.planeSameSize = "באותו גודל (ריבוע)";
// Make the plane a disk/ellipse instead of a rectangle
primitive.planeDisk = "דיסק";
// Box
primitive.boxRegular = "באותו גודל (קובייה)";
// Torus
primitive.torus.radiusOuter = "רדיוס חיצוני";
primitive.torus.radiusInner = "רדיוס פנימי";
primitive.torus.angle = "זווית";
primitive.torus.angleOffset = "הזחת זווית";
// Cylinder
primitive.cylinder.height = "גובה";
// Cone
primitive.cone.radius = "רדיוס";
primitive.cone.height = "גובה";
// Hole sub menu (cylinder, tube, etc)
primitive.hole = "חור";
// Make a hole in the primitive to make it hollow
primitive.hasHole = "יש חור";
// Curve profile (synonym: profile, curve)
primitive.profile = "פרופיל";
primitive.profile.viewport = "הצג בשקף";
// If the revolution surface has caps (E.g: cylinder)
primitive.cap = "כיסוי";

// Singular of Repeaters (Nodes that make many copies of its children (type of mirror/curve/array/radial))
repeater = "שכפול";
// All the new items will be inserted inside the bound rather than outside
repeater.array.fitInside = "התאמה פנימה";
// The object will follow the curve
repeater.curve.align = "יישור";

// Import resource (Alpha, Textures, MatCaps, etc)
resource.import = "ייבוא...";
// iOS Photos gallery
resource.import.ios.photos = "תמונות";
// iOS Files App
resource.import.ios.files = "קבצים";

scene.title = "סצנה";
scene.title.help = "בעת השימוש בכפתורי הנראות/בחירה, החזק וגרור את האצבע לבחירה נוחה של אובייקטים אחרים.

תוכל גם ללחוץ לחיצה ארוכה על כפתורי הנראות/בחירה להשפעה גם על ילדים.";
// The view will focus on the item when we click on it
scene.focus = "ממשק: התרכז בפריט בפעם כפולה";
// Add new object on gizmo position
scene.addOnGizmo = "על גיזמו";
scene.addOnGizmo.help = "הזז את הצומת למיקום הגיזמו (אם כלי הגיזמו נבחר)";
// Select the gizmo tool after adding a new object
scene.addSelectGizmo = "בחר גיזמו";
scene.addSelectGizmo.help = "בחר בכלי הגיזמו כאשר מוסיפים צומת חדשה";
// Icon size in pixel (min/max)
scene.iconSize = "גודל סמל";
// Min size of icon
scene.iconSize.min = "מינימום";
// Max size of icon
scene.iconSize.max = "מקסימום";
// display hierarchy lines (visibility helper)
scene.showHierarchy = "קווי היררכיה";
scene.showHierarchy.help = "הצגת קו בין ההורה לילדיו ב-viewport.";
scene.showHierarchyNomadPivot = "שימוש בנקודת הפיבוט של Nomad";
scene.showHierarchyNomadPivot.help = "נקודת הפיבוט של Nomad היא הפיבוט שמשתמשים בו כלים כמו Transform ו-Gizmo.

אם אפשרות זו לא מופעלת, ייעשה שימוש בנקודת הפיבוט הבסיסית הטבעית.

במקרים מסוימים, נקודת הבסיס יכולה להיות רחוקה ממרכז האובייקט עצמו!";
// The view will focus on the item when we click on it
scene.syncVisible = "סנכרן נראות";
scene.syncVisible.help = "כאשר זה מופעל, השימוש בסמל העין ישפיע על כל הפריטים שנבחרו.";
// Merge 2 objects without modifying the geometry or the topology
scene.join = "חבור";
// Group the selected object with a new created Empty Node as a parent
scene.group = "קבוצה";
// Move the item outside its parent (synonym: ungroup)
scene.unparent = "ללא הורה";
// Mirror node type, a node that make many copies of its children (mirror symmetry)
scene.mirror = "מראה";
// Curve node type, a node that make many copies of its children (along a curve)
scene.curve = "עקומה";
// Array node type, a node that make many copies of its children (grid repetition pattern)
scene.array = "מַעֲרָך";
// Radial node type, a node that make many copies of its children (radial symmetry)
scene.radial = "רדיאלי";
// Nodes that make many copies of its children (type of mirror/curve/array/radial)
scene.repeaters = "מִחוֹזֵרֵאִים";
scene.repeaters.help = "מחוזרַאִים שמייצרים עותקים של כל הגיאומטריות מתחתיהם בשרשרת התמונה.";
// Validate button
scene.validateGroup = "אשור";
// Keep instances in the scene
scene.validateGroup.keepInstances = "שמור מופעים";
// If we should join children
scene.validateGroup.joinChildren = "חבר ילדים";
// Merge/weld 2 objects by recomputing all the topology and creating a new object
scene.mergeVoxel = "מיזוג ווקסלים";
scene.voxelResolution = "הַפְרָטָה";
// The hidden objects will be "substracted" (the object will carve the other object)
scene.subtractionTip = "חיסור: עצמים מוסתרים";
// If all the objects are hidden, only the parts where they intersect (collide) will be kep
scene.intersectionTip = "חיתוך: כל האובייקטים נסתרים";

// Need at least to select one object
scene.noneButNeedAtLeastOne = "לא נבחר אובייקט, נא לבחור לפחות אובייקט אחד.";
// Need to select one object only
scene.noneButNeedOne = "לא נבחר אובייקט, נא לבחור אובייקט אחד.";
// Need to select one object only
scene.onlyOneObject = "נבחרו מספר אובייקטים, נא לבחור רק אובייקט אחד.";
// Boolean operation
scene.boolean = "נוֹרָמִי";
scene.boolean.help = "מזג, הפחת או חצה אובייקטים על ידי ביצוע פעולה בוליאנית.

הפעולה יכולה להיכשל אם חלק מהאובייקטים אינם מניפולד או אינם אטומים למים.

אם הפעולה הבוליאנית נכשלת, תוכל תמיד להשתמש במשחזר הווקסלים על האובייקט הבעייתי כדי לוודא שהוא מניפולד אטום למים.";
// Weld intersection
scene.boolean.mergeIntersection = "רתך נקודת חיתוך";

// General scene display settings
settings.display.title = "הגדרות תצוגה";
// Wireframe (show triangles and quad edges)
settings.wireframe = "Wireframe";
// Display the material texture
settings.debugChannel = "הצג מרקם";
// Display the material texture in the background
settings.debugChannel.onBackground = "ברקע";
// Display the material texture on the mesh
settings.debugChannel.onMesh = "על ה-Mesh";
// If the object is opened (a simple plane for example), two sided means we'll be able to see if from the two sides of the planes
settings.twoSided = "דו צדדי";
settings.twoSided.help = "המשטחים יהיו גלויים משני הצדדים.";
// If we colorize the inverted side of faces
settings.backface.color = "צבע הפניה האחורית";
// Color of the inverted side of faces
settings.backface.colored = "פניה אחורית צבועה";
// Outline (contour highlight around the selected object)
settings.outline = "מתאר";
// Outline (contour highlight around the selected object)
settings.outline.help = "האובייקטים שהוצגו יודגשו במתאר.";
settings.outline.thickness = "עובי";
// Navigation cube (easy to snap/align the view)
settings.snapCube = "Snap cube";
// Move the navigation cube to the bottom of the screen
settings.snapCube.bottom = "למטה";
// Move the navigation cube on the left side of the screen
settings.snapCube.left = "שמאל";
// Flip the camera (rotate 180° to see the other side)
settings.snapCube.flip = "היפוך 180°";
settings.snapCube.flip.help = "הפוך את הנוף אם הנוף כבר מוצמד.";
// Alignment (can be auto/on/off)
settings.snapCube.align = "הגבלת יישור";
settings.snapCube.align.help = "יש ליישר את הנופים לציר העולמי. אם האפשרות פעילה, אפשריים רק 6 תצוגות הצמדה.

באופן אוטומטי, ההגבלה תתרחש רק אם המצלמה במצב מסלול.";
// Stats (information logs about the scene displayed on screen)
settings.stats = "סטטיסטיקות";
settings.stats.right = "ימין";
settings.stats.all = "הצג את כל הסצנה";
// Grid
settings.grid = "רשת";
// Cursor
settings.cursor.title = "סמן";
settings.cursor.whileSculpting = "הצג עיגול בזמן פיסול";
// A small indicator dot
settings.cursor.showDot = "הצג נקודה קטנה";
settings.cursor.showDot.help = "הנקודה יכולה להופיע כנקודת ציר המצלמה או בזמן פיסול.";
settings.cursor.showRope = "הצג מייצב חבל";
// indicator
settings.indicator.title = "מחוון";
settings.indicator.title.help = "הצג מחוון חזותי (הדרכות, צילום מסך וכו').";
settings.indicator.size = "גודל";
// Highlight (the object glows when we select it)
settings.highlight.selection = "הדגש בחירה";
// Highlight settings
settings.highlight = "הדגשה";
settings.highlight.duration = "משך זמן";
// Mesh that are not selected will be dark
settings.darkenUnselected = "כהה אובייקטים שלא נבחרו";
// https://en.wikipedia.org/wiki/Shading
settings.smoothShading = "צללית חלקה";
// Experimental feature
settings.partialDraw = "ציור חלקי";
settings.partialDraw.help = "תכונה ניסיונית!

השתמש בה אם אתה מפסל חלק קטן יחסית מרשת פוליגונים גבוהה.

זה אמור להפוך את הפיסול לחלק יותר, אבל לא כדאי להפעיל תצוגת שלד!

זה גם עלול להוסיף ארטיפקטים חזותיים במהלך ההברשות.";
settings.partialDraw.warning = "אל תשכח לכבות אפשרות זו אם הארטיפקטים חזותיים מפריעים מדי!";
// Disable this option to force a white uniform paint instead of showing the objects painting
settings.showPainting = "הצג צבע";
// Show and use the masking on the mesh
settings.showMasking = "הצג מסכה";
// Disable this option to force show the hidden faces
settings.showDiscard = "השתמש בהסתרה";
// Show icon on the canvas
settings.icon = "אייקון";
// Show icons on the canvas
settings.icons = "אייקונים";
// Tooltip
settings.icons.help = "הצג אייקון על הקנבס כך שתוכל לבחור ולערוך אותם ישירות.";
// Hole filling settings
settings.hole = "מילוי חורים";
// Allow the hole filling algorithm to handle non-manifold (non regular topology)
settings.hole.nonManifold = "מילוי לא מגובש";
settings.hole.nonManifold.help = "נסה למלא חור לא מגובש.

אפשרות זו אינה נשמרת בהגדרות.";
// Maximum number of vertices (points)
settings.multires.maxVertices = "מספר מקסימלי של נקודות";
settings.multires.maxVertices.help = "נומאד אינו מבצע בדיקת זיכרון לפני חלוקה, מספר גבוה של פוליגונים עלול לגרום לקריסות בקלות.";
settings.multires.lowResVertices = "סף רזולוציה נמוכה";
settings.multires.lowResVertices.help = "ניתן להציג רזולוציה נמוכה של הרשת כשאתה מזיז את המצלמה.

אתה יכול להגדיל ערך זה אם אתה רוצה להציג רזולוציה גבוהה יותר של הרשת.";

// The main rendering mode
shading = "הצללה";
// Main rendering mode (PBR stands for Physically Based Rendering)
shading.pbr = "מואר (PBR)";
shading.pbr.help = "במצב זה ניתן להוסיף אורות (עם צללים), יחד עם סביבה HDR.

ניתן גם לצייר מתכתיות וחספוס, המאפשר שליטה מדויקת יותר על מראה החומר שלך.";
// Fast rendering mode for sculpting purpose
shading.matcap = "מטקאפ";
shading.matcap.help = "מייצג מאטריאל קאפ, מטקאפ מטפל במידע התאורה והחומר בתמונה אחת.

זהו מצב רינדור מהיר, מתאים בעיקר לפיסול גולמי.";
// Unlit rendering mode, it simply displays a solid/flat color
shading.unlit = "ללא תאורה";
shading.unlit.help = "מצב הצללה בצבע אחיד, ללא תאורה.";
// Helper rendering mode that display solid colors
shading.object = "מספר אובייקט";
shading.object.help = "מוד רינדור ללא תאורה עם כל עצם שמקבלת צבע אקראי.

זה שימושי במיוחד כשיש לך מספר רב של עצמים בסצנה.";
// Helper rendering mode that display solid colors
shading.instance = "מספר מופע";
shading.instance.help = "כמו מספר אובייקט, אבל מופעים יקבלו אותו צבע.";
// Helper rendering mode that display solid colors
shading.material = "מספר זיהוי חומר";
shading.material.help = "הצג צבע אחיד עבור כל מופעי החומר.";
// Randomize colors
shading.id.randomize = "רנדומיזציה של מספר זיהוי";
shading.textures = "השתמש במרקמים";
shading.textures.help = "כרגע אינכם יכולים ליצור או לערוך טקסטורות בתוך Nomad.

אבל אם תייבאו קובץ עם טקסטורות, זה אמור לעבוד.

• טקסטורות נתמכות
אטימות: מוארת, MatCap, רינדור ללא תאורה
נורמל: מוארת, MatCap
צבע: מוארת, רינדור ללא תאורה
פולט: מוארת
חספוס: מוארת
מטאליות: מוארת";
// Lights
shading.lights = "תאורות";
shading.lights.addLight = "הוסף תאורה";
shading.lights.warning = "תאורה דורשת מצב הצללת PBR.";
// Environment based lighting (synonym: HDRI)
shading.environment = "סביבה";
shading.environment.import = "ייבא HDR";
shading.environment.exposure = "חשיפה";
shading.environment.backgroundBlur = "טשטוש (רקע)";
shading.environment.rotation = "סיבוב";
shading.environment.rotation.help = "אפשר לסובב את הסביבה על ידי גרירת שלוש אצבעות על התצוגה בכיוון אופקי.";
// The environment will always be aligned with the camera (so that the lighting is consistent)
shading.environment.attachedToCamera = "צמוד למצלמה";
shading.environment.attachedToCamera.help = "צמד את הסביבה למצלמה.

כך התאורה תהיה אחידה, שזה יכול להיות מועיל למטרות פיסול.";
shading.matcap.rotation = "סיבוב";
shading.matcap.rotation.help = "אפשר לסובב את ה-MatCap על ידי גרירת שלוש אצבעות על התצוגה בכיוון אופקי.";
shading.matcap.global = "השתמש ב-MatCap כלל-עולמי";
shading.matcap.global.help = "הסר את הצ'ק כדי להשתמש ב-MatCap שונה עבור רשת זאת.";

// bottom shortcut buttons (should be SHORT)
shortcut.maskVisible = "מסכה";
shortcut.solo = "סולו";
shortcut.xray = "קרני X";
shortcut.voxelRemesh = "ווקסל";
shortcut.wireframe = "חיווט";
shortcut.cameraReset = "אפס";
shortcut.cameraSnap = "צמד";
shortcut.lockSelection = "נעול";
shortcut.lockSelection.help = "כאשר מופעל, אתה לא יכול לשנות את הבחירה על ידי לחיצה על רשת.";
shortcut.grid = "רשת";

// Memory taken by the scene
stat.ramScene = "סצנה";
// Vram = Video RAM (Video Memory, the memory of the graphic card)
stat.vramScene = "סצנת Vram";
// Vram = Video RAM (Video Memory, the memory of the graphic card)
stat.vramRender = "עיבוד Vram";
// Vram = Video RAM (Video Memory, the memory of the graphic card)
stat.vramTextures = "מרקמי Vram";
// Memory taken by the undo/redo history
stat.ramHistory = "היסטוריה";
// Memory taken by other stuffs
stat.ramOther = "אחר";
// Memory used by the app (RAM, not storage!)
stat.usedMemory = "זיכרון בשימוש";
// Memory available for the app (RAM, not storage!)
stat.freeMemory = "זיכרון פנוי";
// RAM, not storage!
stat.ram = "RAM";
stat.used = "בשימוש: $0";
stat.free = "פנוי: $0";
stat.faces = "פנים";
stat.triangles = "משולשים";
stat.vertices = "קודקודים";
// quadrangular polygon (polygon with 4 sides)
stat.quads = "קוואדס";
stat.vertex = "ורטקס";
stat.scene.face = "פני הסצנה";
stat.scene.vertex = "קודקודי הסצנה";

// Brush stroke
stroke = "משיכת מברשת";
// The brush radius is either screen-space (fixed size on the screen) or world-space (fixed size in the scene)
stroke.useWorldRadius = "רדיוס במרחב העולמי";
// The settings is shared among every tools
stroke.useWorldRadius.help = "הגדרה זו משותפת לכל הכלים.";
// Share the radius value among every tools.
stroke.useShareRadius = "שתף רדיוס";
stroke.useShareRadius.help = "שתף את ערך הרדיוס בין כל הכלים.";
// When doing a brush stroke, the spacing is the distance between 2 sculpt operations
stroke.spacing = "מרווח משיכת מברשת";
// Adjust the brush intensity to ensure consistent deformation depending on the stroke spacing.
stroke.spacing.adjust = "כוונן עוצמת המרווחים";
stroke.minSpacingAdjustIntensity.help = "כוונן עוצמת המברשת להבטחת עיוות עקבי בהתאם למרווחים";
stroke.minSpacing.help = "מרווח בין כל משיכה, ביחס לרדיוס הכלי.

ערך נמוך יותר יאפשר משיכה חלקה יותר אך הביצועים יירדו.";
// Brush stroke smoothing
stroke.lazySmooth = "החלקת משיכת מברשת";
stroke.lazySmooth.help = "מוצב מיקום מצביעים מרובים כדי לקבל משיכה חלקה יותר.

בערכים גבוהים, המשיכה תפגר מאחורי המצביע אך בסופו של דבר תתפוס אותו.";
// Make the brush stroke lags behind the pointer cursor
stroke.lazyRadius = "מייצב חבל עצלן";
stroke.lazyRadius.help = "משיכות יפגרו מאחורי מיקומו של המצביע לפי מרחק מסוים.

זה יכול לשמש כדי לצייר קווים חלקים.";
// It is not a per-tool settings
stroke.globalSettings = "זו הגדרה גלובלית";
// Start the brush stroke from the last sculpted position to ensure there is no discontinuity
stroke.snapRadius = "רדיוס הצמדה";
stroke.snapRadius.help = "הדבק את המשיכה אם המצביע קרוב למשיכה האחרונה שנרשמה.

זה יכול להיות שימושי כאשר מציירים קווים רציפים ארוכים, בעודם עושים הפסקות תכופות.";
// offset between the cursor and the brush stroke (for fat finger on small screen)
stroke.sculptOffset = "היסט משיכה";
stroke.sculptOffset.help = "החל היסט קבוע על המשיכה.

אפשרות זו נמצאת כדי לסייע במסכים קטנים בעת שימוש באצבעות, כך שאצבעותיך לא יכסה את המשיכה.";
stroke.accumulate = "צבירת משיכה";
stroke.accumulate.help = "אם אפשרות זו מופעלת, אין מגבלה על כמות החומר שניתן להוסיף/להסיר בכל משיכה.";
// The tool can use DynTopo
stroke.useDynamic = "לאפשר טופולוגיה דינאמית";
// Only sculpt the part that are linked topologically
stroke.connect = "טופולוגיה מחוברת";
stroke.connect.help = "אפשרות זו תפסל רק את הקודקודים שמחוברים למשטח שנבחר.

זוהי אפשרות שנעשה בה שימוש בעיקר עם כלי ההעתקה, לדוגמה אם ברצונך להזיז חלק שמצטלב עם חלק אחר באופן ייחודי.";
stroke.connect.short = "מחובר";
// sculpt on hide or mask
stroke.protect = "הגן על האזור";
stroke.protect.hide.help = "כאשר מוגדר על אוטומטי, אם תבנית הקווים על הפנים המחביאות נראות - הפנים המחביאות יערכו (ראה תפריט תבנית הקווים).";
// Only sculpt the vertex that points toward the camera
stroke.culling = "ורטקס שפונה קדימה בלבד";
stroke.culling.help = "אפשרות זו תתעלם מוורטקסים הפונים לאחור.

 זה יכול להיות שימושי אם רוצים לצבוע חלק מגיאומטריה דקה מבלי להשפיע על הצד השני.

זה עובד גם עבור פיסול, אך ייתכן שתתקלו במעט ארטיפקטים.";
// Infinite depth, move everything under the circle, disregarding depth
stroke.silhouette = "סילואט";
stroke.silhouette.view = "תצוגה";
stroke.silhouette.snapped = "אם מקובע";
stroke.silhouette.closest = "הקרוב ביותר";
// Only sculpt the vertex that points toward the direction of the deformation
stroke.sameSide = "ורטקס באותו צד בלבד";
stroke.sameSide.help = "התעלם מוורטקסים המצביעים לכיוון מנוגד לשינוי הצורה.";
// determine normal direction
stroke.normal.direction = "";
stroke.normal.direction.help = "";
stroke.normal.direction.normal = "";
stroke.normal.direction.normal.help = "";
stroke.normal.direction.screen = "";
stroke.normal.direction.screen.help = "";
stroke.normal.direction.auto = "";
stroke.normal.direction.auto.help = "";
stroke.normal.direction.auto.threshold = "";
stroke.normal.direction.auto.threshold.help = "";
// small tip/warning
stroke.onlyLasso = "הגדרות פעילות רק לכלי הלאסו.";

// Here sampling refers to the app gathering information under the mouse
stroke.area = "דגימת שטח";
stroke.area.help = "חלק מהמכחולים או אפשרויות הקו דורשים מישור נורמלי לפני השטח כדי לעבוד.
ניתן לשלוט בחישוב המישור הממוצע על ידי קביעת אזור הדגימה כאחוז מרדיוס הכלי.

ב-100%, כל הנקודות בתוך מעגל הבחירה נלקחות בחשבון.
ב-0%, נלקח בחשבון רק הוורטקס או המשולש הקרוב ביותר.";
// Sampling radius size (percent)
stroke.area.normal.radius = "רדיוס נורמלי";
// Sampling radius size (percent)
stroke.area.point.radius = "רדיוס מיקום";
// Sampling averaging
stroke.area.normal.average = "ממוצע נורמלי";
// Sampling averaging
stroke.area.point.average = "ממוצע מיקום";
// Keep sharp edges
stroke.normalFilter = "פילטר רגיל";
stroke.normalFilter.help = "לא לכלול נקודות בעלות נורמל שונות מדי מהנורמל של המשטח.

זה ישנה כיצד מתבצעת חישוב שטח המישור (דגימת שטח).

אפשרות זו יכולה להיות שימושית עבור כלים מבוססי השטחה, או אם רוצים לצבוע משטח מישורים ללא פיזור.";

// Only paint the part of the mesh above a certain height
stroke.depthFilter = "מיסוך עומק";
stroke.depthFilter.help = "לא לכלול נקודות שעומדות או מתחת למרחק מסוים מהמישור המחושב (דגימת שטח).

לדוגמה, ניתן להשתמש בזה לצביעת גבאו או שקעו.";
stroke.depthFilter.max = "אזור עליון";
stroke.depthFilter.min = "אזור תחתון";
stroke.depthFilter.offset = "הסטת גובה";

// Invert the pixel (black <-> white)
stroke.alpha.invert = "היפוך פיקסלים";
// Repeat the alpha image (pattern)
stroke.alpha.wrap = "ריצוף";
// No repeat pattern
stroke.alpha.wrap.none = "ללא";
// Repeat the alpha in a regular manner (tiles with seams)
stroke.alpha.wrap.repeat = "חזרה";
// Repeat the alpha in a mirrored (seamless tiling)
stroke.alpha.wrap.mirror = "מראה";
// Tight fit when using tiling
stroke.alpha.fit = "התאמה הדוקה (תמונות שאינן ריבועיות)";
stroke.alpha.fit.help = "אפשרות זו רלוונטית רק אם טקסטורות ה-Alpha והמברשות אינן ריבועיות.

כאשר האפשרות מופעלת, כל תמונה תתרצף בנפרד ללא רווחים.
ניתן להשבית אפשרות זו אם רוצים לשמור על סינכרוניזציה של ה-alpha והתמונות האחרות במקרה שהיחס אינו זהה.";
// Alpha rotation
stroke.alpha.rotation = "סיבוב";
stroke.alpha.rotation.lock.help = "נעילת כיוון האלפא.

אם הסיבוב לא נעול, הכיוון יעקוב אחרי כיוון המשיכה בזמן אמת.";
// Repeat the image
stroke.alpha.tiling = "ריצוף";
// Scale the image (make it bigger or smaller)
stroke.alpha.scale = "קנה מידה";
stroke.alpha.scale.help = "בקנה מידה מינימלי, המרובע האלפא נמצא בתוך הרדיוס של מעגל הכלי.";
// Middle-point value at which no deformation occurs
stroke.alpha.midValue = "ערך אמצעי";
stroke.alpha.midValue.help = "ערך אמצע שבו לא מתרחשת התעוותות.

(ערך אמצע = 0)
• שחור: אין התקה
• לבן: התקה חיובית

(ערך אמצע = 0.5)
• שחור: התקה שלילית
• לבן: התקה חיובית

(ערך אמצע = 1)
• שחור: התקה שלילית
• לבן: אין התקה";
// Synonymous: Scatter/Jitter/Randomize
stroke.jitter = "ביזור";
// Sculpt and paint along the brush stroke at regular spacing
stroke.type.dot = "נקודה";
// Sculpt and paint along with alpha spaced by brush radius
stroke.type.roll = "גלגל";
// Sculpt and paint with alpha projected on screen stencil
stroke.type.tile = "אריח";
// Sculpt and paint with alpha projected on 3 axis
stroke.type.triplanar = "טריפלאנר";
// Sculpt continuously
stroke.type.drag = "גרור";
// Lock a region and move it around
stroke.type.grab = "תפוס";
// Lock a point of interest and sculpt it by changing the tool radius
stroke.type.grabRadius = "נעילה + רדיוס";
// Lock a region and sculpt it by changing the tool intensity
stroke.type.grabIntensity = "נעילה + עוצמה";

stroke.falloffProject = "השפעה";
stroke.falloffProject.help = "• כדור (3D)
ההשפעה מחושבת על ידי מדידת המרחק מהקודקוד למרכז המברשת.

• מעגל (2D)
הקודקוד מוקר על פני מישור האזור לפני לקיחת מרחקו ממרכז המברשת.
זוהי פעולה דומה לאופן בו דוגמים 'אלפה'.";
stroke.falloffProject.sphere = "כדור";
stroke.falloffProject.circle = "מעגל";
stroke.falloffProject.cylinder = "גליל";

// Symmetry
symmetry = "סימטריה";
symmetry.enable = "מופעל";
symmetry.primitiveWarning = "סימטריית מברשת זמינה רק עבור פרימיטיביים שאושרו, למעט הטריפלנר.";
symmetry.plane.title = "מטוסים";
symmetry.toolIgnore = "הכלי הנוכחי מתעלם מסימטריה.";
// Instead of planar symmetry, use a radial symmetry
symmetry.radial.title = "רדיאלי";
symmetry.radialX = "רדיאלי X";
symmetry.radialY = "רדיאלי Y";
symmetry.radialZ = "רדיאלי Z";
// A warning indicating that we limit the number of repetitions ($0 is a number)
symmetry.limited = "מספר החזרות מוגבל ל-$0!";
// Synonym: Offset
symmetry.offset.title = "היסט";
symmetry.offsetX = "היסט X";
symmetry.offsetY = "היסט Y";
symmetry.offsetZ = "היסט Z";
// Number of clones
symmetry.count.title = "ספירה";
symmetry.countX = "ספירה X";
symmetry.countY = "ספירה Y";
symmetry.countZ = "ספירה Z";
// method
symmetry.method = "שיטה:";
symmetry.method.help = "• מקומי
מישור הסימטריה ינוע יחד עם ה'מֵש' בעת שימוש באחד הכלים להמרה (Gizmo או Transform).

• גלובלי
מישור הסימטריה קבוע ולא ינוע.";
// Local means: in the coordinate of the scene (synonym: absolute)
symmetry.method.world = "עולם";
// Local means: in the coordinate of the object (synonym: relative)
symmetry.method.local = "מקומי";
// Move the object to the other side of the symmetry (mirror it as well)
symmetry.flip = "הפוך אובייקט";
// Cut half of the mesh
symmetry.cut = "d";
// after mirroring, separate into multiple output (synonym: split, separate)
symmetry.split = "פָּצַל";
// Reapply the mesh mirror, does not impact the topology
symmetry.mirror = "שיקוף";
symmetry.mirror.help = "נסה ליישם מחדש את הסימטריה מבלי להשפיע על הטופולוגיה.

הסימטריה הרדיאלית תתעלם.

אם לא ניתן לשמור על הטופולוגיה כיוון שאינה נחשבת לסימטרית, תינתן לכם אפשרות להפעיל את השיקוף בכוח.";
// indicate that applying the mirror will keep the mesh topology
symmetry.mirror.keepTopology = "שמור על טופולוגיה";
symmetry.mirrorFail = "לא הצליח לזהות סימטריה.

האם ברצונכם לכפות סימטריה באמצעות שיקוף של הרשת?";
symmetry.mirrorUseMasking = "שמור על האזור המסומן";
symmetry.mirrorUseMasking.help = "שמור על האזור המסומן שלם.

אפשרות זו תתעלם בטופולוגיה לא סימטרית (או משטח מנותק, כמו זוג עיניים).";
// Reset the symmetry plane position
symmetry.reset = "אפס";
// Reset the symmetry plane positon to the object center
symmetry.reset.centerMesh = "מרכז אובייקט";
// Reset the symmetry plane positon to the scene (world) center
symmetry.reset.centerWorld = "מרכז עולם";
// Reset the symmetry plane orientation
symmetry.reset.direction = "כיוון";
// Display a line on the object (to show where the symmetry lies)
symmetry.showLine = "הצג קו";
// Display the symmetry plane in 3D
symmetry.showPlane = "הצג מישור";
// Allow the editing of the symmetry plane with the gizmo
symmetry.edit = "עריכת גיזמו";
symmetry.edit.warning = "עריכת סימטריה היא ניסיונית.";
symmetry.edit.help = "ניתן לעצב את מישור הסימטריה בחופשיות.

תכונה זו היא ניסיונית, ואולי לא כדאי להשתמש בה כלל.";

// Ideally <10 chars
tool.dynamic = "DynTopo";
// Ideally <10 chars (Symmetry)
tool.symmetry = "סימ";
// Ideally <10 chars (Mirror primitive)
tool.mirror = "מראה";
// Ideally <10 chars
tool.clay = "חימר";
// Ideally <10 chars (Subtract)
tool.clay.sub = "חסר";
// Ideally <10 chars
tool.brush = "מברשת";
// Ideally <10 chars
tool.move = "העבר";
// Ideally <10 chars (Normal vector, perpendicular to surface)
tool.move.normal = "רגיל";
// Ideally <10 chars
tool.drag = "גרירה";
// Ideally <10 chars (Smooth the surface by erasing the details)
tool.smooth = "החלקה";
// Ideally <10 chars (Tries to smooth the topology by making the polygons more regular)
tool.smooth.relax = "רוגע";
// Ideally <10 chars (Paint mask)
tool.mask = "מסכה";
// Ideally <10 chars
tool.mask.unmask = "הסר מסכה";
// Ideally <10 chars (Selector Mask, use lasso/ellipse,etc shape to mask the mesh)
tool.maskSelector = "בחר מסכה";
// Ideally <10 chars (Smudge the paint of the object)
tool.smudge = "מריחה";
// Ideally <10 chars (Flatten the surface)
tool.flatten = "החלק";
// Ideally <10 chars (Flatten the surface, more strongly than Flatten)
tool.planar = "רָווֹה";
// Ideally <10 chars (Flatten the surface by offsetting the surface in the opposite direction)
tool.flatten.fill = "מִלֵא";
// Ideally <10 chars (Layer brush)
tool.layer = "שכבה";
// Ideally <10 chars
tool.crease = "קוֹמֵץ";
// Ideally <10 chars (Cut part of the mesh cleanly)
tool.trim = "חתוך";
// Ideally <10 chars (Cut part of the mesh cleanly into two separate meshes)
tool.split = "פָּצַל";
// Ideally <10 chars (Project part of the object onto a curve)
tool.project = "השלכה";
// Ideally <10 chars
tool.inflate = "נֵפַח";
// Ideally <10 chars
tool.pinch = "צְבִיטָה";
// Ideally <10 chars
tool.nudge = "נְעִימָה";
// Ideally <10 chars
tool.stamp = "חותם";
// Ideally <10 chars (Delete Layer, a tool that can cancel the Layer deformation/paint)
tool.clearLayer = "מחק שכבה";
// Ideally <10 chars (Select multiple objects with a lasso tool)
tool.select = "בחר";
// Ideally <10 chars (Rotate, Translate and Scale the object)
tool.gizmo = "גיזמו";
// Ideally <10 chars
tool.gizmo.editPivot = "נקודת ציר";
// Ideally <10 chars (Snap angle)
tool.gizmo.rotateSnap = "נטייה";
// Ideally <10 chars (Snap translation)
tool.gizmo.moveSnap = "הצמד";
// Ideally <10 chars (Local/Relative space)
tool.gizmo.local = "איזור";
// Ideally <10 chars (Align/Snap the gizmo to world axis)
tool.gizmo.align = "יישור";
// Ideally <10 chars (Pin the gizmo, so that it stays in place when switching between objects)
tool.gizmo.pin = "יַתֵד";
// Ideally <10 chars (Rotate, Translate and Scale the object)
tool.transform = "המרה";
// Ideally <10 chars (Translate the object)
tool.transform.move = "לְהַעבִיר";
// Ideally <10 chars (Rotate the object)
tool.transform.rotate = "לַחְזוֹר";
// Ideally <10 chars (Scale the object)
tool.transform.scale = "משרעת";
// Ideally <10 chars (Snap the object on another object surface)
tool.transform.snap = "הצמד";
// Ideally <10 chars (Measure distance between 2 points)
tool.measure = "מדידה";
// Ideally <10 chars (Lattice, deformer)
tool.lattice = "חדירה";
// If an option is shared among the tools
tool.all = "הכל";
// Ideally <10 chars (Quad Remesher)
tool.remesh = "Quad Remesher";
tool.remesh.guides = "מדריכים";
tool.remesh.density = "רוּחַ מִחוּץ";
tool.remesh.same = "אותו דבר";
tool.remesh.half = "חצי";
// Ideally <10 chars (FaceGroup)
tool.faceGroup = "קבוצת פָּנִים";
tool.faceGroup.autoPick = "אוטו-בחירה";
tool.faceGroup.flush = "הוצא לא בשימוש";
tool.faceGroup.skip = "דלג על קבוצות קטנות בהתבסס על:";
tool.faceGroup.skipFace = "מספר הפנים";
tool.faceGroup.skipFace.help = "אל תיצור קבוצה חדשה אם מספר הפנים קטן או שווה לסף זה.";
tool.faceGroup.skipArea = "שטח פנים";
tool.faceGroup.skipArea.help = "אל תיצור קבוצה חדשה אם שטח הפנים של הקבוצה החדשה קטן מסף זה.

הסף ניתן כאחוז מהשטח הכללי של האובייקט.";
// Ideally <10 chars (Hide)
tool.hide = "לְהַסתִיר";
// Ideally <10 chars (View tool, do nothing in particular)
tool.view = "לִרְאוֹת";
// Ideally <10 chars (Revolving surface along a line)
tool.lathe = "מֵחֵלֶק";
// Ideally <10 chars (Revolving surface along a curve)
tool.tube = "צִנוֹר";
// Ideally <10 chars (Insert object into the scene)
tool.insert = "הַכְנָסָה";
// Ideally <10 chars (Flip/Invert/Negate the shape)
tool.shape.flip = "הפוך";
// Ideally <10 chars (No shape selected, same as Camera mode, does nothing in particular)
tool.shape.view = "צפו";
// Ideally <10 chars (Lasso selection)
tool.shape.lasso = "לַאסו";
// Ideally <10 chars (Curve selection, same as Lasso and it's an open shape)
tool.shape.curve = "קָרוֹב";
// Ideally <10 chars (Polygon selection, same as Lasso but with more precision)
tool.shape.polygon = "רָבוּעַ";
// Ideally <10 chars (Path selection, same as Lasso but with more precision and it's an open shape)
tool.shape.path = "שביל";
// Ideally <10 chars (Rectangular selection)
tool.shape.rectangle = "מלבן";
// Ideally <10 chars (Ellipse selection)
tool.shape.ellipse = "Qultipalis";
// Ideally <10 chars (Line selection, split the screen in half)
tool.shape.line = "קו";
// Ideally <10 chars (Whether a shape is closed or not, a tube is open, a torus is closed)
tool.shape.closed = "סָגוּר";

// Radius of the tool (size)
tool.radius = "קוֹטֶר";
// Intensity of the tool (force)
tool.intensity = "עָצְמָה";

tool.settings = "הגדרות";
tool.settings.none = "לכלי זה אין הגדרות ספציפיות.";

tool.crease.pinchFactor = "גורם צביטה";
tool.crease.offsetFactor = "גורם היסטה";

tool.layer.removeInfluence = "השתמש בנתוני השכבה";
tool.layer.removeInfluence.help = "אפשרות זו פעילה רק כאשר שכבה נבחרת.

היא תשתמש בנתוני השכבה כדי להגביל את ההחלפה על קווים.";
tool.layer.noLayerSelected = "אפשרות זו זמינה רק אם שכבה נבחרה";

tool.flatten.planeLockOrigin = "נעל את מוצא המישור";
tool.flatten.planeLockNormal = "נעל את כיוון המישור";

// Option for Tube, Lathe and Insert tool
tool.syncInstance = "סנכרון";
tool.syncInstance.message = "האובייקט החדש יתווסף לכל הדגמים האחרים!";

// The vertex on the border of the mesh will stay still even if we try to smooth the border
tool.smooth.stickyBorder = "קודקוד דביק בגבול";
tool.smooth.screen = "חלקות מסך";
tool.smooth.screen.help = "השתמש באפשרות זו כדי לקבל חלקות שאינה תלויה בטופולוגיה, גם בפוליגרף גבוה.";
tool.smooth.screen.samples = "דוגמאות מסך";
tool.smooth.stable = "החלקה יציבה";
tool.smooth.stable.help = "מנסה להפוך את ההחלקה בלתי תלויה בטופולוגיה.

 מצבים זה עובד טוב ביותר עם צפיפות טופולוגיה משתנה ועם ערך עוצמת החלקה גבוהה.";

tool.paint = "צבע";
// Erase the painting
tool.paint.erase = "מחק";
// Only paint the part of the mesh that was already painted in the layer (repainting)
tool.paint.layerFilter = "סינון שכבות";
tool.paint.layerFilter.help = "השתמש באפשרות זו אם אתה רוצה לצבוע מחדש את האזור שכבר נצבע בשכבה.";

// Clear the painted mask
tool.mask.clear = "נקה";
tool.mask.clearAll = "נקה הכל";
// Invert the painted mask
tool.mask.invert = "הפוך";
// Mask or Unmask a region (leave other region that unconnected intact)
tool.mask.flipConnected = "הפוך מסכה (מחובר)";
// Blur the painted mask
tool.mask.blur = "טשטוש";
// Sharpen the edge of the painted mask area
tool.mask.sharpen = "חידוד";
// Transform/Matrix
tool.matrix = "מטריצה";
// The target of the transform is either the Matrix or the Vertex of the object
tool.matrix.target = "מטרה";
// Automatic
tool.matrix.target.auto = "אוטומטי";
tool.matrix.target.auto.help = "ברירת המחדל תעבוד בדומה לאפשרות קבוצה.
אם לרשת יש מסיכה או אם הסימטריה מופעלת, זה יעבוד כמו צומת.";
// Auto apply the transform on the vertices
tool.matrix.target.vertex = "קודקוד";
tool.matrix.target.vertex.help = "נסה ליישם את השינוי על הצמתים, הוא לא יעבוד על פרימיטיבים שלא אומתו.
גם מופעים יושפעו.";
// Transform the object alone (the children stands still)
tool.matrix.target.object = "אובייקט";
tool.matrix.target.object.help = "הזז רק את האובייקט, תוך התעלמות מסימטריה ומסיכה.
רק הצומת הערוך יזוז, הילדים ייוותרו במקומם.";
// Transform the object and its children
tool.matrix.target.group = "קבוצה";
tool.matrix.target.group.help = "הזז את הצומת, תוך התעלמות מסימטריה ומסיכה.
גם שאר ההיררכיה תשתנה.";
// Operation on the mesh
tool.matrix.action = "פעולה";
tool.matrix.action.origin = "הזז מקור";
tool.matrix.action.origin.help = "הזז את המערכת למקור העולם.";
tool.matrix.action.bake = "אפיה";
tool.matrix.action.bake.help = "החל את המטריצה על הוורטקס ואתחל את המטריצה. מבחינה ויזואלית, לא צריך להשתנות כלום.";
tool.matrix.action.reset = "אתחל";
tool.matrix.action.reset.help = "אתחל את המטריצה במערכת זהות.";

// Synonym: shear, https://en.wikipedia.org/wiki/Shear_matrix or https://en.wikipedia.org/wiki/Shear_mapping
tool.matrix.skew = "חיתוך";
tool.matrix.translation = "תרגום";
tool.matrix.rotation = "סיבוב";
tool.matrix.scale = "קנה מידה";
tool.matrix.uniformScale = "קנה מידה אחיד";

tool.transform.tip = "טפיחה בודדת עם אצבע שניה לשינוי מצב";

// Size of the gizmo
tool.gizmo.size = "גודל גיזמו";
// If true, there is less spacing between gizmo handlers (rotate, scale, etc)
tool.gizmo.compact = "קומפקטי";
// When enabled, tapping one the gizmo widget will open a numerical input popup
tool.gizmo.allowInput = "קלט מספרי";
tool.gizmo.allowInput.help = "התירו קלט מספרי בלחיצה על אחד ממכשירי ה-Gizmo.";
// Angle threshold
tool.gizmo.linearRollThreshold = "סף גלגול המשיק";
tool.gizmo.linearRollThreshold.help = "סף הזווית לבחירה בין שיטת גלגול קווית או מעגלית.

ערך מעל סף זה יאמץ את הגלגול המעגלי.

אם אתם מעדיפים את הגלגול הקווי (כיוון המגע), הגדירו ערך זה ל-90°.";
// Partially hide/fade the gizmo when we interact with it
tool.gizmo.autoHide = "להסתיר בעת אינטראקציה";
tool.gizmo.tap = "בלחיצה אחת";
tool.gizmo.tap.help = "האפשרות הזו שולטת כיצד להזיז את הציר כאשר לוחצים פעם אחת על משטח הרשת.";
tool.gizmo.tap.none = "אין";
tool.gizmo.tap.none.help = "שום דבר לא קורה כאשר לוחצים על הרשת.";
tool.gizmo.tap.normal = "רגיל";
tool.gizmo.tap.normal.help = "הזז את הגיזמו על הצומת הראשון והתאם אותו בהתאם לנורמל השטח.";
tool.gizmo.tap.first = "ראשון";
tool.gizmo.tap.first.help = "הזז את הגיזמו על הצומת הראשון.";
tool.gizmo.tap.medial = "בינוני";
tool.gizmo.tap.medial.help = "הזז את הגיזמו למרכז היופי של החיתוך הראשון עם השני.";

// The lathe generator is a vertical line and cannot be rotated
tool.lathe.axisFixed = "קבוע";
tool.lathe.axisOnly = "ציר בלבד";
tool.lathe.stable = "יציב";
tool.lathe.axis = "ציר";

// Fill the object's hole
tool.hole = "מילוי חורים";
tool.hole.fillHoles = "מלא חורים";
// synonym: Alternative method
tool.hole.method.fill = "מלא";
tool.hole.method.legacy = "לֶגַסִי";
tool.hole.method.boolean = "בוליאן";
tool.hole.bridges = "בוליאן במרחב המסך";
tool.hole.bridges.help = "אם אפשרות זו מופעלת, ניתן ליצור חורים בנפח.
השיפוע החיתוכי יתאים עצמו בצפיפות רבה יותר לצורת החיתוך.";
tool.hole.threshold = "סף אפסילון";
tool.hole.threshold.help = "התאמת ערך זה עשויה לעזור לאלגוריתם המילוי.";
tool.hole.smoothing = "החלקת חור";

tool.smudge.quality = "איכות";
tool.smudge.quality.help = "שינוי ערך זה משנה את רזולוציית הפיקסלים המוקרנים; ערכים נמוכים יותר משמעם תנועות מהירות יותר.";

// Shape for the tools: Trim / Split / Project / SelMask
tool.shape = "צורה";
// Auto-validate the drawn shape
tool.shape.autoValidate = "אימות אוטומטי";
// Force the rectangle selection to be a square
tool.shape.rectangleSquare = "מרובע";
// The selection rectangle will be centered around the cursor
tool.shape.rectangleCentered = "מרוכז";
// Force the ellipse selection to be a circle
tool.shape.ellipseCircle = "מעגל";
// The selection ellipse will be centered around the cursor
tool.shape.ellipseCentered = "מרוכז";
// Rotate by step (angle value)
tool.shape.lineRotateStep = "שלב סיבוב";

// Show a yellow dot on the golden ratio point
tool.measure.goldenRatio = "יחס זהב";
// volume of a mesh
tool.measure.volume = "נפח";
// Surface of a mesh
tool.measure.surface = "שטח פנים";

// Always display the camera shortcut buttons on the viewport
tool.view.stickyCamera = "קיצור למצלמה (תמיד)";

// Topology
topology = "טופולוגיה";
// Synynom: detail value, density
topology.dynamic.detail = "פרטים";
// See glossary
topology.multires = "מולטירזולוציה";
topology.multires.help = "שמור מספר רזולוציות של רשת.

אם תבצע שינויים ברזולוציה נמוכה, הפרטים מהרזולוציות הגבוהות יותר יופנה מחדש כשתחזור.

השכבות זמינות בכל רזולוציה.";
// Synonym: Unsubdivide, Un-subdivide
topology.multires.reverse = "הפוך";
topology.multires.reverse.confirm = "לא ניתן ליצור תת-חלוקה בסיסית.

הטופולוגיה הנוכחית כנראה אינה תוצאה מתת-חלוקה.";
topology.multires.subdivide = "תת-חלוקה";
topology.multires.subdivide.confirm = "לMesh יהיו $0M צומתים, האם אתה בטוח?";
// Prevents the user from subdivide the object again, a warning is displayed (with a UI link to increase this limit)
topology.multires.subdivide.limit = "עלהת גבלת התת-חלוקה, ראה $0";
topology.multires.deleteLower = "מחק תחתון";
topology.multires.deleteHigher = "מחק עליון";
topology.multires.keepTriangles = "שמור את המשולשים";
topology.multires.lock = "נעילה (רמה 0)";
// Navigate toward multiple resolutions (go to higher level)
topology.multires.up = "רמת Multiresolution →";
// Navigate toward multiple resolutions (go to lower level)
topology.multires.down = "רמת Multiresolution ←";
// Synonym: Flat subdivision
topology.multires.linear = "תת-חלוקה לינארית";
topology.multires.linear.help = "בצע תת-חלוקה על הרשת ללא יישום איזון";
// Only show the lowest resolution wireframe
topology.multires.minWireframe = "רק רמה 0";
// Create a new object by recomputing a new topology
topology.remesh = "Remesh";
// Create a new object by recomputing a new topology, by using voxels (see Glossary)
topology.voxel = "Voxel remeshing";
topology.voxel.help = "חידוש רשת על ידי דגימה שלה על מסגרת.

אם האובייקט אינו סגור (אטום למים), תתבצע קודם אלגוריתם למילוי חורים.

השכבות יופנו מחדש לאחר החידוש אך האיכות תדרדר.";
topology.voxel.resolution = "רזולוציה";
topology.voxel.sharp = "שמור קצוות חדים";
topology.voxel.sharp.help = "אפשרות זו מועילה בעיקר עבור פעולות בוליאניות פשוטות.

היא תגרום לעיוות באזורים מסוימים עקב הצמדת נקודות לקצוות.";
topology.voxel.subLevel = "בנה multiresolution";
topology.voxel.subLevel.help = "ניתן לבנות מחדש היררכית רב-רזולוציה מהפלט של רימשן הווקסלים.

זה גם יפעל מהר יותר וישתמש בפחות זיכרון, במיוחד אם ערך פרטי הווקסלים גבוה.
עם זאת, אם ערך פרטי הווקסלים נמוך ואתם מבקשים מספר רב של רמות רב-רזולוציה, תאבדו פרטים.";
// Dynamic topology (DynTopo)
topology.surface.remesh = "רימש";
topology.surface.detail = "פרטים";
topology.surface.detail.help = "בניגוד לרימשן של ווקסלים, רימשן המשטחים לא דורש שהרשת תהיה סגורה.

ניתן גם לתמוך במסכות כך שתוכל להגן על חלק מהרשת מפני שינויים בטופולוגיה.

השכבות מעודכנות בצורה נכונה.";
topology.surface.method = "שיטה";
// Uniformisation means we can both add and remove triangles/quads
topology.surface.method.uniformisation = "אחידות";
// We can only add triangles/quads (synonym: Refine)
topology.surface.method.subdivision = "חלוקה";
// We can only remove triangles/quads (synonym: Simplify)
topology.surface.method.decimation = "צמצום";
topology.surface.method.help = "התנהגות של טופולוגיה דינמית:
• אחידות: הוספה והסרה של פרטים
• תת-חלוקה: הוספת פרטים
• הפחתה: הסרת פרטים";
topology.surface.useMasking = "הגנת אזור המסכה";
topology.surface.useMasking.help = "האזורים המכוסים במסכה יגנו על הטופולוגיה משינויים.";
topology.surface.extrapolate = "האקסטרפולציה של קודקודים";
// DynTopo
topology.dynamic = "טופולוגיה דינמית";
topology.dynamic.global = "גלובלי פועל/כבוי";
topology.dynamic.activate = "מופעל";
topology.dynamic.activate.help = "עם טופולוגיה דינמית, כלי עיצוב יכולים לחלק או לפשט את הרשת המקומית בזמן אמת.

לתכונה זו עשוי להיות השפעה מורגשת על הביצועים.

השכבות מעודכנות בצורה נכונה.";
topology.dynamic.method = "פרטים מבוססים על...";
topology.dynamic.method.screen = "מסך";
topology.dynamic.method.radius = "רדיוס";
topology.dynamic.method.constant = "מקובל";
topology.dynamic.method.help = "• זום
רמת הפרטים מבוססת על המרחק שלך מהמשטח.

• רדיוס
רדיוס הכלי קובע את כמות הפרטים.

• קבוע
הפרטים קבועים, הערך משתף גם עם מחוון ווקסל.";
topology.dynamic.quality = "העדפה...";
topology.dynamic.quality.help = "אם תבחר באיכות, ההבדלים העיקריים הם:
• שיפור מוחל לפני האופרציית הפיסול, תקבל פחות חפצים שגורמים להפרעה בזמן ציור או פיסול פרטים קטנטנים.
• השיפור אינו מוחל בהדרגה, אם תפסל פרטים קטנים מאוד או תעשה משיכות מהירות, הטופולוגיה תמיד תעדכן כהלכה.";
topology.dynamic.quality.speed = "מהירות";
topology.dynamic.quality.quality = "איכות";
// Whether the pencil pressure can impact the level of detail
topology.dynamic.usePressure = "השימוש בלחץ על הרדיוס";
topology.dynamic.usePressure.help = "השתמש באפשרות זו אם ברצונך שהשפעת לחץ העט על רעיוס הכלי תושפע לרמה של פרטים.";
topology.dynamic.useFalloff = "שימוש בשיפוע הצקו";
// Decimate
topology.decimate.title = "צמצום";
topology.decimate.title.help = "צמצום מספר הפוליגונים תוך שמירה על כמה שיותר פרטים.

תכונה זו עשויה להיות שימושית אם אתה רוצה לייצא להדפסה בתלת מימד.
עם זאת, כדאי להימנע משימוש בתכונה זו אם ברצונך להמשיך לפסל עליה, מכיוון שהיא עלולה ליצור משולשים לא אחידים.

שים לב שהחלק המכוסה לא יצומצם.";
// Synonym: Simplify (Decimate reduce the number of triangles/quads while retaining details as much as possible)
topology.decimate = "צמצם";
topology.decimatePaintWeight = "שמור על הצביעה";
topology.decimatePaintWeight.help = "ערך גבוה יותר ינסה לשמור על הצביעה.

קבע ערך זה ל-0 אם אינך מודאג מהצביעה.";
topology.decimateUniform = "פנים אחידות";
topology.decimateUniform.help = "ערך גבוה יותר ייצור משולשים בגודל דומה.";
topology.decimatePreserveBorders = "שמור על הקצוות";
topology.decimatePreserveBorders.help = "אל תצמצם את גבול המֵש.";
// Target a certain number of triangles, faces and vertices
topology.target.triangles = "משולשים מטרה";
topology.target.faces = "פנים מטרה";
topology.target.quads = "ריבועים מטרה";
topology.target.points = "נקודות מטרה";
// Quad remesher
topology.qremesh = "הסרת ריבועים";
topology.qremesh.angle = "זווית חרשף";
topology.qremesh.border = "שמור על הקצוות";
topology.qremesh.onlyQuad = "רק ריבועים";
topology.qremesh.hole = "חיבור חורי מקסימום";
topology.qremesh.hole.help = "האלגוריתם עלול ליצור חורים לא רצויים לפעמים.

אם לחור יש פחות קודקודים מהערך הזה, הוא יתמלא.";

// Unwrapping means compute UV (texture coordinates), with uvs you can appliy (wrap) a texture onto the model
topology.uv.title = "פירוק UV";
// UV Unwrap but as a Verb
topology.uv.unwrap = "פרוס";
// The operation can be very slow
topology.uv.atlas.warning = "יכול להיות איטי מאוד, היעד <100k קודקודים!";
// Handles are topological holes (synonym: genus, hole)
topology.uv.bff.warning = "עשוי להיות חפיפות אם יש למֵש ידיות!";
// Solo patch
topology.uv.bff.seamless = "טלאים ללא תפרים";
topology.uv.bff.seamless.help = "אפשרות זו יכולה להכניס עיוות משמעותי.

בדרך כלל, היא ניתן לשימוש כאשר קבוצות פנים מוגדרות בזהירות.";
// Synonym: Point count? Singularity count ?
topology.uv.bff.cones = "ספירת קונוסים";
topology.uv.bff.help = "ערך גבוה יותר יקטין עיוות לעצמים מורכבים.

ערך גבוה יותר ידרוש זמן חישוב ארוך יותר.";
topology.uv.delete = "מחק את ה-UVs";

// Transfer the vertex painting in the texture, bake means "create texture (from mesh data)"
topology.bake.title = "הִתבַּצלות";
// Bake here means "create texture (from mesh data)"
topology.bake.title.help = "אפיית טקסטורות תיצור טקסטורות על ידי הקרנת אובייקטים אחרים שנראים בסצנה.

הנה זרם העבודה האופייני לאפייה:
• יש לך רשת עם פרטים עדינים וצבע
• שכפל אותה
• דלל אותה (הגדר 'שמור צבע' ל-0!)
• דלג את ה-UV
• אפה!

עליך להיות כעת עם רשת ברזולוציה נמוכה ששומרת על רוב הפרטים והצבע של האובייקט הקודם שלך.

לאחר הפעולה, צבעי הקודקוד יועברו לשכבה חדשה בטלה, כך שיזנחו במקום להכפיל נגד הטקסטורה הצבעונית.

כדי לבחור אילו אובייקטים ישמשו לאפייה, יחול ההיגיון הבא:
- כל האובייקטים שנבחרו והאובייקט הנבחר הראשי יאפו (הדגשה חזקה ביותר בתפריט הסצנה)
- אם יש אובייקט אחד בלבד שנבחר, Nomad יחשב את כל האובייקטים הגלויים
- אם כל האובייקטים מוסתרים (למשל על ידי שימוש ב-Solo), הסצנה כולה תילקח בחשבון";
// Bake here means "create texture (from mesh data)"
topology.bake.self = "ממנו עצמו";
// Bake here means "create texture (from another mesh data)"
topology.bake.other = "מהרזולוציה הגבוהה";
topology.bake.resolution = "רזולוציה";
// Cage is a specific term, synonyom: "Bake offset"
topology.bake.offset = "היסט קרן";
topology.bake.radius = "רדיוס כלוב";
// Bake opacity (from mask data)
topology.bake.opacityFromMask = "מסכה -> אטימות";
topology.bake.backup = "גיבוי";

// project a high resolution mesh details onto another
topology.reproject.title = "השלכה מחדש";
topology.reproject.title.help = "השלך פרטי גילוף, ציור ושכבות מהאובייקטים הנראים הקרובים ביותר.

 מחשב לשימוש גם ברשת בעלת רזולוציה גבוהה, בדרך כלל עם טופולוגיה נקייה.";
// tweaking value
topology.reproject.rayBias = "הטיית קרן";
topology.reproject.rayBias.help = "שתי שיטות משמשות לרה-פרויקטציה:
• הקרובה ביותר: הנקודה הקרובה ביותר על המשטח
• קרן: נקודת ההצטלבות דרך הכיוון הנורמלי

ערכי הטיה גבוהים יותר ייטו להעדיף הצטלבות הקרן במקום המשטח הקרוב ביותר.";
topology.reproject.normalOffset = "היסט רגיל";
topology.reproject.shpereCast = "נפילת קרן ספירה";
topology.reproject.shpereCast.help = "אם רה-פרויקטציה של קרן נורמלית נכשלת, Nomad יעבור להצטלבות השטח הקרוב ביותר.";
// number of iteration the algorithm will take
topology.reproject.iterations = "איטרציות";
topology.reproject.relax = "הרפה";
topology.reproject.relax.help = "יש להעדיף הרגעות כאשר הרשת היא נמוכה פוליגרף.";
topology.reproject.layers.help = "העבר שכבות אחרות לרשת שנבחרה.";

topology.manifold = "רב גוניות";
topology.nonManifold = "לא רב גוניות";
topology.manifold.clean = "נקה";
topology.manifold.collapse = "מחק פנים קטנות";
topology.manifold.title = "כפה רב גוניות";
topology.manifold.title.help = "ניסית לנקות קצוות לא רב גוניות.

 זה יכול להיות שימושי עבור תוכנות חיצוניות שלא תומכות בקצוות שיש להם יותר משני פנים משותפים.";

// Reset key-bindings/shortcuts
binding.reset = "אפס חיבורים";
// Add node in a sync mode (synchronize instance)
binding.addSync = "סנכרון";
binding.addSync.help = "כברירת מחדל, הוא ישתמש בערך הסינכרון שנקבע בתפריט הסצנה.";
// Binding option
binding.context.toggle = "החלף הקשר";
binding.toggleTool = "החלף קיצורי דרך לכלים";
binding.toggleTool.help = "בעת שימוש באחד מקיצורי הדרך של הכלים, הכלי הקודם ייבחר אם כלי קיצורי הדרך הנוכחי פעיל.";
// When the key is tap once, the value will be toggled
binding.toggleTap = "הפעל קיצור עם לחיצת מקש.";
// The binding force camera movement
binding.forceCamera = "שליטה במצלמה";
binding.forceCamera.help = "כפה אינטראקציה עם המצלמה במקרה של סתירה עם קשר אחר.

זה יכול לקרות אם אותו הקשר מוקצה לכלי קיצורי או הוספה/חיסור.";
// Same as Color Picker but it pick the material (color, roughness, metalness, etc)
binding.pickMaterial = "בחירת חומר";
// Same as Color Picker but it pick the material (color, roughness, metalness, etc)
binding.pickFaceGroup = "בחירת קבוצת פנים";
// Edit the tool brush size/radius
binding.editRadius = "רדיוס כלי";
// Edit the tool brush size/radius
binding.editIntensity = "עוצמת כלי";
// Controller dead zone
binding.joystick = "ג׳ויסטיק";
binding.controller.deadZone = "אזור מת של הבקר";
binding.controller.deadZone.help = "העלה ערך זה אם המצלמה נעה, אפילו אם מקלון הבקר נותר ללא מגע.";
// Snap the camera
binding.view.front = "מבט קדמי";
binding.view.left = "מבט שמאלי";
binding.view.top = "מבט עליון";
// Move/Translate the view
binding.pan.left = "הזז שמאלה";
binding.pan.right = "הזז ימינה";
binding.pan.forward = "תזוזה קדימה";
binding.pan.backward = "תזוזה אחורה";
binding.pan.up = "תזוזה למעלה";
binding.pan.down = "תזוזה למטה";
// Snap the view (while rotating)
binding.snapViewOnRotate = "הצמדת תצוגה (בעת סיבוב)";
// Open a Nomad internal project (replace current scene)
binding.project.open = "פתח (פרויקט)";
// Open a Nomad internal project (add it to the current scene)
binding.project.add = "הוסף (פרויקט)";
// Select all the objects in the scene
binding.selectAll = "בחר הכל";
// Rotate environment and the lighting
binding.rotateLighting = "סובב תאורה";
// The Camera pivot is the point around which the camera rotates
binding.updatePivot = "עדכן נקודת סיבוב...";

quadremesh.adaptQuadCount = "ספירת ריבועים מתאימה";
quadremesh.curvatureAdaptivness = "גודל מסתגל";
quadremesh.curvatureAdaptivness.help = "ב-100%, גודל הקוואד ישתנה בהתאם לעקומת האובייקט, ויאפשר קוואדים קטנים יותר בעקומה גדולה.
ב-0%, גודל הקוואד יהיה אחיד.";
quadremesh.useVertexColors = "שמור על הצביעה";
quadremesh.autoDetectHardEdges = "זיהוי אוטומטי לשוליים חדים";
quadremesh.autoDetectHardEdges.short = "קצוות חזקים";
quadremesh.reprojectVertex = "שחזור צומת";
quadremesh.reprojectVertex.short = "שחזור צומת";
quadremesh.reprojectVertex.label = "כאשר מופעל, Nomad תחזור את המיקום על המשטח הקודם. שים לב שאם המשטח כולל שכבות, השחזור תמיד יופעל.";

// Privacy policy
privacyPolicy.title = "מדיניות פרטיות";
privacyPolicy.reject = "דחה";
// Hexanomad is the company name
privacyPolicy = "Hexanomad אינה אוספת נתונים מתוך Nomad Sculpt.";

sonar.disconnect = "נתק את SonarPen";
sonar.connect = "חבר את SonarPen";
sonar.connect.confirm = "לחבר את SonarPen?";
sonar.connect.confirm.warning = "Sonar pen ישתמש במיקרופון (לוּפְבָּק אודיו) לאיתור לחץ העט.";

// Color disc mode
widget.color.disc = "דיסק";
widget.color.ring = "טבעת";
widget.color.square = "מרובע";

nomad.mainFolder = "תיקייה ראשית של Nomad";
nomad.mainFolder.warning = "הקבצים נשארים ללא פגע. 
הם לא מועתקים, נמחקים או מועברים.";
nomad.mainFolder.error = "לאחר שתבחר כן, Nomad ייסגר ותוכל להפעיל אותו מחדש בקלות.";

license.title = "רישיון";
license.retry = "נסה שוב";
license.key = "מפתח רישיון";
license.activate = "הפעל רישיון";
// ----------------------------------------------
license.newest = "גרסה חדשה זמינה!";
license.encrypt.error = "לא ניתן להצפין!";
// ----------------------------------------------
license.grace = "לא מקוון - תקופת החסד שנותרה:";
license.grace.hours = "שעות";
license.grace.days = "ימים";
// ----------------------------------------------
license.portal.title = "משתמשים קיימים";
license.portal.label = "פורטל רישיון";
// ----------------------------------------------
license.checkout.title = "משתמשים חדשים";
license.checkout.label = "רכישת Nomad";
// ----------------------------------------------
license.device.error = "לא ניתן היה לקבל את מזהה המכשיר.";
license.device.mismatch = "קוד מזהה מכשיר לא מתאים!";
// ----------------------------------------------
license.error429 = "יותר מדי בקשות (המתן).";
// ----------------------------------------------
license.validate.error404 = "מפתח הרישיון לא נמצא.";
license.validate.error422 = "ישות בלתי ניתנת לעיבוד.";
// ----------------------------------------------
license.activate.error403 = "הגעת למספר המכשירים המקסימלי!
אתה יכול לבטל את הפעלת מכשיר אחר בפורטל הרישיון שלך.";
license.activate.error404 = "מפתח הרישיון לא נמצא.";
license.activate.error422 = "ישות בלתי ניתנת לעיבוד.";
// ----------------------------------------------
// version
version.update = "עדכון זמין!";
version.restore = "שחזר רכישה";
version.buyWeb = "גרסת האינטרנט היא רק הדגמה";
version.buyFull = "שדרג לגרסה המלאה";
// ----------------------------------------------
// QuadRemesh
version.qr.unlock = "פתח נעילה (רכוש, שחזר, ניסיון)";
version.qr.desktop = "על שולחן העבודה, QuadRemesher מופץ על ידי Hexanomad, אך Hexanomad אינה מטפלת בהפצה או ברישוי.
כל ניהול הרישיונות מתבצע על ידי Exoside.";
version.qr.buy = "קנה";
version.qr.promo = "
כלי Quad Remesher הוא אלגוריתם היוצר רשת שמשתלטת על רוב הפוליגונים.
הפיזור של הפוליגונים ינסה לעקוב אחרי הקימור הטבעי של האובייקט.

האלגוריתם יכול להתאים גם את גודל הפוליגונים בהתאם לקימור המקומי.

תוכל גם להנחות את הטופולוגיה המתקבלת עם:

• קבוצת הפנים $0 (וודא לרכך את הגבולות שלהם לשיפור התוצאה!)

• סימטריה רצועית X/Y/Z $1

• מדריכי עקומות $2

• ציור צפיפות $3

כלי Quad Remesher פותח על ידי https://exoside.com.";
// ----------------------------------------------
version.trialLayer = "גרסת ניסיון: שכבה אחת לכל עצם";
version.trialNoExport = "גרסת ניסיון: אין יצוא";
// ----------------------------------------------
version.fullFeatures = "• רכישה חד פעמית
• ביטול/חידוש ללא הגבלה
• שכבות ללא הגבלה
• ייבוא וייצוא";
// ----------------------------------------------
version.demo.purpose = "גירסה זו נוצרה במיוחד למטרות הדגמה.";
version.demo.disable = "התכונה לא מופעלת לדמו.";
// ----------------------------------------------
version.demo = "בדיקת הדמו";
version.demo.sculpt = "פיסול";
version.demo.sculpt.help = "כל המברשות זמינות אך אינך יכול לשמור או לייצא.

מצב זה נועד בעיקר להתנסות במברשות או לבדוק תמיכה בלחץ.

תכונות אחרות עשויות להיות מוגבלות גם כן (היסטוריה, שכבות).";
version.demo.file = "ייבוא וייצוא";
version.demo.file.help = "אתה יכול לייבא ולייצא מודל אבל מברשות פיסול לא פעילות.

מצב זה שימושי במיוחד למשתמשי מובייל שלא יכולים לפתוח פרויקט .nom גדול בגלל מגבלות זיכרון במובייל.";
// ----------------------------------------------
// app store main page
store.name = "Nomad Sculpt";
store.headline = "לפסל, לצייר וליצור ב-3D";
store.tag = "פסול, 3D, נווד, צבע, מודול";
// ----------------------------------------------
store.description.sculpt = "• כלי פיסול
חימר, שטוח, חלק, מסכה ועוד מברשות רבות יעזרו לך לעצב את היצירה שלך.
אתה יכול גם להשתמש בכלי גזירה דקים עם לאסו, מלבן וצורות נוספות למטרות של תכסית קשה.";
// ----------------------------------------------
store.description.stroke = "• התאמה אישית של קווים
מודעות נגרמים, אלפא, רעפים, לחץ עט ומאפּייני קווים נוספים ניתנים להתאמה אישית.
תוכל גם לשמור ולטעון את ההגדרות המותאמות של הכלים שלך.";
// ----------------------------------------------
store.description.paint = "• כלים לצביעה
צביעת וורטקס עם צבע, גסות ומתכת.
תוכל גם לנהל בקלות את כל ההגדרות המובנות שלך.";
// ----------------------------------------------
store.description.layer = "• שכבות
הקליטו את פעולות הפיסול והצבעה שלכם בשכבות נפרדות להקלת חזרה בזמן תהליך היצירה.
משתנים של פיסול והצבעה נשמרים בהקלטה.";
// ----------------------------------------------
store.description.multires = "• פיסול בריבוי רזולוציות
עבר חזרה וקדימה בין רמות שונות של רשת שלך לשם זרימת עבודה גמישה.";
// ----------------------------------------------
store.description.voxel = "• טשטוש ווקסל מחדש
שנה את הרשת שלך במהירות כדי לקבל רמת פירוט אחידה.
ניתן להפוך את זה לציונית מהירה של צורה מחוספסת בהתחלת תהליך ההפקה.";
// ----------------------------------------------
store.description.dynamic = "• טופולוגיה דינמית
שפר את המכניקה המקומית תחת המברשת שלך כדי לקבל רמת פירוט אוטומטית.
תוכל אפילו לשמור על השכבות שלך, כיוון שהן יעודכנו אוטומטית!";
// ----------------------------------------------
store.description.topology = "• הקטן
הורד את מספר הפוליגונים תוך שמירת כמה שיותר פרטים.";
// ----------------------------------------------
store.description.group = "• קבוצת פנים
חלקו את המֶש שלכם לתת קבוצות באמצעות כלי קבוצת פנים.";
// ----------------------------------------------
store.description.unwrap = "• פריסת UV אוטומטית
הפירוק האוטומטי של UV יכול להשתמש בקבוצות פנים לצורך שליטה בתהליך הפירוק.";
// ----------------------------------------------
store.description.baking = "• באקינג
ניתן להעביר נתוני וורטקס כגון צבע, מחוספסות, מתכתיות ופרטים קטנים לטקסטורות.
ניתן גם לבצע את ההפך, העברת נתוני טקסטורות לוורטקסים או לשכבות.";
// ----------------------------------------------
store.description.primitive = "• צורה פרימיטיבית
אפשר להתחיל צורות חדשות מהר באמצעות גליל, טבעת, צינור, ומכשירים פרימיטיביים אחרים.";
// ----------------------------------------------
store.description.rendering = "• רינדור PBR
רינדור PBR יפה כברירת מחדל, עם תאורה וצללים.
תמיד אפשר לעבור ל-MatCap לצורך צלילים סטנדרטיים יותר לצורך פיסול.";
// ----------------------------------------------
store.description.postprocess = "• עיבוד פוסט
Reflection בשטח המסך, עומק שדה, חסימת סביבה, מיפוי טונים, ועוד.";
// ----------------------------------------------
store.description.files = "• יצוא וייבוא
הפורמטים הנתמכים כוללים קבצי glTF, OBJ, STL או PLY.";
// ----------------------------------------------
store.description.interface = "• ממשק
ממשק קל לשימוש, שתוכנן עבור חווית משתמש במכשירים ניידים. התאמה אישית אפשרית גם כן!";
// ----------------------------------------------
store.description.remesher = "• Quad Remesher (רכישה נפרדת בתוך האפליקציה בלבד)
בצע מיון מחדש של האובייקט שלך בצורה אוטומטית עם רשת דומיננטית קוואדרטית העוקבת אחר עקמומיות הרשת.
נתמך על ידי מדריכים, קבוצות פנים וצבעי צפיפות.";
// ----------------------------------------------