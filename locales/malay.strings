// Generic confirmation (Confirm? [yes/ok/delete, cancel])
confirm = "Sahkan?";
// Answer to a question (Are you sure you want to do that? [yes, cancel])
confirm.yes = "Ya";
// The generic ok in a confirm box (The next operation is dangerous. [ok, cancel])
confirm.ok = "Ok";
// Cancel something after being asked (Question? [answer, cancel])
confirm.cancel = "Batal";

// Experimental feature
experimental = "Eksperimen!";

// On single tap (should be short)
ontap = "Pada ketikan";

clipboard = "Papan klip";
clipboard.copy = "Salin";
clipboard.paste = "Tampal";

// memory size
bytes = "bait";
kB = "kB";
MB = "MB";
GB = "GB";
TB = "TB";

// Noun
instance = "Instans";
object = "Obyek";

// Same value (usually for axis, e.g: x == y == z)
uniform = "Seragam";

sync = "Seiring";

// position
position.top = "Atas";
position.bottom = "Bawah";
position.left = "Kiri";
position.right = "Kanan";
position.center = "Tengah";
// direction
direction.up = "Naik";
direction.down = "Bawah";
direction.left = "Kiri";
direction.right = "Kanan";
// 3d cube
cube.top = "Atas";
cube.bottom = "Bawah";
cube.left = "Kiri";
cube.right = "Kanan";
cube.front = "Depan";
cube.back = "Belakang";

// Name of an item (object, tool, etc)
item.name = "Nama";
// Add a new item (object, tool, etc)
item.new = "Baru";
// Rename an item (object, tool, etc)
item.rename = "Namakan semula";
// Add a new item (object, tool, project, etc)
item.add = "Tambah";
// Update an item image with a new image (synonym: Update)
item.replace = "Ganti";
// Save an item (object, tool, etc)
item.save = "Simpan";
item.save.confirm = "Sahkan simpanan?";
// Update an item (update camera view point, etc)
item.update = "Kemaskini";
// Reload last save of an item (object, tool, etc)
item.lastSave = "Simpanan terakhir";
// Reload last save of an item (object, tool, etc)
item.lastSave.confirm = "Muat semula simpanan terakhir?";
// Reset an item to its initial value (object, tool, etc)
item.reset = "Tetap semula";
item.reset.confirm = "Sahkan tetap semula?";
// Make an item instance, similar to clone but keeps the underlying geometry (Synonym: link? soft clone?)
item.instance = "Instans";
// Uninstance the object, make the object real
item.uninstance = "Batalkan instans";
// Clone an item (object, tool, etc)
item.clone = "Klona";
// Delete an item (object, tool, etc)
item.delete = "Padam";
item.delete.confirm = "Sahkan pemadaman?";
item.delete.confirm.yes = "Ya, padam";
// When we delete the item but the image is used somewhere
item.delete.used = "Imej digunakan";
// Convert the item type (mesh, light) to a simple Node type
item.toNode = "Ke Node";
// Item visibility (object, layer, etc)
item.visible = "Terlihat";
// Show an item (object, layer, etc)
item.show = "Tunjuk";
// Hide an item (object, layer, etc)
item.hide = "Sembunyi";
// Select an item (object, layer, etc)
item.select = "Pilih";
// Unselect an item (object, layer, etc)
item.unselect = "Nyahpilih";
// Merge an item with another one below (layer)
item.mergeDown = "Gabung ke bawah";
// The order of an item in a list
item.order = "Susunan";
// Focus on previous item
item.previous = "Sebelum ini";
// Focus on next item
item.next = "Seterusnya";
// The item is locked (either it cannot be selected, edited, or we preserve its details)
item.lock = "Kunci";
// No item selected
item.none = "Tiada";

// Search something (text entry to filter item)
search = "Cari";

// Three-state toggle button (Auto, Off, On)
toggle.on = "Hidup";
// Three-state toggle button (Auto, Off, On)
toggle.off = "Tutup";
// Three-state toggle button (Auto, Off, On)
toggle.auto = "Automatik";

// When you launch the app and we need to reprocess some resource thumbnails
loading.reprocess = "Kekurangan imej kecil, memproses semula fail...";
loading.reprocess.cancel = "Langkau penjanaan imej kecil?";

access.title = "Kebolehcapaian";
access.window = "Tetingkap bantuan";
access.pinch = "Cubit";
access.drag = "Seret";
access.rotate = "Putar";
access.roll = "Jongket";

// Color of an object
material.color = "Warna";
// Defines how blurry or sharp the reflection on a material is (opposite of glossiness)
material.roughness = "Kekasaran";
// Defines how blurry or sharp the reflection on a material is (opposite of roughness)
material.glossiness = "Kilauan";
// Whether the material is a metal or not
material.metalness = "Kemetalan";
// How much light a surface will reflect
material.specular = "Spesular";
// Light that the surface can emit (glow)
material.emissive = "Pancaran";
// Normal map (synonym: detail, bump)
material.normal = "Normal";
// flip y coordinate
material.normal.flipY = "Balikkan Y";
// Ambient Occlusion (AO)
material.occlusion = "Penghalangan";
// Textures, basically images wrapped on models (synonym: Maps, Texture maps)
material.textures = "Tekstur";
// Textures/Image
material.texture = "Tekstur";
// A warning indicating that the mesh has no UVs
material.warningNoUVs = "Tiada UVs!";
// Texture filtering https://en.wikipedia.org/wiki/Texture_filtering
material.texture.filter = "Penapisan";
// Nearest Filtering (closest sample)
material.texture.nearest = "Terdekat";
// Bilinear Filter
material.texture.linear = "Linear";
// Mipmap filtering
material.texture.mipmap = "Mipmap";
// Triplanar mapping
material.projection = "Projeksi";
material.projection.triplanar = "Triplanar";

// Minify
about.minify = "Minimakan Antaramuka";
about.minify.help = "Anda juga boleh ketuk skrin anda dengan 4 jari, jika peranti anda menyokongnya.";
// Turntable will rotate the whole scene on itself (as it if was on a turntable)
about.turntable = "Pemain putar";
// Rotation center of the turntable
about.turntable.pivot = "Pusat putaran";
// Keep current pivot
about.turntable.pivot.keep = "Kekalkan semasa";
// Turntable pivot will be at the center of the scene
about.turntable.pivot.scene = "Babak";
// Make the entire scene turn around (speed of the animation)
about.turntable.speed = "Kelajuan";
// Stuffs that I used to make the app
about.credits = "Kredit";
// Link to open source projects that I used for the app
about.credits.openSource = "Sumber Terbuka";
// Only translate the &
about.credits.arts = "MatCaps & HDRIs";
// Change languages of the app
about.languages = "Bahasa-Bahasa";
about.languages.help = "Fail terjemahan tersedia di $0";
// Link to the App Website
about.website = "Laman web";
// Link to the App Forum
about.forum = "Forum";
// Link to the App Manual
about.manual = "Manual";
// Link to the App Email
about.mail = "Sokongan";
// Link to the App Twitter account
about.twitter = "Twitter";
// Link to the App Instagram account
about.instagram = "Instagram";
// Link to the App Facebook account
about.facebook = "Facebook";
// Link to the App Discord account
about.discord = "Discord";
// Link to the App Threads account
about.threads = "Threads";

// The user canceled an operation that was running
alert.aborted = "Operasi dibatalkan!";
// Error when an algorithm needs the object to have an hole (usually to fill it)
alert.hole.nothing = "Objek tidak mempunyai lubang!";
// No operation occured because the mesh is already manifold
alert.manifold.already = "Mesh sudah manifold!";
// Visibility of the object is off (but should be on)
alert.shape.notVisible = "Objek semasa tidak kelihatan!";
// The user tried to trim an object but the selected region didn't touch the object
alert.trim.nothing = "Tiada apa-apa untuk dipangkas.";
// The user tried to trim an object but the selected region completely encompassed the object
alert.trim.full = "Batalkan pangkasan: objek sepenuhnya dipangkas.";
// In order to extract something, the mesh needs to have painted mask
alert.extract.none = "Tiada apa-apa untuk diekstrak!";
// In order to split something, the mesh needs to have painted mask
alert.extract.split.none = "Tiada apa-apa untuk berpecah!";
// List of disabled features when View Mode is selected
alert.view.disabled = "Ciri-ciri dinyahaktifkan dalam Mod Paparan:";
// Primitive Widgets are small ui stuffs in the viewport that the user can interact with to modify an object
alert.view.disabled.widgetPrimitive = "Widget Primitif";
// The object needs to have two parts disconnected
alert.separate.fail = "Tidak dapat memisahkan: objek hanya mempunyai satu bahagian!";
// Remesh is when you create a new topology (mesh) on an object
alert.voxelRemesh.success = "Telah Dimesh Semula!";
alert.voxelRemesh.empty = "Batalkan remesh: mesh hasil tidak mempunyai muka.";
// Should not happen or very rarely, input here is an object
alert.voxelRemesh.invalidInput = "Input tidak sah!";
// Helper popup to tell the users the object will cloned
alert.matrix.clone = "Objek akan diduplikasi";
// Helper popup to tell the users the object will cloned
alert.matrix.instance = "Objek akan dipinstancekan";
// A pivot refers the gizmo 3d position, this mode means we are moving the pivot
alert.gizmo.editPivot = "Edit mod pangsi.";
alert.mask.full = "Masker = 100%!";
// A pivot refers the gizmo 3d position
alert.gizmo.editObject = "Edit mod objek.";
// See Glossary (DynTopo)
alert.dynamic.enable = "Topologi dinamik ON";
// See Glossary (DynTopo)
alert.dynamic.disable = "Topologi dinamik OFF";
alert.colorPicker = "Seret pada objek untuk memilih warna.";
// Transform mode is when the user can move the reference (image in the background) with its two fingers
alert.backgroundTransform = "Ketukan mudah untuk keluar dari mod transform.";
// Edit the symmetry plane with the gizmo
alert.editSymmetry = "Ketukan mudah untuk keluar dari mod edit simetri.";
// Show the painted mask on the mesh
alert.mask.show = "Tunjuk topeng";
// Hide the painted mask on the mesh
alert.mask.hide = "Sembunyikan mask";
// Selection refers to the objects that are currently selected
alert.selection.lock = "Kunci pilihan";
// Selection refers to the objects that are currently selected
alert.selection.unlock = "Buka kunci pilihan";
// Hide the objects that are not selected
alert.selection.isolate = "Pisahkan pilihan";
// Show the objects that are hidden
alert.selection.showAll = "Tunjuk semua";
// Project quick saving
alert.quickSave = "Menyimpan...";
// Painting on the object was hidden but the user did paint the object
alert.forcePainting.fill = "Tunjuk lukisan diaktifkan, [Paint all] digunakan.";
// Painting on the object was hidden but the user started to paint on the object
alert.forcePainting.tool = "Tunjuk lukisan diaktifkan, objek telah dilukis.";
// See Glossary (Multiresolution)
alert.multiresLost = "Multiresolution akan hilang!";
// Boolean cut mode will ignore some features
alert.booleanIgnored = "Boolean akan mengabaikan kawasan bertopeng atau tersembunyi!";
// The user is starting an operation that can lead to a crash
alert.range.warning = "Nilai perincian tinggi dan mungkin memerlukan banyak ingatan!";
// Autosave popup
alert.autoSave.auto = "Simpan automatik dalam... $0s";
// The selected object doesn't have any layers
alert.needLayer = "Alat semasa memerlukan lapisan aktif.";
// The user decided to hide the painting on the objects
alert.paintingHidden = "Lukisan tersembunyi!";
// The user decided to hide the masking on the objects
alert.maskingHidden = "Topeng tersembunyi!";
// The user decided to display hidden faces
alert.hideIgnored = "Sembunyikan diabaikan!";
// The selected object doesn't have any layers
alert.noPartialWireframe = "Lukisan separuh tidak diaktifkan apabila wireframe ditayangkan.";
// The user has selected a tool that is more intuitive to use when the camera is in orthographic mode
alert.shapeOrthographic = "Pertimbangkan menggunakan kamera ortografik jika anda ingin mengelakkan penyimpangan frustum perspektif apabila menggunakan projektor skrin.";
// Trial version has a limited number of undo
alert.state.trial = "Versi percubaan: dibatalkan pembatalan";

background = "Latar belakang";
// A flat color will be displayed in the background of the scene
background.color = "Warna";
// 2 color with rotation
background.gradient = "Kecerunan";
// The environment (HDRI) will be displayed in the background
background.environment = "Persekitaran";
background.blur = "Kabur";
background.exposure = "Pendedahan";

// Image that the artist uses as a reference
background.imageEnable = "Imej rujukan";
// The image will be displayed in overlay (used as a reference by the artist)
background.imageOverlay = "Sisipan";
// Opposite of transparency (Alpha)
background.imageAlpha = "Ketekalan";
background.imageReset = "Tetapan semula";
background.imageTransform = "Transformasi";
// X screen coordinate of the image reference
background.imageX = "Posisi X";
// Y screen coordinate of the image reference
background.imageY = "Posisi Y";
// Rotation of the reference image
background.imageRotation = "Putaran";
// Scale of the reference image
background.imageScale = "Skala";

// Blend: normal
blend.normal = "Biasa";
// Blend: darker
blend.darker = "Lebih gelap";
blend.darker.darken = "Gelapkan";
blend.darker.multiply = "Gandakan";
blend.darker.linearBurn = "Bakar Linear";
blend.darker.colorBurn = "Bakar Warna";
// Blend: lighter
blend.lighter = "Lebih cerah";
blend.lighter.lighten = "Cerahkan";
blend.lighter.screen = "Skrin";
blend.lighter.linearDodge = "Dodge Linear";
blend.lighter.colorDodge = "Dodge Warna";
// Blend: contrast
blend.contrast = "Kontras";
blend.contrast.hardLight = "Cahaya Keras";
blend.contrast.softLight = "Cahaya Lembut";
blend.contrast.overlay = "Hamparan";
blend.contrast.hardMix = "Campuran Keras";
blend.contrast.linearLight = "Cahaya Linear";
blend.contrast.vividLight = "Cahaya Hidup";
blend.contrast.average = "Purata";
// Blend: inversion
blend.inversion = "Pencerobohan";
blend.inversion.exclusion = "Pengecualian";
blend.inversion.difference = "Perbezaan";
// Blend: cancelation
blend.cancelation = "Pembatalan";
blend.cancelation.divide = "Bahagi";
blend.cancelation.subtract = "Tolakkan";
// Blend: component
blend.component = "Komponen";
blend.component.luminosity = "Luminosti";

// Camera (point of view in 3d)
camera = "Kamera";
cameras = "Kamera";
camera.view = "Pandang";
// Copy the views
camera.updateView = "Kemas kini titik pandangan?";
// Add a new camera
camera.addView = "Tambah Pandangan";
// Focus on the camera
camera.focus = "Fokus";
// Add on the camera camera
camera.focusOn = "Fokus pada $0";
// Camera projection, Orthographic or Perspective
camera.projection = "Projeksi";
// Camera projection, Orthographic or Perspective
camera.projection.orthographic = "Ortografi";
// Camera projection, Orthographic or Perspective
camera.projection.perspective = "Perspektif";
// camera Vertical Field of View
camera.fov = "Pandangan Vertikal";
// Camera Field of View hint
camera.focal = "focal $0mm (sensor 35mm)";
// Rotation mode controls how the user will interact with the camera rotation
camera.rotation = "Putaran";
// Camera interaction mode, 2 degrees of freedom (synonym: Orbit)
camera.rotation.orbit = "Meja Putar";
// Camera interaction mode, 3 degrees of freedom
camera.rotation.trackball = "Jejari Bola";
camera.rotation.trackball.help = "Trackball memberikan lebih banyak kebebasan yang mana anda boleh juga menggulung kamera dengan 2 jari.";
// Camera interaction mode, 1st person view
camera.firstPerson = "Pandangan Orang Pertama";
// How sensitive the camera is (synonym: sensitivity)
camera.speed = "Kelajuan";
// Camera rotation sensitivity
camera.speed.rotation = "Putaran";
// Camera translation sensitivity
camera.speed.panning = "Penerjemahan";
// Camera zooming sensitivity
camera.speed.zooming = "Zum";
// Reset camera position
camera.resetView = "Tetapkan semula pandangan";
// Align the view (snap to nearest 90° angle)
camera.snapView = "Pandangan Snap";
// Warning (camera is snapped and it switched to orthographic)
camera.snapOrthographic.warning = "Kamera telah diselaraskan (ortografik)";
// Switch to orthographic view when the view is snapped
camera.snapOrthographic = "Snap Ortografik";
camera.snapOrthographic.help = "Opsyen ini juga berfungsi apabila menggunakan Snap Cube di penjuru.";
// The Camera pivot is the point around which the camera rotates
camera.pivot = "Kemas kini pusingan...";
// When we double tap on the object with the finger/stylus
camera.doubleTapMesh = "Ketuk dua kali pada objek";
// When we double tap on the background with the finger/stylus
camera.doubleTapBackground = "Ketuk dua kali pada latar belakang";
// When we double tap on the background with the finger/stylus
camera.doubleTapBackgroundFocus.toggle = "Tukar";
// Focus on the selection
camera.doubleTapBackgroundFocus.selection = "Pemilihan";
// Focus on the entire scene
camera.doubleTapBackgroundFocus.scene = "Adegan";
// When double tapping with the finger/stylus, the camera pivot will be updated
camera.doubleTapPivot = "Apabila mengetuk dua kali";
camera.doubleTapPivot.help = "Kemas kini pivot putaran apabila mengetuk dua kali pada permukaan objek.";
// Allow new pivot even when zooming outside the object surface
camera.airPivot = "Benarkan pivot udara";
camera.airPivot.help = "Benarkan pivot baru walaupun ketika mengezum di luar permukaan objek.";
// Update the pivot when you start interacting with the camera
camera.autoPivot = "Apabila kamera mula bergerak";
camera.autoPivot.help = "Kemas kini pivot apabila anda mula berinteraksi dengan kamera.";
// Move the camera so that it focus on the intersection point
camera.doubleTapFocus = "Fokus";
camera.doubleTapFocus.help = "Apabila ketuk dua kali pada objek, kamera akan bergerak dan fokus pada titik yang dipilih.";

// Toolbox context (when expanded), multiple objects are selected
context.multiselection = "Pemilihan berganda";
// There is 0 nodes/items selected
context.noSelection = "Tiada pemilihan";

// Curve type, presets lets the user chooses between predefined curves
curve.preset = "Pra-tetap";
// Quick curve x side shift
curve.shift = "Pindah";
// Curve type, https://en.wikipedia.org/wiki/Centripetal_Catmull%E2%80%93Rom_spline
curve.catmull = "Catmull-Rom";
// Curve curve, https://en.wikipedia.org/wiki/Spline_(mathematics)
curve.spline = "Spline";
curve.bspline = "B-spline";
curve.precision = "Ketepatan";
// snap
curve.snap = "Ambil";
curve.snap.offset = "Kesan";
curve.snap.offset.help = "Nilai 100% adalah sama dengan radius tiub.";
curve.snap.surface = "Permukaan";
curve.snap.vertex = "Verteks";
curve.snap.grid = "Grid (jika dipasang)";
// Regular spaced sampling
curve.uniform = "Seragam";
curve.uniform.help = "Lengkung akan diambil sampel pada jarak yang tetap, untuk memastikan ketumpatan seragam.

Anda boleh mematikan pilihan ini untuk mengawal sedikit gelung tepi dengan menambah titik kawalan baru pada lengkung.";
// Display the falloff curve in a symmetric way
curve.symmetric.help = "Paparkan kemerosotan secara simetri.

Pilihan ini hanya petunjuk visual, ia tidak mempengaruhi kemerosotan itu sendiri";
curve.radius = "Jejari";
curve.twist = "Pintalan";
curve.spiral = "Lingkaran";
curve.spiral.twist = "Sudut twist";
curve.spiral.scale = "Skala";
curve.spiral.offset = "Kesan";
curve.spiral.angle = "Pelarasan sudut";
curve.pivot = "Poros";
curve.pivot.self = "Sendiri";
curve.pivot.children = "Anak-anak";

// Set the desired FPS (frame per second, refresh rate)
debug.targetFPS = "Sasaran FPS";
debug.targetFPS.help = "Apabila dimatikan, nilai lalai bermaksud ia akan diselaraskan dengan kadar penyegaran paparan.";

// Warning about UVs (using extra memory)
debug.uvPrimitive.warning = "Lumpuhkan pilihan ini jika anda tidak memerlukan UVs.

Mesh dengan UVs akan menggunakan lebih banyak memori.";
// Debug option, Normalize means transforming the data so that it fits in [0-1] the range
debug.uvNormalize = "Normalkan UVs";
debug.uvNormalize.help = "Nomad akan menormalkan UVs di dalam jubin [0-1].";
// Debug option, BFF stands for Boundary First Flattening (no need to translate)
debug.uvBFF = "Tambah BFF UVs";
debug.uvBFF.help = "Tambah satu metod pembukaan yang alternatif (boundary first flattening).

Catatan bahawa BFF akan menghasilkan pertindihan jika topologi mesh anda berbeza daripada cakera atau sfera.";

// Debug option, display an window with some debugging logs
debug.logs = "Log";
// Debug option, overrides the rendering to display the depth buffer
debug.heightmap = "Peta ketinggian";
// Debug options, graphical stuffs
debug.graphics = "Grafik";
// Debug options, generate screenshots with size compatible with the iOS store
debug.thumbnails = "Buat lakaran kenit kedai";

// Empty list: there is no projects
file.project.empty = "Anda masih belum menyimpan projek!";
// The current opened project has some unsaved changes
file.project.unsaved = "Perubahan belum disimpan!";
// The user will loose its project's unsaved changes
file.project.loseUnsaved = "Anda akan kehilangan perubahan yang belum disimpan!";
// Indicates to the user that the project thumbnail corresponds to the last manual save
file.project.lastManualSave = "Pratonton simpanan manual terakhir";

file.project = "Projek";
// Save current project (or overwrite if the project has already been saved once)
file.project.save = "Simpan";
// E.g: Save "my_project"?
file.project.save.confirm = "Simpan $0?";
// Overwrite another project
file.project.saveAs = "Simpan Sebagai";
// E.g: Overwrite "my_other_project"?
file.project.saveAs.confirm = "Tompa $0?";
// Open a project
file.project.open = "Buka";
// E.g: Open "my_project"?
file.project.open.confirm = "Buka $0?";
// E.g: Clone "my_project"?
file.project.clone.confirm = "Klon $0?";
// Load another project and add/append all its data to the current scene
file.project.add = "Tambah ke paparan";
// E;g: Add "my_other_project" to the scene?
file.project.add.confirm = "Tambah $0 ke paparan?";
// Reset the scene and create a new project
file.project.new = "Baru";
file.project.new.confirm = "Cipta adegan baru?";
// Delete a project (not corresponding to the currently opened one)
file.project.delete.confirm = "Padam $0?";
// Delete a project (corresponding to the currently opened one)
file.project.delete.confirmActive = "Padam $0?

Ini adalah projek aktif semasa!";

// Auto save section
file.project.autoSave = "Auto Simpan";
file.project.autoSave.confirm = "Lumpuhkan Auto Simpan?";
file.project.autoSave.help = "Simpan projek anda dalam fail berasingan pada selang masa tetap.

Fail autoSave boleh didapati di:";
// Interval in minutes in which the auto save popup will appear
file.project.autoSave.popup = "Waktu tamat tetingkap timbul";
// In minutes
file.project.autoSave.minutes = "Tetingkap timbul pemasa";
// Delete the current autoSave data
file.project.autoSave.delete = "Abaikan Auto Simpan";

// color space (linear or srgb), do not translate linear/srgb if there is a doubt
file.colorSpace = "Ruang Warna";
file.colorSpace.help = "Cuba untuk togol pilihan ini jika warna kelihatan tidak tepat.";
file.colorSpace.linear = "Linear";
file.colorSpace.srgb = "sRGB";

// Configure imports option
file.importSettings = "Pilihan import";

// Load interface preference settings when opening a scene file
file.import.guiSettings = "Simpan tetapan gui";
file.import.guiSettings.help = "Apabila membuka atau mengimport fail projek, semua tetapan berkaitan gui yang tertanam dalam projek akan dimuatkan.";
// OBJ have "groups" and "objects", by default groups are ignored, use this option to consider groups as separate objects
file.import.obj.splitByGroup = "Pisahkan OBJ mengikut kumpulan";
file.import.obj.splitByGroup.help = "Apabila diaktifkan, Nomad akan memisahkan kumpulan OBJ menjadi objek berasingan.";
// Merge all the object layers at when loading a file (deleting them in the process)
file.import.mergeLayers = "Gabungkan Lapisan";
// Ignore the textures present in the file to load
file.import.skipTextures = "Langkau tekstur";
// Do not fiddle with the object topology when loading the file
file.import.keepTopology = "Kekalkan topologi";
file.import.keepTopology.help = "Gunakan pilihan ini jika anda tidak mahu Nomad mengusik topologi mesh yang diimport.

Ia akan melumpuhkan susunan semula puncak/muka, penghapusan duplikasi puncak/muka dan penyingkiran puncak yang tidak digunakan.";

// Import file section
file.import.title = "Import";
file.import.title.help = "Format yang disokong:";
// The user imports a scene file that will replace the current scene
file.import.open = "Buka";
file.import.open.confirm = "Import fail baru?";
// The user imports a scene file that will be added/appended the current scene
file.import.add = "Tambah ke adegan";
file.import.add.confirm = "Import fail baru?";

// Export scene file
file.export.title = "Eksport";

file.select.include = "Termasuk";
file.select.all = "Semua";
file.select.visible = "Terlihat";
file.select.selected = "Terpilih";
file.select.unselected = "Tidak terpilih";

// Export the current selected objects instead of the entire scene
file.onlySelection = "Hanya sertakan objek terpilih";
file.onlySelection.help = "Hanya sertakan pilihan, bukannya keseluruhan adegan.";
// Tries to generate quad (rectangle polygon) from triangles
file.convertToQuad = "Bina semula quad";
file.convertToQuad.help = "Bina semula quads dari segitiga dengan memasangkan segitiga (jika ia bersambungan dalam fail).";
// ----------------------------------------------
// Whether we include the textures in the exported file
file.export.texture = "Tekstur";
// Baking means transfering/converting
file.export.texture.help = "Pilihan ini tidak 'bake' warna vertex ke dalam tekstur. Ia hanya termasuk tekstur jika objek mempunyai tekstur pada bahannya.";
// ----------------------------------------------
file.export.color0 = "Warna puncak";
file.export.color1 = "PBR cat";
file.export.color1.help = "Eksport kekasaran, kekodokan dan lukisan topeng. Ini akan diabaikan oleh perisian lain.";
// ----------------------------------------------
// Whether we include normals vector in the exported file
file.export.normal = "Normal";
file.export.normal.help = "Cek pilihan ini jika anda ingin membuka fail dalam perisian lain. Nomad sentiasa mengabaikan normals kerana ia akan mengira semula.";
// ----------------------------------------------
file.export.tangent = "Tangen";
file.export.tangent.help = "Periksa pilihan ini jika anda ingin membuka fail dalam perisian lain.

Tangen hanya digunakan jika model mempunyai peta biasa.

Nomad sentiasa mengabaikan tangen kerana ia akan mengira semula.";
// ----------------------------------------------
file.export.nomad = "Eksport Nomad";
file.export.nomad.help = "Format fail dalaman Nomad Sculpt. Format ini tidak akan dimuat pada perisian lain, ini kebanyakan untuk tujuan reimport.";
// ----------------------------------------------
file.export.gltf = "Eksport glTF 2.0";
// Whether we include layers in the exported file (see glossary for layer)
file.export.gltf.layer = "Lapisan";
file.export.gltf.layer.help = "Eksport lapisan sebagai morf. Rasmi disokong oleh glTF, jadi ia sepatutnya berfungsi juga pada perisian lain.";
// Whether we include painting of layers in the exported file (see glossary for layer)
file.export.gltf.layerPaint = "Mewarnai lapisan";
file.export.gltf.layerPaint.help = "Eksport pewarnaan lapisan. Ia biasanya diabaikan oleh perisian lain.";
// ----------------------------------------------
file.export.obj = "Eksport OBJ";
file.export.obj.warning = "Lapisan dan pewarnaan tambahan (kekasaran, ketumpatan logam dan topeng) akan hilang.";
// Whether we include the vertex color in the exported file
file.export.obj.color = "Warna Verteks";
file.export.obj.color.help = "Beberapa perisian 3d akan dapat membacanya tetapi tidak semuanya.";
file.export.obj.color.help.append = "Lampirkan maklumat warna selepas verteks.";
file.export.obj.color.help.hexa = "Cara alternatif untuk mengekod warna. Ia juga menyokong data maska.";
file.export.obj.faceGroup = "Kumpulan Muka";
file.export.obj.object = "Tulis Objek";
file.export.obj.object.help = "Pastikan objek terpisah.

Menonaktifkan pilihan ini akan mengeksport semuanya sebagai satu entiti.
Anda perlu menonaktifkan pilihan ini jika anda mahu menggunakan ciri Substance Painter 'Mesh ID / Polygroup.'";
file.export.obj.archive = "Jenis";
file.export.obj.archive.folder = "Folder";
file.export.obj.archive.zip = "Zip";
file.export.obj.archive.help = "Beberapa aplikasi (Google Drive, One Drive, dll.) tidak menyokong pengimportan folder, jadi anda boleh menggunakan Zip sebagai gantinya.";
// ----------------------------------------------
file.export.stl = "Eksport STL";
file.export.stl.warning = "Lapisan dan pewarnaan tambahan (kekasaran, ketumpatan logam, dll.) akan hilang.";
// Whether we include the vertex color in the exported file
file.export.stl.color = "Warna vertex";
file.export.stl.color.help = "Sebahagian perisian 3D dapat membacanya tetapi tidak kesemua mereka.";
// ----------------------------------------------
file.export.ply = "Eksport PLY";
file.export.ply.warning = "Lapisan dan pewarnaan tambahan (kekasaran, ketumpatan logam, dll.) akan hilang.";
// ----------------------------------------------
file.export.fbx = "Eksport FBX";
// ----------------------------------------------
// Advanced settings
settings.advanced = "Canggih";
// Means that all these options will be resetted when the app restarts
settings.notSaved = "Pilihan-pilihan ini tidak disimpan dalam tetapan.";
settings.reset.title = "Tetapan";
settings.reset.title.help = "Ia akan menetapkan semula tetapan keutamaan aplikasi.

Sesetengah sumber disimpan secara berasingan dan TIDAK akan diset semula, termasuk:
• Projek
• Pengikatan Kunci
• Alat Diubah Suai
• Persekitaran HDR
• MatCap
• Alphas
• Tekstur (berus)
• Imej Rujukan

Perhatikan bahawa segala-galanya yang berkaitan dengan projek akan disimpan, seperti pencahayaan, Pemprosesan Pasca, pandangan kamera, dll";

// Reset preference settings button
settings.reset = "Tetap semula kepada asal";
settings.reset.confirm = "Tetap semula tetapan keutamaan?";

// Render a screenshot of the scene
file.render = "Papar";
// If we include the App Interface in the exported screenshot
file.render.showInterface = "Papar antaramuka";
// Resolution ratio of the exported screenshot
file.render.renderRatio = "Nisbah render";
file.render.renderRatio.help = "Nilai 1.0 bermaksud Nomad akan render pada resolusi yang sama dengan saiz imej yang diminta di bawah. Gunakan pilihan ini jika anda tidak dapat render pada resolusi tertentu (kerapuhan kerana kekurangan memori).";
// Desired size of the exported screenshot
file.render.size = "Saiz akhir";
// Desired size of the exported screenshot (custom vs predefined size)
file.render.size.custom = "Khusus";
// Screen resolution parameters for the export screenshot features
file.render.screenResolution = "Skrin";
// width of exported screenshot
file.render.width = "Lebar";
// height of exported screenshot
file.render.height = "Tinggi";
// export screenshot of the scene
file.render.export = "Eksport png";
file.render.warn = "Resolusi eksport adalah tinggi ($0x$1)!

Pastikan untuk simpan projek anda sekiranya peranti anda kehabisan VRAM dan terhempas.";
// If true, then the exported screenshot will have transparency data in the image
file.render.transparent = "Latar belakang lut sinar";
file.render.transparent.help = "Pilihan ini berguna jika anda ingin memasukkan mesh dalam perisian penciptaan 2D.

Objek lut sinar separa tidak disokong buat masa ini.";

// Disable this option to have per-tool pressure settings (instead of shared settings)
pressure.useGlobal = "Gunakan tetapan global";
pressure.useGlobal.help = "Secara lalai, alat berkongsi tetapan tekanan yang sama.

Nyahpilih pilihan ini jika anda mahu tetapan tekanan khusus untuk alat ini.";

// Pencil pressure
pressure.title = "Tekanan";
// Pencil/Stylus pressure will be ignored
pressure.noTool = "Alat ini tidak menggunakan tekanan pensel.";
// The tool can support pressure but its selected stroke type will ignore it
pressure.noGrab = "Jenis pukulan grub akan mengabaikan tetapan tekanan.";
// The stylus pressure will impact the tool radius (more pressure -> bigger radius)
pressure.radius = "Jejari";
// The stylus pressure will impact the tool intensity (more pressure -> stronger intensity)
pressure.intensity = "Keamatan";
// Average pencil pressure event to get smoother result
pressure.average = "Kelancaran tekanan";
pressure.average.help = "Puratakan acara tekanan pensel untuk hasil yang lebih lancar.";

// list of inputs allowing camera interaction
gesture.camera = "Kamera";
// list of inputs allowing sculpting interaction
gesture.sculpt = "Ukir";
// Select object
gesture.select = "Pilih objek";
// Finger/Touch input
gesture.finger = "Jari";
// Stylus/Pencil
gesture.stylus = "Stilus";
// Mouse/Trackpad
gesture.mouse = "Tetikus";

// long press to pick the color/material under the cursor
gesture.dropper = "Pemilihan bahan";
gesture.dropper.help = "Pemilih warna/bahan boleh dicetuskan dengan menekan lama pada kanvas.

Harap maklum ia hanya berfungsi jika berus semasa mempunyai lukisan diaktifkan.";

// Three fingers on screen
gesture.three.title = "Tiga jari";
gesture.three.light = "Putar pencahayaan";
gesture.three.light.help = "Putar persekitaran, lampu dan MatCap.";
gesture.three.radius = "Jejari Alat";
gesture.three.intensity = "Keamatan Alat";

// If this option is enabled, finger inputs on screen will use the smoothing tool
gesture.finger.smooth = "Jari sentiasa melicinkan";
gesture.finger.smooth.help = "Pilihan ini hanya aktif jika alat mengukir aktif.";
// If enabled, the pressure will be taken into account even if it's not coming from a recognized stylus
gesture.unknownPressure = "Benarkan tekanan tidak dikenali";
gesture.unknownPressure.help = "Semak pilihan ini jika tekanan tidak berfungsi dengan pensel anda atau jika anda memerlukan tekanan jari.";

// Action when we press an Android pencil button
gesture.pencilAction.android = "Butang Pensil";
// Action when we use the Pencil double Tap
gesture.pencilAction.ios = "Penskrol Dua Kali";
gesture.pencilAction.ios.help = "Hanya aktif untuk Apple Pencil generasi ke-2.";
// Pencil button (or iOS pencil double tap) action: Nothing
gesture.pencilAction.none = "Tiada";
// Pencil button (or iOS pencil double tap) action: flip adding/substracting sculpt matter setting
gesture.pencilAction.alt = "Tambah/Kurang";

// Enable Mask gesture by tapping once on the screen
gesture.mask.oneTap = "Pintasan Satu Ketukan";
gesture.mask.oneTap.help = "Benarkan pintasan Mask dengan menekan skrin sekali, tanpa perlu menahan pintasan butang mask.

Ia akan membenarkan isyarat berikut:
• ketik pada latar belakang untuk membalikkan mask
• ketik pada kawasan bertutup untuk memburamkan mask
• ketik pada kawasan tidak bertutup untuk mempertajamkan mask";
// Hold the finger on screen to toggle between two tools: Mask and SelMask
gesture.mask.holdStroke = "Sentuhan";
gesture.mask.holdStroke.help = "Tekan lama akan bertukar antara Mask dan SelMask dan memulakan strok baru.

Pada akhir strok, alat sebelumnya dipilih semula.";
gesture.mask.holdIdle = "Alat";
gesture.mask.holdIdle.help = "Tekan lama dan lepaskan tanpa bergerak untuk bertukar antara Mask dan SelMask.";

// Shortcut customization, choose the action that the shortcut will performan (select tool, etc)
gesture.shortcut = "Pintasan";

// Shortcuts to undo/redo
gesture.history = "Pintasan Sejarah";
gesture.history.help = "• Undo: ketik dengan 2 jari
• Redo: ketik dengan 3 jari";
gesture.history.hold = "Tekan lama";
gesture.history.hold.help = "Tahan 2/3 jari ke bawah.";

// Size rejection is when we try to ignore the palm of the hand when we interact with a tablet
gesture.palmRejection = "Penolakan Tapak Tangan";
gesture.palmRejection.confirm = "Pastikan untuk mematikan opsyen ini jika anda menghadapi kesukaran berinteraksi dengan kanvas!";
gesture.palmRejection.help = "Tolak input jika saiz kawasan sentuhan lebih besar daripada nilai ini.

Mungkin tidak berfungsi pada setiap peranti.";
// Size in pixel for the palm rejection feature
gesture.palmRejection.size = "Ambang Saiz Maksimum";

// Smoothing strategy
extract.polish.all = "Semua";
extract.polish.sharp = "Tepi tajam";
extract.polish.border = "Hanya Tepi";
// Smooth the border in a way that it matches completely with its dual
extract.polish.syncBorder = "Sync tepi";
// topology of extracted mesh
extract.edgeLoop = "Gelung Tebing (tepi)";
extract.edgeLoop.auto = "Auto gelung tebing";
extract.edgeLoop.division = "Pembahagian";
// The thickness of the extracted mesh (from the painted mask)
extract.thickness = "Ketebalan";
// Carve the mask into the surface
extract.carve = "Ukir";
// Extract a new mesh from the painted mask
extract = "Ekstrak";
// Preview extract
extract.preview = "Pratonton";
// Extract two new mesh from the painted mask and from the unmasked area
extract.split = "Pisah";
// How should we close the topology of the extracted object
extract.action = "Tindakan Penutupan";
extract.action.help = "• Tiada
Hanya memisahkan bahagian dan membiarkan bahagian yang dipisahkan terbuka.

• Isi
Lubang diisi dan dilicinkan.
Jangan gunakan pilihan ini untuk permukaan rata.

• Cangkang
Tutup bentuk yang diambil menggunakan nilai ketebalan.

• Lapisan
Mengambil perbezaan lapisan (sub-menu lapisan sahaja).";
// Do not close the mesh (leave it open)
extract.action.none = "Tiada";
// Close the mesh with a hole-filling algorithm
extract.action.fill = "Isi";
// Close the mesh by adding a thickness on the surface
extract.action.shell = "Cangkerang";
// Close the mesh by using the layer data as a difference thickness
extract.action.layer = "Lapisan";

// uv part of revolution surface
genus.main = "Utama";
genus.hole = "Lubang";
genus.bottom = "Bawah";
genus.top = "Atas";

// History, list of undo/redo
history = "Sejarah";
// First "undo" state
history.root = "Akar";
history.undoConfirm = "Adakah anda mengesahkan untuk membatalkan semua operasi ini?";
history.undoWarning = "Sekiranya anda membuat suntingan selepasnya, anda mungkin kehilangan banyak perubahan.";
// Settings concerning the history stack of undo/redo
history.stack = "Tindanan";
// Actions to include in the undo/redo stack
history.include = "Sertakan tindakan";
// include lighting editing in the undo/redo
history.includeLights = "Lampu";
history.includeLights.help = "Jika pilihan ini dinyahaktifkan, menggerakkan lampu dengan Gizmo akan tetap disertakan kerana ia boleh memberi kesan pada objek lain dalam hierarki adegan.";
// include postProcess editing in the undo/redo
history.includePostProcess = "Pasca Pemprosesan";
// include shading parameters (MatCap & HDRIs) editing in the undo/redo
history.includeShading = "MatCaps & HDRIs";
// Can limit the stack of undo/redo size
history.limitSize = "Had Sejarah";
history.limitSize.help = "Saiz maksimum bagi sejarah.

Sejarah akan dikemas kini pada operasi yang akan datang.";
// Limit the number of undo in the history stack
history.limitStack = "Had Tumpukan";
history.limitStack.help = "Bilangan maksimum operasi yang aplikasi boleh simpan.

Sejarah akan dikemaskini pada operasi yang seterusnya.";
// Value where you define how many operations you can undo before it displays a warning
history.rangeProtect = "Maksimum dibatalkan";
history.rangeProtect.help = "Jika anda pergi jauh dalam sejarah, ia akan memaparkan dialog pengesahan sebelum membatalkan banyak operasi.";
// When enabled, each time the user undo an operation it will undo the camera position as well
history.restoreCamera = "Pulihkan Kamera";
history.restoreCamera.help = "Aktifkan pilihan ini untuk memulihkan pandangan kamera yang disimpan apabila anda membatalkan/mengerjakan semula tindakan.";
// Undo
history.undo = "Batalkan";
// Redo
history.redo = "Ulang Semula";
// Shown during undo
history.state.undo = "Membatalkan: $0";
// Shown during redo
history.state.redo = "Melakukan semula: $0";
// Shown during undo/redo
history.state.symmetrySplit = "Bahagian Simetri";
// Shown during undo/redo
history.state.voxelRemesh = "Voxel remesh";
// Shown during undo/redo
history.state.surfaceRemesh = "Ubahsuai Semula Permukaan";
// Shown during undo/redo
history.state.multiresLevel = "Perubahan Resolusi";

// Debugging/Inspect object material (view channel separately color, roughness, normal, uv, etc)
inspect = "Pemeriksa";
// Inspector but SHORT
inspect.short = "Periksa";
// Display the material channel on the background
inspect.onBackground = "Di latar belakang";
// Display the material channel on the mesh
inspect.onMesh = "Di atas Mesh";
// Show UV seams
inspect.seams = "Seams";

// Interface customization
interface = "Antara Muka";

// UI customization: one item row will stands on one line (synonym: Inlined)
interface.compact = "UI: Padat";

// UI customization: each row of the list will be bigger
interface.expandList = "UI: Kembangkan senarai";
// UI customization: each row of the list will be bigger
interface.expandList.help = "Hanya satu pilihan UI untuk pengurusan senarai yang lebih mudah.";

// Add shortcuts buttons to the bottom of the screen
interface.bottomButtons = "Tambah pintasan (bawah)...";

// Interface option (main base color)
interface.colorBase = "Asas Warna";
// Interface option (accent widget color)
interface.colorSelect = "Widget Warna";
// Interface option (if the menus are transparent or opaque)
interface.panelTransparent = "Panel Transparan";
// Interface option (panel blurriness, if the menus are transparent)
interface.blurFactor = "Kekuatan Kabur";
// Interface option (color of panels, if the menus are transparent)
interface.colorBaseTransparent = "Panel Warna";

// Interface color style
interface.preset.title = "Pratetap";

// Reset interface settings
interface.resetAll = "Tetapkan Semula Gaya";
interface.resetAll.confirm = "Tetapkan semula tetapan antara muka?";
// help popup when hovering
interface.hoverHelp = "Bantuan popup pada hover";
// Interface option (main base color)
interface.iconSupport = "Butang Kontras Tinggi";
interface.iconSupport.help = "Gaya alternatif untuk butang yang menjadikannya lebih jelas apabila ia diaktifkan.

Jika ditetapkan pada Auto, Nomad akan menggunakan mod ini apabila kontras warna UI antara diaktifkan/dinaktifan adalah rendah.";
// Interface customization
interface.flipTop = "Cermin bar atas";
// Interface customization
interface.flipBottom = "Cermin bar bawah";
// Interface customization
interface.flipMiddle = "Cermin bar sisi";
// list of tools
interface.toolbox = "Kotak alat";
// hide toolbox by default
interface.toolbox.hide = "Tersembunyi";
// Interface customization (the toolbox is a grid, we can adjust the column count)
interface.toolbox.columns = "Kolum";
// Interface customization (the toolbox is a grid, we can adjust the column count)
interface.toolbox.rows = "Baris";
// Reset the tool's order in the toolbox
interface.toolbox.resetOrder = "Atur semula urutan";
// Colored text and icon
interface.toolbox.color = "Berwarna";
// Scale the interface
interface.scale = "Skala keseluruhan";
// Spacing between widgets
interface.cursorStep = "Jarak menegak";
// Width of the interface panels
interface.panelWidth = "Lebar panel";
// Size of fonts
interface.fontScale = "Skala fon";
// Inset
interface.inset.title = "Offsets tepi";
interface.inset.title.help = "Anda boleh menukar nilai-nilai ini hanya jika anda menghadapi masalah untuk berinteraksi dengan butang di tepi skrin.

Jika slider dinyahaktifkan, Nomad akan menggunakan nilai kawasan selamat yang dikembalikan oleh peranti itu sendiri.";

// (see Glossary for Layer)
layer = "Lapisan";
layers.syncTransform = "Sejajar transformasi";
layers.syncTransform.help = "Jika diaktifkan, semua lapisan yang tidak dipilih akan disesuaikan bergantung pada putaran, skala dan skew transform.

Matikan pilihan ini jika lapisan lain bertujuan untuk digunakan tanpa transform baru yang anda sedang laksanakan.

Apabila ditetapkan pada auto, hanya lapisan yang dapat dilihat sahaja yang akan disesuaikan.";
// (see Glossary for Layer)
layers.lock = "Simpan butiran layer atas";
// (see Glossary for Layer)
layers.lock.yes = "Kunci layer atas?";
// (see Glossary for Layer)
layers.lock.warning = "Semasa memahat, ubah bentuk yang datang dari layer atas akan diabaikan.

Namun butiran layer ini masih akan kelihatan.

Pilihan ini hanya berfungsi jika layer atas mempunyai butiran skala yang agak kecil.";
// (see Glossary for Layer)
layers.addLayer = "Tambah layer";
// (see Glossary for Layer)
layer.factors = "Faktor saluran";
// (see Glossary for Layer)
layer.factor = "Faktor";
// (see Glossary for Layer)
layer.offset = "Ofset";
// Layer blend mode
layer.blendMode = "Mod Campuran";
// (see Glossary for Layer)
layer.base = "Asas";
layer.base.nothing = "Tiada apa untuk diekstrak!";
layer.base.background = "Bahan latar belakang";
layer.base.background.help = "Jika aktif, hanya nilai bahan yang berbeza daripada bahan latar belakang akan diekstrak.";
// (see Glossary for Layer)
layers.title = "Lapisan";
// (see Glossary for Layer)
layers.title.help = "Layers boleh merakam ofset posisi dan lukisan, ia berguna untuk aliran kerja non-linear.
Sebagai contoh, dengan bereksperimen wajah berbeza tanpa mengharapkan sejarah untuk menyangkal perubahan.

Untuk data lukisan, layers disusun top-down; jadi layers diatas akan menutup yang di bawah.

Anda boleh memadam sebahagian daripada layer dengan menggunakan alat `DelLayer`.";
layers.primitive = "Layers tidak tersedia untuk primitif.";
// When there is no layer selected (see Glossary for Layer)
layers.baseSelected = "Tiada";

light = "Cahaya";
lights = "Cahaya";
// Intensity of light
light.intensity = "Intensiti";
// Color of light
light.color = "Warna";
// Kelvin (the temperature unit)
light.kelvin = "Kelvin";
// Temperature in Kelvin (Alternative way to compute the color of the light)
light.temperature = "Suhu";
// The attachment of a light defines how it will move when the user moves the camera
light.attachment = "Lampiran";
// The light will stay still even if the user moves the camera
light.attachment.fixed = "Tetap";
// The light will move along the camera
light.attachment.camera = "Kamera";
light.attachment.help = "• Tetap
Orientasi cahaya tidak akan berubah.

• Kamera
Orientasi cahaya bergantung kepada pandangan kamera.";
// Light type (directional, spot, point)
light.type = "Jenis";
// Directional light (synonym: sun light)
light.type.directional = "Bercahaya arah";
light.type.sun = "Matahari";
// Directional light (synonym: sun light)
light.type.environment = "Persekitaran";
light.type.hdri = "HDRI";
// Spot light emits light in a single direction, restricted by a cone shape.
light.type.spot = "Spot";
// Point light emits lights everywhere (synonym: omni, omnidirectional)
light.type.point = "Titik";
// For directional light (angle jitter)
light.angle = "Sudut";
// For point/spot light (offset jitter)
light.size = "Saiz";
// Cone angle for spot angles
light.spot.angle = "Sudut kerucut";
// Softness of the spot light
light.spot.softness = "Kelembutan";
// Position of the light
light.position = "Kedudukan";
// Enable or disable shadows for a light
light.shadow.cast = "Bayang";
// Point light only works with "screenspace" shadow type (not "shadow map")
light.shadow.pointTip = "Cahaya titik hanya menyokong bayang-bayang skrin.";
light.shadow.type = "Jenis Bayangan";
// https://en.wikipedia.org/wiki/Shadow_mapping
light.shadow.type.shadowMap = "Peta bayang";
// Shadows computed with only the information visible on screen
light.shadow.type.screenspace = "Kawasan skrin";
light.shadow.type.screenspace.help = "Fungsi eksperimental, mungkin akan dikeluarkan pada versi akan datang.

Pilihan ini seharusnya digunakan bersama fungsi kelembutan bayang-bayang.";
// Adjustment to fix artefacts
light.shadow.bias = "Agihan";
// How blurry the shadow is
light.shadow.softness = "Kelembutan";
// Contact shadows are more precise shadows on small distance (synonym: cavity shadows?)
light.contact = "Kontak";
light.contact.help = "Jika auto dipilih, hanya lampu paling dominan akan mempunyai bayang-bayang hubungan.";
// Thickness threshold for screen-space shadows (synonym: threshold, bias)
light.shadow.tolerance = "Toleransi";
// Activated the light
light.visible = "Paparkan";
// Move the light in front of the camera (but keeps its inner orientation)
light.resetPosition = "Pusatkan semula";

// Object's material
material = "Bahan";
// See glossary
material.pbrRoughnessMetalness.warning = "Roughness dan Metalness memerlukan mod shading PBR.";
// See glossary
material.pbrReflectance.warning = "Reflectance memerlukan mod shading PBR.";
// See glossary
material.pbrRefraction.warning = "Pembiasan memerlukan mod shading PBR.";
// See glossary
material.pbrSubsurface.warning = "Ruang bawah permukaan memerlukan mod shading PBR.";
// Value that says how much light will change direction when hitting the surface
material.ior = "Indeks Pembiasan";
// an object-level value that overrides the roughness interior/surface of the mesh
material.paintingOverride = "Gantikan kekasaran";
// The roughness in the inside is turbidity
material.paintingOverride.help = "Terdapat dua kekasaran yaitu yang mengatur permukaan dan yang di dalam. Namun, hanya ada satu kekasaran yang dapat dilukis, jadi kedua-dua kekasaran mempunyai nilai yang sama.";
// Glossiness is simply the opposite of roughness
material.refraction.surface = "Permukaan";
// Synonym: turbidity
material.refraction.interior = "Dalaman";
// Set the roughness of the object with a value of 0
material.paintGlossy = "Cat berkilat";
material.paintGlossy.help = "Ia akan melukis objek dengan kekasaran dan metalness 0, membolehkan pembiasan tajam.

Ini sama seperti pergi ke menu lukisan dan menggunakan ciri lukisan semua dengan warna dilumpuhkan.";
// Simulate the light being absorbed when it travels through the volume.
material.absorptionEnable = "Penyerapan";
material.absorptionEnable.help = "Simulasikan cahaya yang diserap semasa ia melalui volume.

Bahagian nipis akan cerah kerana lebih banyak cahaya boleh melalui, manakala kawasan tebal akan lebih gelap.

Kesan bergantung kepada bentuk objek, hanya anggaran ketebalan objek digunakan.";
material.absorptionFactor = "Faktor";
// Depth means how far the light can travel under the surface
material.subsurfaceDepth = "Kedalaman";
// Enable translucency (same as subsurface but only affect lights that enter a solid and escape from the other side)
material.translucency = "Tembus cahaya";
material.translucency.help = "Anda perlu mempunyai lampu yang menimbulkan bayang untuk melihat tembus cahaya.";
// Opacity factor, the opposite of transparency (synonym: Alpha)
material.opacity = "Ketekalan";
// Fully opaque material
material.type.opaque = "Legap";
material.type.opaque.help = "Ini adalah jenis bahan lalai.

Lukisan alpha vertex, tekstur kelegapan atau saluran alpha dari saluran warna akan tetap diambil kira melalui muncung.

Hanya gelangsar kelegapan utama akan diabaikan.";
// Fully opaque material
material.type.shadowCatcher = "Bayangan penangkap";
material.type.shadowCatcher.help = "Jadikan objek sepenuhnya lutsinar, kecuali bayangan yang dilemparkan oleh lampu.

Mod ini biasanya digunakan pada geometri pesawat.";
material.type.shadowCatcher.warning = "Tiada cahaya dengan bayang-bayang dalam adegan anda, Pemancar Bayang akan tidak aktif.

Sebaliknya, jika penangkap bayang sepenuhnya logam, Penangkap Bayang boleh memantulkan adegan sekiranya SSR (Refleksi) Proses Pascaproduksi diaktifkan.";
// See glossary
material.type.subsurface = "Bawah permukaan";
material.type.subsurface.help = "Untuk mendapatkan hasil terbaik, anda boleh bertukar ke mod pengarsiran PBR dan menggunakan sekurang-kurangnya satu cahaya arah, sebaiknya dengan suasana yang suram.";
// Transparency mode, alpha blendingd
material.type.blending = "Pencampuran";
material.type.blending.help = "Buat objek separa lut dengan mengubah nilai kelegapan.

Perhatikan bahawa kerana kekangan masa nyata, anda mungkin mengalami artifak visual yang ketara jika objek anda mempunyai bentuk yang kompleks.";
// Transparency mode
material.type.additive = "Penambahan";
material.type.additive.help = "Buat objek separa lut dengan mengubah nilai kelegapan.

Kaedah ini cenderung mempunyai lebih sedikit artifak daripada kaedah Pencampuran, tetapi objek akan menjadi lebih terang.";
// Transparency mode based on dithering
// https://en.wikipedia.org/wiki/Dither
material.type.dithering = "Dithering";
material.type.dithering.help = "Buat objek separa lut dengan membuang beberapa piksel secara rawak.";
// Simulate glass-like material
material.type.refraction = "Pembiasan";
material.type.refraction.help = "Mod ini boleh digunakan untuk mensimulasikan bahan kaca.

Disebabkan oleh kekangan masa nyata, pembiasan sendiri atau pembiasan berlapis berbilang adalah terhad.";
material.castShadows = "Membuang bayang";
material.receiveShadows = "Menerima bayang";
// Lights are ignored, the object will be displayed with color only
material.alwaysUnlit = "Sentiasa tidak diterangi";
// Inverse the side of the object triangles
// https://en.wikipedia.org/wiki/Back-face_culling
material.flipCulling = "Pengubahan pemotongan";
// How much light a surface will reflect (synonym: specular)
material.reflectance = "Pantulan";
material.reflectance.help = "Kawal jumlah pantulan yang akan diterima oleh bahan untuk bahan bukan logam.

Kebanyakan masa, nilai lalai harus digunakan (yang bersamaan dengan 4% cahaya dipantulkan pada sudut normal).";
// Material preview in the viewport
material.preview = "Pratonton paparan bahan";
material.preview.help = "Apabila anda mengubah suai bahan, pratonton akan dipaparkan dalam paparan pada objek yang dipilih.

Pratonton ditunjukkan semasa anda berinteraksi dengan gelangsar warna, kekasaran, logam, kelegapan dan intensiti.";
// Menu name
menu.files = "Fail";
// Menu name
menu.scene = "Adegan";
// Menu name
menu.multires = "Pelbagai resolusi";
// Menu name
menu.voxel = "Voxel";
// Menu name
menu.dynamic = "DynTopo";
// Menu name (Synonym: Misc, Other)
menu.topology = "Pelbagai";
// Menu name
menu.primitive = "Primitif";
// Menu name
menu.render = "Penghasilan";
// Menu name
menu.material = "Bahan";
// Menu name
menu.postprocess = "Pemprosesan Pasca";
// Menu name
menu.camera = "Kamera";
// Menu name
menu.background = "Latar Belakang";
// Menu name
menu.tool = "Alat";
// Menu name
menu.stroke = "Goresan";
// Menu name
menu.alpha = "Alpha";
// Menu name
menu.filter = "Penapis";
// Menu name
menu.falloff = "Pengurangan";
// Menu name
menu.paint = "Cat";
// Menu name
menu.symmetry = "Simetri";
// Menu name
menu.operation = "Operasi";
// Menu name (pencil pressure)
menu.pressure = "Tekanan";
// Menu name
menu.gesture = "Gaya Isyarat";
// Menu name
menu.layers = "Lapisan";
// Menu name
menu.settings = "Tetapan";
// Menu name
menu.interface = "Antara Muka";
// Menu name
menu.bindings = "Pengikatan";
// Menu name
menu.history = "Sejarah";
// Menu name
menu.historySettings = "Tetapan";
// Menu name
menu.about = "Tentang";
// Menu name
menu.debug = "Nyahpepijat";

// Operation on the object (action)
mesh.holes = "Lubang";
// If the object has holes, the algorithm will close them
mesh.holes.close = "Tutup lubang";
// Says how dense (number of triangles) the algorithm will use in order to fill holes
mesh.holes.detail = "Perincian";
// If the mesh has disconnected parts, it will be split/separated into objects
mesh.separate = "Pisahkan";
// When converting the object to a triplanar primitive, some object features will be lost
mesh.triplanar.warning = "Lapisan, cat dan multitahap akan hilang.";
// Resolution of the triplanar grid
mesh.triplanar.resolution = "Resolusi";
// Make the triplanar a regular cube (all 3 dimension equal)
mesh.triplanar.cubic = "Paksa kubik";
// Covnert an object to a triplanar primitive
mesh.triplanar.convert = "Tukar";
// Static object means "static topology"
mesh.static = "Mesh";
// See glossary
mesh.multires = "Multires";
// Dynamic topology
mesh.dynamic = "DynTopo";

// Disable this option to have per-tool material settings (instead of shared settings)
paint.useGlobal = "Bahan global";
paint.useGlobal.help = "Jika pilihan ini diaktifkan, bahan yang dipilih akan sama dengan alat lain. 

Hanya ketegaran, kemetalan dan tetapan warna yang diambil kira.";
// The current tool will paint the object if this option is enabled
paint.usePainting = "Pewarnaan Goresan";
// If true save the textures data into
paint.preset.embed = "Benamkan tekstur";
paint.preset.embed.help = "Tekstur boleh didapati dalam folder Nomad textures/. Praset tetapan bahan terdapat dalam folder Nomad materials/. Apabila pilihan ini dimatikan, praset tetapan bahan hanya merujuk tekstur di dalam folder textures/. Anda boleh mengaktifkan pilihan ini untuk membuat salinan tekstur di dalam praset tetapan bahan. Ini berguna jika anda ingin berkongsi praset tekstur tanpa menyediakan tekstur berkaitan.";
paint.preset.embed.apply = "Terapkan kepada semua bahan";
// Factor/Opacity of paint tool
paint.intensity = "Intensiti Cat";
// Apply the paint on the object
paint.paintAll = "Cat semua";
paint.paintAll.help = "Sapukan bahan semasa pada objek.";
paint.paintAll.help.mask = "Kawasan bertopeng tidak akan terjejas.";
paint.paintAll.help.hide = "Kawasan tersembunyi tidak akan terjejas.";
paint.paintAll.help.opacity = "Gunakan faktor lukisan alat di atas.";
paint.paintAll.help.layer = "Kawasan lapisan yang tidak dicat tidak akan terjejas.";
paint.strokePainting.title = "Pewarnaan";
// Brush stroke texture
paint.texture.warningEnable = "Pewarnaan goresan perlu diaktifkan untuk membenarkan unjuran tekstur (tanda sah pada bahagian atas)!";
paint.texture.warningIgnored = "Alat semasa tidak boleh menggunakan tekstur!";
// use stencil mode
paint.stencil = "Stensil";
// Inherit stroke falloff option for the painting
paint.tool.help = "Gunakan alat alpha, kejatuhan dan pengacak untuk memodulatkan intensiti sapuan lukisan.

Pilihan ini diabaikan untuk ciri cat semua, tetapi alpha diambil kira untuk varian triplanar.";
// when the user choose a new item name (through iOS/Android virtual keyboard)
input.name = "Nama baru";
// when the user choose a new number value (through iOS/Android virtual keyboard)
input.number = "Nilai baru";
// when the user choose a new color (through iOS/Android virtual keyboard)
input.hexcolor = "Warna baru (format hex)";

// Post process effect
postprocess = "Pemprosesan Pasca";
// Denoise
postprocess.denoise = "";
postprocess.denoise.help = "";
postprocess.denoise.warning = "";
// Quality vs performance
postprocess.quality = "Kualiti";
postprocess.quality.help = "Aktifkan pilihan ini untuk meningkatkan kualiti dengan kos pada prestasi.";
// More samples means better quality but slower performance
postprocess.maxSamples = "Sampel maksimum";
// Full resolution (1:1 resolution) instead of half resolution
postprocess.fullResolution = "Resolusi penuh";
// Number of frames that we accumulate (higher value means better quality)
postprocess.accumulateCount = "Sampel Bingkai Maksimum";
postprocess.accumulateCount.help = "Bilangan bingkai maksimum untuk dikumpulkan sebelum rendering berhenti.

Apabila rendering berhenti, Nomad tidak akan melakukan apa-apa, menjimatkan hayat bateri.

Banyak ciri rendering mendapat manfaat daripada pengumpulan bingkai, terutamanya:
• Bayang-bayang Lembut
• Pencahayaan Global
• Pantulan (SSR)
• Occlusion Ambien
• Bawah Permukaan
• Kedalaman Medan

Kiraan bingkai yang tinggi kebanyakannya diperlukan untuk Bayang-bayang Lembut dan Pencahayaan Global.
Nomad boleh menghentikan rendering lebih awal jika ciri di atas dinyahdayakan.";
// The value is a ratio (0.5 means half resolution 2 means twice the resolution)
postprocess.renderRatio = "Resolusi Render";
postprocess.renderRatio.warning = "Ditetapkan oleh kesan Seni Piksel.";
postprocess.renderRatio.help = "Pilihan ini mempengaruhi prestasi dengan banyak.
Adalah dinasihatkan untuk mengekalkan nilai yang lebih rendah daripada x1.25.

Pilihan ini tidak disimpan dalam tetapan.";
// Temporal Anti-Aliasing (no need to translate "TAA")
postprocess.taa = "Anti-Alias (TAA)";
postprocess.taa.help = "Mengurangkan kerlipan apabila anda menggerakkan kamera.";
// Ditherhing pixel
postprocess.dithering = "Dithering";
postprocess.dithering.help = "Dither piksel untuk mengurangkan artifak jalur.";
// Screen-Space Reflection (no need to translate "SSR")
postprocess.ssr = "Pantulan (SSR)";
postprocess.ssr.warning = "SSR memerlukan mod perona PBR.";
// Screen-Space Global Illumination (no need to translate "SSGI")
postprocess.ssgi = "Pencahayaan Global (SSGI)";
// Thickness threshold for ssgi tracing algorithm (synonym: threshold, bias)
postprocess.ssgi.tolerance = "Ketahanan";
postprocess.ssgi.warning = "SSGI memerlukan mod perona PBR.";
// Screen-space ambient occlusion (SSAO)
// https://en.wikipedia.org/wiki/Ambient_occlusion
postprocess.ssao = "Penutupan Persekitaran";
// How far the effect spreads
postprocess.ssao.radius = "Saiz";
// How strong the effect is
postprocess.ssao.factor = "Kekuatan";
// Adjustment to fix artefacts
postprocess.ssao.bias = "Bias Kelengkungan";
postprocess.ssao.bias.help = "Betapa sensitif efek itu bergantung pada kelengkungan permukaan.";
// Depth of Field (bokeh)
// https://en.wikipedia.org/wiki/Depth_of_field
postprocess.dof = "Kedalaman Medan";
// The blur factor behind the focused point
postprocess.dof.blurFar = "Kesan kabur yang jauh";
// The blur factor in front of the focused point
postprocess.dof.blurNear = "Kabur Berdekatan";
postprocess.dof.focusTip = "Ketuk objek untuk mengubah titik fokus.";
// Bloom (light bleeding)
// https://en.wikipedia.org/wiki/Bloom_(shader_effect)
postprocess.bloom = "Pemekaran";
// Intensity of the effect
postprocess.bloom.intensity = "Keamatan";
// How far the effect spreads
postprocess.bloom.radius = "Radius";
postprocess.bloom.radius.help = "Betapa meluasnya bloom ini.";
// Luminosity threshold (below this value, no bloom is generated)
postprocess.bloom.threshold = "Ambang";
postprocess.bloom.threshold.help = "Ambang luminositi untuk menentukan sama ada piksel akan menghasilkan bloom atau tidak.
Jika nilai itu adalah 0, segala-galanya akan menerima bloom.";
// https://en.wikipedia.org/wiki/Tone_mapping
postprocess.tone = "Pemetaan Nada";
postprocess.tone.exposure = "Pendedahan";
postprocess.tone.contrast = "Kontras";
postprocess.tone.saturation = "Ketepuan";
postprocess.tone.hue = "Warna";
// No tonemapping operator is used
postprocess.tone.mapping.none = "Tiada";
// A neutral tonemapping is used
postprocess.tone.mapping.neutral = "Neutral";
// Color curves
postprocess.curve = "Penilaian Warna";
// Curve for pixel luminance
postprocess.curve.luminance = "Utama";
postprocess.curve.red = "Merah";
postprocess.curve.green = "Hijau";
postprocess.curve.blue = "Biru";
// Reset color grading curves
postprocess.curve.resetAll = "Tetapkan Semula Semua";
// https://en.wikipedia.org/wiki/Chromatic_aberration
postprocess.chromatic = "Aberasi Kromatik";
postprocess.chromatic.factor = "Kekuatan";
// Darking on the edges
postprocess.vignette = "Vinyet";
// How far the effect spreads
postprocess.vignette.size = "Saiz";
// How sharp the edge of the effect is
postprocess.vignette.hardness = "Kesukaran";
// Unblur the image (sharpening)
// https://en.wikipedia.org/wiki/Unsharp_masking
postprocess.sharpness = "Ketajaman";
postprocess.sharpness.factor = "Kekuatan";
// Filmic Grain
// https://en.wikipedia.org/wiki/Film_grain
postprocess.grain = "Bijian";
postprocess.grain.factor = "Kekuatan";
// Accentuate the edges of the model
postprocess.curvature = "Kelengkungan";
// main strength of curvatre
postprocess.curvature.factor = "Faktor";
// Color/Strength of concave curvature
postprocess.curvature.cavity = "Kedalaman";
// Color/Strength of convex curvature
postprocess.curvature.bump = "Benjolan";
// https://en.wikipedia.org/wiki/Pixel_art
postprocess.pixelArt = "Seni Piksel";
// Override frame accumulation feature
postprocess.pixelArt.allowAccumulate = "Benarkan pensampelan bingkai";
// Simulate scanline rendering (horizontal line)
postprocess.scanline = "Garis Imbas";
postprocess.scanline.factor = "Faktor";
// Spacing between lines
postprocess.scanline.spacing = "Jarak";

// Geometry Primitive (box, sphere, cylinder, etc)
primitive = "Primatif";
primitive.box = "Kotak";
primitive.sphereCube = "Sfera";
primitive.sphereUV = "Sfera UV";
primitive.icosahedron = "Ikosahedron";
primitive.cylinder = "Silinder";
primitive.cone = "Kon";
primitive.torus = "Torus";
primitive.lathe = "Kayu Lathe";
primitive.tube = "Tiub";
primitive.plane = "Pesawat";
primitive.triplanar = "Tiga dimensi";
primitive.needValidate = "Primatif sepatutnya disahkan!";

// If enabled, we can edit primitive inside the viewport
primitive.edit = "Sunting";
primitive.edit.help = "Benarkan penyuntingan 3D dalam viewport.

Anda boleh menanggalkan ciri ini jika mahu berinteraksi dengan Gizmo atau alat Transformasi tanpa mengubah primatif.";

// Primitive configuration
primitive.mainConfig = "Parameter";
// Interface section where we change the topology (number of triangles/polygons)
primitive.topology = "Topologi";
// Interface section where we change the geometry (shape of the primitive)
primitive.geometry = "Geometri";

// Validating the primitive (then it can be sculpted)
primitive.validate = "Sahkan";
// Maximum number of faces of the primitives
primitive.maxFaces = "Wajah maksimum";
primitive.maxFaces.help = "Bilangan maksimum muka yang boleh dimiliki oleh primitif.

Had ini hanya aktif semasa primitif tidak disahkan, selepas itu perlindungan akan hilang.";
// Synonym: Flat subdivision
primitive.linear = "Pembahagian linear";
// Post as "subdivision that occurs after the primitive computation"
primitive.subdivision = "Pembahagian selepas";

// Radius (of a sphere, torus, etc)
primitive.radius = "Jari-jari";
// Make sure the two end-point of a primitive (cylinder, tube, etc) have the same size
primitive.radius.sync = "Jari-jari sama";
primitive.radius.start = "Mulakan jari-jari";
primitive.radius.end = "Akhir jari-jari";
// Size (of cube x dimension)
primitive.size = "Saiz";
primitive.sizeX = "Saiz X";
primitive.sizeY = "Saiz Y";
primitive.sizeZ = "Saiz Z";
// Division only impacts the topology (synonym: resolution)
primitive.division = "Pembahagian";
primitive.divisionX = "Pembahagian X";
primitive.divisionY = "Pembahagian Y";
primitive.divisionZ = "Pembahagian Z";
// Angle of torus, etc
primitive.angleX = "Sudut X";
primitive.angleY = "Sudut Y";
primitive.angleZ = "Sudut Z";
// It means we try to keep regular sized quad (square) instead of highly distorted rectangule
primitive.constantDensity = "Ketumpatan tetap";
// Make sure the shape is perfectly spherical
primitive.projectOnSphere = "Projek pada sfera";
primitive.projectOnSphere.help = "Menyesuaikan titik pada sfera yang sempurna.";

// triplanar
primitive.triplanar.title = "Triplanar";
primitive.triplanar.title.help = "Triplanar menggunakan maklumat topeng dari 3 satah untuk mengisi grid voxel yang kemudian dijadikan poligon.

Jika anda berinteraksi dengan leret pembahagian atau saiz, maklumat lukisan akan direset (kelicinan baik).

Anda mungkin harus mematikan simetri kerana ia mungkin tidak berfungsi sebagaimana dijangka.

Anda boleh menggunakan pilihan `Bersambung Topologi` dalam panel topeng untuk melukis satah yang mempengaruhi satah lain.";
// Make sure the box is a regular cube (same 3 dimension)
primitive.triplanar.sameSize = "Saiz sama (kubus)";
primitive.triplanar.polish = "Kehalusan";
// Mask refers to the painted mask on the triplanar planes
primitive.triplanar.resetMask = "Tetap semula topeng";
// One side of a cube (the back plane)
primitive.isolate.back = "Belakang";
// One side of a cube (the right plane)
primitive.isolate.right = "Kanan";
// One side of a cube (the bottom plane)
primitive.isolate.bottom = "Bawah";
// Plane
primitive.planeSameSize = "Saiz sama (segi empat)";
// Make the plane a disk/ellipse instead of a rectangle
primitive.planeDisk = "Cakera";
// Box
primitive.boxRegular = "Saiz sama (kubus)";
// Torus
primitive.torus.radiusOuter = "Jejari luar";
primitive.torus.radiusInner = "Jejari dalam";
primitive.torus.angle = "Sudut";
primitive.torus.angleOffset = "Anjak sudut";
// Cylinder
primitive.cylinder.height = "Ketinggian";
// Cone
primitive.cone.radius = "Jejari";
primitive.cone.height = "Ketinggian";
// Hole sub menu (cylinder, tube, etc)
primitive.hole = "Lubang";
// Make a hole in the primitive to make it hollow
primitive.hasHole = "Ada lubang";
// Curve profile (synonym: profile, curve)
primitive.profile = "Profil";
primitive.profile.viewport = "Tunjuk dalam viewport";
// If the revolution surface has caps (E.g: cylinder)
primitive.cap = "Tutup";

// Singular of Repeaters (Nodes that make many copies of its children (type of mirror/curve/array/radial))
repeater = "Pengulang";
// All the new items will be inserted inside the bound rather than outside
repeater.array.fitInside = "Sesuaikan dalam";
// The object will follow the curve
repeater.curve.align = "Selaras";

// Import resource (Alpha, Textures, MatCaps, etc)
resource.import = "Import...";
// iOS Photos gallery
resource.import.ios.photos = "Gambar";
// iOS Files App
resource.import.ios.files = "Fail";

scene.title = "Adegan";
scene.title.help = "Apabila menggunakan butang kelihatan/pilih, tahan dan seret jari anda untuk memilih objek lain dengan mudah.

Anda juga boleh menekan lama butang kelihatan/pilih untuk mempengaruhi anak juga.";
// The view will focus on the item when we click on it
scene.focus = "UI: Fokus pada item semasa ketukan dua kali";
// Add new object on gizmo position
scene.addOnGizmo = "Pada gizmo";
scene.addOnGizmo.help = "Pindahkan nod pada posisi gizmo (jika alat gizmo dipilih)";
// Select the gizmo tool after adding a new object
scene.addSelectGizmo = "Pilih gizmo";
scene.addSelectGizmo.help = "Pilih alat gizmo semasa menambah nod baru";
// Icon size in pixel (min/max)
scene.iconSize = "Saiz ikon";
// Min size of icon
scene.iconSize.min = "Min";
// Max size of icon
scene.iconSize.max = "Maks";
// display hierarchy lines (visibility helper)
scene.showHierarchy = "Garis Hierarki";
scene.showHierarchy.help = "Tunjukkan garis antara induk dan anak-anaknya di tampilan depan.";
scene.showHierarchyNomadPivot = "Gunakan pivot Nomad";
scene.showHierarchyNomadPivot.help = "Pivot Nomad adalah poros yang digunakan oleh alat Transform dan Gizmo.

Jika pilihan ini dinonaktifkan, akan menggunakan pivot dasar alami.
Dalam beberapa kasus, pivot dasar ini bisa jauh dari pusat objek itu sendiri!";
// The view will focus on the item when we click on it
scene.syncVisible = "Sinkronkan Visibilitas";
scene.syncVisible.help = "Saat diaktifkan, menggunakan ikon terlihat (mata) akan mempengaruhi semua item yang dipilih.";
// Merge 2 objects without modifying the geometry or the topology
scene.join = "Gabung";
// Group the selected object with a new created Empty Node as a parent
scene.group = "Grup";
// Move the item outside its parent (synonym: ungroup)
scene.unparent = "Lepas Induk";
// Mirror node type, a node that make many copies of its children (mirror symmetry)
scene.mirror = "Cermin";
// Curve node type, a node that make many copies of its children (along a curve)
scene.curve = "Lengkung";
// Array node type, a node that make many copies of its children (grid repetition pattern)
scene.array = "Tatasusunan";
// Radial node type, a node that make many copies of its children (radial symmetry)
scene.radial = "Radial";
// Nodes that make many copies of its children (type of mirror/curve/array/radial)
scene.repeaters = "Repeater";
scene.repeaters.help = "Node repeater yang membuat salinan dari setiap geometri di bawahnya dalam hirarki adegan.";
// Validate button
scene.validateGroup = "Validasi";
// Keep instances in the scene
scene.validateGroup.keepInstances = "Simpan instansi";
// If we should join children
scene.validateGroup.joinChildren = "Gabung anak-anak";
// Merge/weld 2 objects by recomputing all the topology and creating a new object
scene.mergeVoxel = "Merge voxel";
scene.voxelResolution = "Resolusi";
// The hidden objects will be "substracted" (the object will carve the other object)
scene.subtractionTip = "Tolakan: Objek tersembunyi";
// If all the objects are hidden, only the parts where they intersect (collide) will be kep
scene.intersectionTip = "Persimpangan: Semua objek tersembunyi";

// Need at least to select one object
scene.noneButNeedAtLeastOne = "Tidak ada objek yang dipilih, silakan pilih setidaknya satu objek.";
// Need to select one object only
scene.noneButNeedOne = "Tidak ada objek yang dipilih, silakan pilih satu objek.";
// Need to select one object only
scene.onlyOneObject = "Beberapa objek dipilih, silakan pilih hanya satu objek.";
// Boolean operation
scene.boolean = "Boolean";
scene.boolean.help = "Gabung, kurangi, atau potong objek dengan melakukan operasi boolean.

Operasi bisa gagal jika beberapa objek tidak manifold atau tidak kedap air.

Jika boolean gagal, Anda selalu dapat menggunakan remesher voxel pada objek yang bermasalah untuk memastikan itu adalah manifold kedap air.";
// Weld intersection
scene.boolean.mergeIntersection = "Las sambungan";

// General scene display settings
settings.display.title = "Pengaturan tampilan";
// Wireframe (show triangles and quad edges)
settings.wireframe = "Kerangka dawai";
// Display the material texture
settings.debugChannel = "Tampilkan Tekstur";
// Display the material texture in the background
settings.debugChannel.onBackground = "Di Latar Belakang";
// Display the material texture on the mesh
settings.debugChannel.onMesh = "Pada Mesh";
// If the object is opened (a simple plane for example), two sided means we'll be able to see if from the two sides of the planes
settings.twoSided = "Dua belah";
settings.twoSided.help = "Permukaan boleh dilihat dari kedua belah pihak.";
// If we colorize the inverted side of faces
settings.backface.color = "Warna permukaan belakang";
// Color of the inverted side of faces
settings.backface.colored = "Warna belakang";
// Outline (contour highlight around the selected object)
settings.outline = "Garis luar";
// Outline (contour highlight around the selected object)
settings.outline.help = "Objek terpilih akan digaris luar.";
settings.outline.thickness = "Ketebalan";
// Navigation cube (easy to snap/align the view)
settings.snapCube = "Padu kiub";
// Move the navigation cube to the bottom of the screen
settings.snapCube.bottom = "Bawah";
// Move the navigation cube on the left side of the screen
settings.snapCube.left = "Kiri";
// Flip the camera (rotate 180° to see the other side)
settings.snapCube.flip = "Putar 180°";
settings.snapCube.flip.help = "Putar pandangan jika pandangan sudah dipadankan.";
// Alignment (can be auto/on/off)
settings.snapCube.align = "Hadkan penyelarasan";
settings.snapCube.align.help = "Selaraskan pandangan ke paksi dunia. Jika diaktifkan, hanya 6 pandangan padanan boleh dilakukan.

Pada Auto, had hanya berlaku jika kamera berada dalam mod Orbit.";
// Stats (information logs about the scene displayed on screen)
settings.stats = "Statistik";
settings.stats.right = "Kanan";
settings.stats.all = "Tunjukkan keseluruhan adegan";
// Grid
settings.grid = "Grid";
// Cursor
settings.cursor.title = "Kursor";
settings.cursor.whileSculpting = "Tunjukkan bulatan semasa menyusun";
// A small indicator dot
settings.cursor.showDot = "Tunjukkan titik kecil";
settings.cursor.showDot.help = "Titik boleh muncul sebagai titik putaran kamera atau semasa anda menyusun.";
settings.cursor.showRope = "Tunjukkan penstabil tali";
// indicator
settings.indicator.title = "Petunjuk";
settings.indicator.title.help = "Paparkan petunjuk visual (tutorial, tangkapan skrin, dll).";
settings.indicator.size = "Saiz";
// Highlight (the object glows when we select it)
settings.highlight.selection = "Sorotan pilihan";
// Highlight settings
settings.highlight = "Sorotan";
settings.highlight.duration = "Jangka masa";
// Mesh that are not selected will be dark
settings.darkenUnselected = "Gelapkan objek yang tidak dipilih";
// https://en.wikipedia.org/wiki/Shading
settings.smoothShading = "Penyusunan lancar";
// Experimental feature
settings.partialDraw = "Lukisan sebahagian";
settings.partialDraw.help = "Ciri eksperimen!

Gunakan jika anda sedang menyusun bahagian yang agak kecil dari mesh poligon tinggi.

Ia sepatutnya membuat penyusunan lebih lancar, tetapi anda tidak sepatutnya mengaktifkan rangka wayar!

Ia juga mungkin menambah artefak visual semasa sapuan berus";
settings.partialDraw.warning = "Jangan lupa untuk mematikan pilihan ini jika artefak visual terlalu mengganggu!";
// Disable this option to force a white uniform paint instead of showing the objects painting
settings.showPainting = "Tunjukkan cat";
// Show and use the masking on the mesh
settings.showMasking = "Tunjukkan topeng";
// Disable this option to force show the hidden faces
settings.showDiscard = "Gunakan Sembunyi";
// Show icon on the canvas
settings.icon = "Ikon";
// Show icons on the canvas
settings.icons = "Ikon-ikon";
// Tooltip
settings.icons.help = "Paparkan ikon pada kanvas supaya anda boleh memilih dan mengeditnya secara langsung.";
// Hole filling settings
settings.hole = "Isian Lubang";
// Allow the hole filling algorithm to handle non-manifold (non regular topology)
settings.hole.nonManifold = "Isi bukan manifold";
settings.hole.nonManifold.help = "Cuba untuk mengisi lubang bukan manifold.
Pilihan ini tidak disimpan dalam tetapan.";
// Maximum number of vertices (points)
settings.multires.maxVertices = "Kira maksimum simpul";
settings.multires.maxVertices.help = "Nomad tidak melaksanakan pemeriksaan memori sebelum pembahagian, kiraan poligon yang tinggi boleh membawa kepada kerosakan.";
settings.multires.lowResVertices = "Ambang resolusi rendah";
settings.multires.lowResVertices.help = "Resolusi mesh yang lebih rendah boleh dipaparkan apabila anda menggerakkan kamera.

Anda boleh meningkatkan nilai ini jika mahu memaparkan resolusi mesh yang lebih tinggi.";

// The main rendering mode
shading = "Pewarnaan";
// Main rendering mode (PBR stands for Physically Based Rendering)
shading.pbr = "Cerah (PBR)";
shading.pbr.help = "Dalam mod ini, anda boleh menambah lampu (dengan bayang) bersama-sama dengan persekitaran HDR.

Anda juga boleh melukis kekasaran dan kekilapan, membolehkan kawalan lebih halus pada penampilan bahan anda.";
// Fast rendering mode for sculpting purpose
shading.matcap = "MatCap";
shading.matcap.help = "MatCap bermaksud MATerial CAPture, mengambil kira kedua-dua maklumat cahaya dan bahan dalam satu imej.

Ini adalah mod rendering cepat, kebanyakannya dientukan untuk tujuan membentuk bentuk kasar.";
// Unlit rendering mode, it simply displays a solid/flat color
shading.unlit = "Tanpa cahaya";
shading.unlit.help = "Mod pewarnaan warna solid, tanpa pencahayaan.";
// Helper rendering mode that display solid colors
shading.object = "ID Objek";
shading.object.help = "Mod rendering tanpa pencahayaan dengan setiap objek mempunyai warna rawak yang ditetapkan.

Mod ini berguna terutamanya apabila anda mempunyai banyak objek dalam pemandangan anda.";
// Helper rendering mode that display solid colors
shading.instance = "ID Instansi";
shading.instance.help = "Sama seperti ID Objek, tetapi instansi akan mempunyai warna yang sama.";
// Helper rendering mode that display solid colors
shading.material = "ID Bahan";
shading.material.help = "Tunjukkan warna padat untuk setiap instans bahan.";
// Randomize colors
shading.id.randomize = "Acak id";
shading.textures = "Gunakan tekstur";
shading.textures.help = "Pada masa ini, anda tidak boleh mencipta atau mengedit tekstur dalam Nomad.

Tetapi jika anda mengimport fail dengan tekstur di dalamnya, ia sepatutnya berfungsi.

• Tekstur yang disokong
Kelegapan: Lit, MatCap, Unlit
Normal: Lit, MatCap
Warna: Lit, Unlit
Emissive: Lit
Kekasaran: Lit
Kekacauan: Lit";
// Lights
shading.lights = "Cahaya";
shading.lights.addLight = "Tambah lampu";
shading.lights.warning = "Cahaya memerlukan mod pewarnaan PBR.";
// Environment based lighting (synonym: HDRI)
shading.environment = "Persekitaran";
shading.environment.import = "Import HDR";
shading.environment.exposure = "Dedahan";
shading.environment.backgroundBlur = "Kaburkan (latar belakang)";
shading.environment.rotation = "Putaran";
shading.environment.rotation.help = "Anda boleh memutar persekitaran dengan menyeret 3 jari secara mendatar pada pandangan.";
// The environment will always be aligned with the camera (so that the lighting is consistent)
shading.environment.attachedToCamera = "Melekat pada kamera";
shading.environment.attachedToCamera.help = "Lampirkan persekitaran ke kamera.

Ia akan memaksa pencahayaan menjadi konsisten, yang berguna untuk tujuan pengukiran.";
shading.matcap.rotation = "Putaran";
shading.matcap.rotation.help = "Anda boleh memutar MatCap dengan menggerakkan 3 jari secara mendatar pada viewport.";
shading.matcap.global = "Gunakan MatCap global";
shading.matcap.global.help = "Nyahtanda pilihan ini untuk menggunakan MatCap yang berbeza untuk mesh tertentu ini.";

// bottom shortcut buttons (should be SHORT)
shortcut.maskVisible = "Topeng";
shortcut.solo = "Solo";
shortcut.xray = "X-Ray";
shortcut.voxelRemesh = "Voxel";
shortcut.wireframe = "Wayar";
shortcut.cameraReset = "Tetap semula";
shortcut.cameraSnap = "Lekat";
shortcut.lockSelection = "Kunci";
shortcut.lockSelection.help = "Apabila diaktifkan, anda tidak boleh menukar pilihan dengan mengetik pada mesh.";
shortcut.perspective = "Persp";
shortcut.grid = "Grid";

// Memory taken by the scene
stat.ramScene = "Penggunaan Memori dalam adegan";
// Vram = Video RAM (Video Memory, the memory of the graphic card)
stat.vramScene = "Vram dalam adegan";
// Vram = Video RAM (Video Memory, the memory of the graphic card)
stat.vramRender = "Render Vram";
// Vram = Video RAM (Video Memory, the memory of the graphic card)
stat.vramTextures = "Tekstur Vram";
// Memory taken by the undo/redo history
stat.ramHistory = "Sejarah";
// Memory taken by other stuffs
stat.ramOther = "Lain-lain";
// Memory used by the app (RAM, not storage!)
stat.usedMemory = "Memori Digunakan";
// Memory available for the app (RAM, not storage!)
stat.freeMemory = "Memori Percuma";
// RAM, not storage!
stat.ram = "RAM";
stat.used = "Digunakan: $0";
stat.free = "Percuma: $0";
stat.faces = "Saiz";
stat.triangles = "Segitiga";
stat.vertices = "Vertex";
// quadrangular polygon (polygon with 4 sides)
stat.quads = "Segi empat";
stat.vertex = "Bucu";
stat.scene.face = "Permukaan muka";
stat.scene.vertex = "Titik bucu permukaan";

// Brush stroke
stroke = "Sapuan";
// The brush radius is either screen-space (fixed size on the screen) or world-space (fixed size in the scene)
stroke.useWorldRadius = "Jari-jari ruang dunia";
// The settings is shared among every tools
stroke.useWorldRadius.help = "Ini dikongsi di antara setiap alat.";
// Share the radius value among every tools.
stroke.useShareRadius = "Kongsi jari-jari";
stroke.useShareRadius.help = "Kongsi nilai jari-jari antara setiap alat.";
// When doing a brush stroke, the spacing is the distance between 2 sculpt operations
stroke.spacing = "Jarak sapuan";
// Adjust the brush intensity to ensure consistent deformation depending on the stroke spacing.
stroke.spacing.adjust = "Sesuaikan intensiti jarak";
stroke.minSpacingAdjustIntensity.help = "Sesuaikan intensiti berus untuk memastikan deformasi konsisten bergantung pada jarak sapuan.";
stroke.minSpacing.help = "Jarak antara setiap sapuan, berbanding dengan jari-jari alat.

Nilai lebih rendah akan menghasilkan sapuan lebih lembut tetapi prestasi akan menurun.";
// Brush stroke smoothing
stroke.lazySmooth = "Pelembutan sapuan";
stroke.lazySmooth.help = "Puratakan pelbagai kedudukan penunjuk untuk mendapatkan sapuan yang lebih lembut.

Dengan nilai tinggi, sapuan akan tertinggal daripada penunjuk tetapi akan menyusul akhirnya.";
// Make the brush stroke lags behind the pointer cursor
stroke.lazyRadius = "Penstabil tali lambat";
stroke.lazyRadius.help = "Sapuan akan tertinggal daripada kedudukan penunjuk mengikut jarak tertentu.

Ini boleh digunakan untuk melukis garisan yang licin.";
// It is not a per-tool settings
stroke.globalSettings = "Ini ialah tetapan global";
// Start the brush stroke from the last sculpted position to ensure there is no discontinuity
stroke.snapRadius = "Jejari jepit";
stroke.snapRadius.help = "Jepit strok jika penunjuk berada berhampiran dengan strok yang telah direkodkan terakhir.

Ia boleh berguna semasa melukis garisan panjang yang berterusan, sambil kerap berhenti.";
// offset between the cursor and the brush stroke (for fat finger on small screen)
stroke.sculptOffset = "Ofset strok";
stroke.sculptOffset.help = "Terapkan ofset berterusan ke atas strok.

Pilihan ini hadir untuk membantu pada skrin kecil semasa menggunakan jari, supaya jari anda tidak menutup strok.";
stroke.accumulate = "Himpun strok";
stroke.accumulate.help = "Jika pilihan ini diaktifkan, tiada had untuk berapa banyak bahan yang anda boleh tambahkan/hapuskan bagi setiap strok.";
// The tool can use DynTopo
stroke.useDynamic = "Benarkan topologi dinamik";
// Only sculpt the part that are linked topologically
stroke.connect = "Topologi bersambung";
stroke.connect.help = "Pilihan ini hanya akan memahat titik-titik bucu yang berkaitan dengan permukaan yang dipilih.

Ini biasanya digunakan untuk alat Pindah, contohnya jika anda ingin memindahkan bahagian yang bersilang dengan bahagian lain secara eksklusif.";
stroke.connect.short = "Bersambung";
// sculpt on hide or mask
stroke.protect = "Lindungi kawasan";
stroke.protect.hide.help = "Apabila ditetapkan perkasa, wajah tersembunyi akan diedit jika wireframe pada wajah tersembunyi kelihatan (lihat menu wireframe).";
// Only sculpt the vertex that points toward the camera
stroke.culling = "Hanya verteks menghadap depan";
stroke.culling.help = "Pilihan ini akan mengabaikan verteks menghadap belakang.

Ia berguna jika anda ingin melukis sebahagian geometri nipis tanpa menjejaskan sebelah yang lain.

Ia juga berfungsi untuk mengukir tetapi anda mungkin mengalami beberapa artifak.";
// Infinite depth, move everything under the circle, disregarding depth
stroke.silhouette = "Siluet";
stroke.silhouette.view = "Paparan";
stroke.silhouette.snapped = "Jika disesuaikan";
stroke.silhouette.closest = "Paling hampir";
// Only sculpt the vertex that points toward the direction of the deformation
stroke.sameSide = "Hanya verteks sebelah sama";
stroke.sameSide.help = "Abaikan verteks yang menunjuk ke arah bertentangan dengan pembentukan.";
stroke.onlyLasso = "Tetapan hanya aktif untuk alat lasso.";

// Here sampling refers to the app gathering information under the mouse
stroke.area = "Pensampelan kawasan";
stroke.area.help = "Sebahagian berus atau pilihan strok memerlukan satah normal ke permukaan untuk berfungsi.
Anda boleh mengawal cara mengira satah purata ini dengan menetapkan kawasan pensampelan sebagai nisbah radius alatan.

Pada 100%, setiap titik dalam bulatan pemilihan diambil kira.
Pada 0%, hanya verteks atau segitiga yang paling hampir diambil kira.";
// Sampling radius size (percent)
stroke.area.normal.radius = "Jejari normal";
// Sampling radius size (percent)
stroke.area.point.radius = "Jejari kedudukan";
// Sampling averaging
stroke.area.normal.average = "Penengah normal";
// Sampling averaging
stroke.area.point.average = "Penengah kedudukan";
// Keep sharp edges
stroke.keepSharp = "Kekalkan tepi tajam";
stroke.keepSharp.help = "Kecuali titik yang normalnya berbeza terlalu banyak dari normal permukaan.

Ia akan mengubah cara pengiraan kawasan satah (Pensampelan kawasan).

Pilihan ini boleh berguna untuk alat berasaskan rata, atau jika anda ingin mewarnakan permukaan satah tanpa tumpah.";

// Only paint the part of the mesh above a certain height
stroke.depthFilter = "Pelindung kedalaman";
stroke.depthFilter.help = "Kecualikan titik yang berada di atas atau di bawah jarak tertentu dari satah yang dikira (Pensampelan kawasan).

Sebagai contoh, ia boleh digunakan untuk melukis tonjolan atau lekukan.";
stroke.depthFilter.max = "Kawasan atas";
stroke.depthFilter.min = "Kawasan bawah";
stroke.depthFilter.offset = "Offset tinggi";

// Invert the pixel (black <-> white)
stroke.alpha.invert = "Terbalikkan piksel";
// Repeat the alpha image (pattern)
stroke.alpha.wrap = "Jubinan";
// No repeat pattern
stroke.alpha.wrap.none = "Tiada";
// Repeat the alpha in a regular manner (tiles with seams)
stroke.alpha.wrap.repeat = "Ulang";
// Repeat the alpha in a mirrored (seamless tiling)
stroke.alpha.wrap.mirror = "Pantulan";
// Tight fit when using tiling
stroke.alpha.fit = "Sesuai rapat (imej bukan empat segi tepat)";
stroke.alpha.fit.help = "Pilihan ini hanya relevan jika tekstur alpha dan berus adalah tidak segiempat.

Apabila diaktifkan, setiap imej akan jubin berdikari tanpa jarak.
Anda boleh mematikan pilihan ini jika anda ingin mengekalkan penyegerakan alpha dan imej lain, sekiranya nisbah mereka tidak sama.";
// Alpha rotation
stroke.alpha.rotation = "Putaran";
stroke.alpha.rotation.lock.help = "Kunci orientasi alpha.

Jika putaran tidak dikunci, orientasi akan mengikuti arah goresan dalam masa nyata.";
// Repeat the image
stroke.alpha.tiling = "Jubinan";
// Scale the image (make it bigger or smaller)
stroke.alpha.scale = "Penskalaan";
stroke.alpha.scale.help = "Pada nilai minimum, petak alfa berada di dalam jejari bulatan alat.";
// Middle-point value at which no deformation occurs
stroke.alpha.midValue = "Nilai pertengahan";
stroke.alpha.midValue.help = "Nilai titik tengah pada mana tiada perubahan bentuk berlaku.

(Nilai tengah = 0)
• Hitam: tiada pemindahan
• Putih: pemindahan positif

(Nilai tengah = 0.5)
• Hitam: pemindahan negatif
• Putih: pemindahan positif

(Nilai tengah = 1)
• Hitam: pemindahan negatif
• Putih: tiada pemindahan";
// Synonymous: Scatter/Jitter/Randomize
stroke.jitter = "Rawakkan";
// Sculpt and paint along the brush stroke at regular spacing
stroke.type.dot = "Titik";
// Sculpt and paint along with alpha spaced by brush radius
stroke.type.roll = "Gulung";
// Sculpt and paint with alpha projected on screen stencil
stroke.type.tile = "Jubinan";
// Sculpt and paint with alpha projected on 3 axis
stroke.type.triplanar = "Triplanar";
// Sculpt continuously
stroke.type.drag = "Seret";
// Lock a region and move it around
stroke.type.grab = "Ambil";
// Lock a point of interest and sculpt it by changing the tool radius
stroke.type.grabRadius = "Kunci + jejari";
// Lock a region and sculpt it by changing the tool intensity
stroke.type.grabIntensity = "Kunci + intensiti";

stroke.falloffProject = "Pengaruh";
stroke.falloffProject.help = "• Sfera (3d)
Pengaruh dikira dengan mengambil jarak dari titik ke pusat berus.

• Bulatan (2d)
Titik pertama-tama diproyeksikan pada satah kawasan, sebelum mengambil jaraknya ke pusat berus.
Ini adalah serupa dengan bagaimana alpha diambil sampel.";
stroke.falloffProject.sphere = "Sfera";
stroke.falloffProject.circle = "Bulat";

// Symmetry
symmetry = "Simetri";
symmetry.enable = "Diaktifkan";
symmetry.primitiveWarning = "Simetri berus hanya tersedia untuk primitif yang disahkan, dengan pengecualian Triplanar.";
symmetry.plane.title = "Satah";
symmetry.toolIgnore = "Alat semasa mengabaikan simetri.";
// Instead of planar symmetry, use a radial symmetry
symmetry.radial.title = "Radial";
symmetry.radialX = "Radial X";
symmetry.radialY = "Radial Y";
symmetry.radialZ = "Radial Z";
// A warning indicating that we limit the number of repetitions ($0 is a number)
symmetry.limited = "Bilangan ulang dihadkan kepada $0!";
// Synonym: Offset
symmetry.offset.title = "Pindah";
symmetry.offsetX = "Pindah X";
symmetry.offsetY = "Pindah Y";
symmetry.offsetZ = "Pindah Z";
// Number of clones
symmetry.count.title = "Kiraan";
symmetry.countX = "Kiraan X";
symmetry.countY = "Kiraan Y";
symmetry.countZ = "Kiraan Z";
// method
symmetry.method = "Kaedah:";
symmetry.method.help = "• Tempatan
Satah simetri akan bergerak sepanjang mesh apabila anda menggunakan salah satu alat transformasi (Gizmo atau Transform).

• Dunia
Satah simetri adalah tetap dan tidak akan bergerak.";
// Local means: in the coordinate of the scene (synonym: absolute)
symmetry.method.world = "Dunia";
// Local means: in the coordinate of the object (synonym: relative)
symmetry.method.local = "Tempatan";
// Move the object to the other side of the symmetry (mirror it as well)
symmetry.flip = "Balikkan objek";
// Mirror the mesh
symmetry.mirror = "Cermin";
symmetry.mirror.help = "Cuba untuk menggunakan semula simetri tanpa menjejaskan topologi.

Simetri radial akan diabaikan.

Jika topologi tidak dapat dikekalkan kerana tidak dianggap simetri, anda akan mendapat pilihan untuk memaksa cerminan.";
symmetry.mirrorFail = "Tidak dapat mengesan simetri.

Adakah anda mahu memaksa simetri dengan mencerminkan mesh?";
symmetry.mirrorUseMasking = "Lindungi kawasan bertopeng";
symmetry.mirrorUseMasking.help = "Simpan kawasan bertopeng utuh.

Pilihan ini akan diabaikan dengan topologi tidak simetri (atau permukaan terputus, seperti sepasang mata).";
symmetry.apply = "Cermin
(simpan topologi)";
symmetry.splitMirror = "Pisahkan & Cermin
(topologi baru)";
// Reset the symmetry plane position
symmetry.reset = "Tetapkan semula";
// Reset the symmetry plane positon to the object center
symmetry.reset.centerMesh = "Pusat objek";
// Reset the symmetry plane positon to the scene (world) center
symmetry.reset.centerWorld = "Pusat dunia";
// Reset the symmetry plane orientation
symmetry.reset.direction = "Orientasi";
// Display a line on the object (to show where the symmetry lies)
symmetry.showLine = "Tunjukkan garis";
// Display the symmetry plane in 3d
symmetry.showPlane = "Tunjukkan pesawat";
// Allow the editing of the symmetry plane with the gizmo
symmetry.edit = "Edit Gizmo";
symmetry.edit.warning = "Penyuntingan simetri adalah eksperimen.";
symmetry.edit.help = "Anda boleh menetapkan pesawat simetri dengan bebas.

Ciri ini agak eksperimen dan anda mungkin tidak sepatutnya menggunakannya.";

// Ideally <10 chars
tool.dynamic = "DynTopo";
// Ideally <10 chars (Symmetry)
tool.symmetry = "Sim";
// Ideally <10 chars (Mirror primitive)
tool.mirror = "Cermin";
// Ideally <10 chars
tool.clay = "Tanah liat";
// Ideally <10 chars (Subtract)
tool.clay.sub = "Tolak";
// Ideally <10 chars
tool.brush = "Berus";
// Ideally <10 chars
tool.move = "Alih";
// Ideally <10 chars (Normal vector, perpendicular to surface)
tool.move.normal = "Normal";
// Ideally <10 chars
tool.drag = "Seret";
// Ideally <10 chars (Smooth the surface by erasing the details)
tool.smooth = "Lancar";
// Ideally <10 chars (Tries to smooth the topology by making the polygons more regular)
tool.smooth.relax = "Santai";
// Ideally <10 chars (Paint mask)
tool.mask = "Masker";
// Ideally <10 chars
tool.mask.unmask = "Buka Masker";
// Ideally <10 chars (Selector Mask, use lasso/ellipse,etc shape to mask the mesh)
tool.maskSelector = "SelMask";
// Ideally <10 chars (Smudge the paint of the object)
tool.smudge = "Samarkan";
// Ideally <10 chars (Flatten the surface)
tool.flatten = "Leperkan";
// Ideally <10 chars (Flatten the surface, more strongly than Flatten)
tool.planar = "Lepher";
// Ideally <10 chars (Flatten the surface by offsetting the surface in the opposite direction)
tool.flatten.fill = "Isi";
// Ideally <10 chars (Layer brush)
tool.layer = "Lapisan";
// Ideally <10 chars
tool.crease = "Lipat";
// Ideally <10 chars (Cut part of the mesh cleanly)
tool.trim = "Potong";
// Ideally <10 chars (Cut part of the mesh cleanly into two separate meshes)
tool.split = "Pisahkan";
// Ideally <10 chars (Project part of the object onto a curve)
tool.project = "Projek";
// Ideally <10 chars
tool.inflate = "Kembang";
// Ideally <10 chars
tool.pinch = "Cipit";
// Ideally <10 chars
tool.nudge = "Geser";
// Ideally <10 chars
tool.stamp = "Cap";
// Ideally <10 chars (Delete Layer, a tool that can cancel the Layer deformation/paint)
tool.clearLayer = "PadamLapisan";
// Ideally <10 chars (Select multiple objects with a lasso tool)
tool.select = "Pilih";
// Ideally <10 chars (Rotate, Translate and Scale the object)
tool.gizmo = "Radas";
// Ideally <10 chars
tool.gizmo.editPivot = "Paksi";
// Ideally <10 chars (Snap angle)
tool.gizmo.rotateSnap = "Jepit";
// Ideally <10 chars (Snap translation)
tool.gizmo.moveSnap = "Jepit";
// Ideally <10 chars (Local/Relative space)
tool.gizmo.local = "Lokal";
// Ideally <10 chars (Align/Snap the gizmo to world axis)
tool.gizmo.align = "Selaras";
// Ideally <10 chars (Pin the gizmo, so that it stays in place when switching between objects)
tool.gizmo.pin = "Pinkan";
// Ideally <10 chars (Rotate, Translate and Scale the object)
tool.transform = "Transformasi";
// Ideally <10 chars (Translate the object)
tool.transform.move = "Gerak";
// Ideally <10 chars (Rotate the object)
tool.transform.rotate = "Putar";
// Ideally <10 chars (Scale the object)
tool.transform.scale = "Skala";
// Ideally <10 chars (Snap the object on another object surface)
tool.transform.snap = "Jepit";
// Ideally <10 chars (Measure distance between 2 points)
tool.measure = "Ukuran";
// Ideally <10 chars (Lattice, deformer)
tool.lattice = "Kisi";
// If an option is shared among the tools
tool.all = "Semua alat";
// Ideally <10 chars (Quad Remesher)
tool.remesh = "Meja Semula Kuad";
tool.remesh.guides = "Panduan";
tool.remesh.density = "Kepadatan";
tool.remesh.same = "Sama";
tool.remesh.half = "Separuh";
// Ideally <10 chars (FaceGroup)
tool.faceGroup = "Grup Muka";
tool.faceGroup.autoPick = "Auto-pilih";
tool.faceGroup.flush = "Buang yang tidak dipakai";
tool.faceGroup.skip = "Langkau kumpulan kecil berdasarkan:";
tool.faceGroup.skipFace = "Bilangan muka";
tool.faceGroup.skipFace.help = "Jangan cipta kumpulan baru jika bilangan muka adalah rendah atau sama dengan ambang ini.";
tool.faceGroup.skipArea = "Kawasan permukaan";
tool.faceGroup.skipArea.help = "Jangan buat kumpulan baru jika luas permukaan kumpulan baru adalah kurang daripada ambang ini.

Ambang diberikan sebagai peratusan daripada jumlah luas objek.";
// Ideally <10 chars (Hide)
tool.hide = "Sembunyi";
// Ideally <10 chars (View tool, do nothing in particular)
tool.view = "Lihat";
// Ideally <10 chars (Revolving surface along a line)
tool.lathe = "Larik";
// Ideally <10 chars (Revolving surface along a curve)
tool.tube = "Tiub";
// Ideally <10 chars (Insert object into the scene)
tool.insert = "Masukkan";
// Ideally <10 chars (Flip/Invert/Negate the shape)
tool.shape.flip = "Balik";
// Ideally <10 chars (No shape selected, same as Camera mode, does nothing in particular)
tool.shape.view = "Lihat";
// Ideally <10 chars (Lasso selection)
tool.shape.lasso = "Laso";
// Ideally <10 chars (Curve selection, same as Lasso and it's an open shape)
tool.shape.curve = "Lengkung";
// Ideally <10 chars (Polygon selection, same as Lasso but with more precision)
tool.shape.polygon = "Poligon";
// Ideally <10 chars (Path selection, same as Lasso but with more precision and it's an open shape)
tool.shape.path = "Laluan";
// Ideally <10 chars (Rectangular selection)
tool.shape.rectangle = "Rekt";
// Ideally <10 chars (Ellipse selection)
tool.shape.ellipse = "Elips";
// Ideally <10 chars (Line selection, split the screen in half)
tool.shape.line = "Garis";
// Ideally <10 chars (Whether a shape is closed or not, a tube is open, a torus is closed)
tool.shape.closed = "Tertutup";

// Radius of the tool (size)
tool.radius = "Jari-jari";
// Intensity of the tool (force)
tool.intensity = "Intensiti";

tool.settings = "Tetapan";
tool.settings.none = "Alatan ini tidak mempunyai sebarang tetapan khusus.";

tool.crease.pinchFactor = "Faktor Cipit";
tool.crease.offsetFactor = "Faktor Offset";

tool.layer.removeInfluence = "Gunakan data lapisan";
tool.layer.removeInfluence.help = "Pilihan ini hanya aktif jika ada lapisan yang dipilih.

Ia akan menggunakan data lapisan untuk mengehadkan anjakan pada tempat stroke.";
tool.layer.noLayerSelected = "Pilihan ini hanya tersedia jika lapisan dipilih";

tool.flatten.planeLockOrigin = "Kunci asal satah";
tool.flatten.planeLockNormal = "Kunci arah satah";

// Option for Tube, Lathe and Insert tool
tool.syncInstance = "Padu sesuaikan";
tool.syncInstance.message = "Objek baru akan ditambah pada semua kes yang lain!";

// The vertex on the border of the mesh will stay still even if we try to smooth the border
tool.smooth.stickyBorder = "Vertex melekat pada sempadan";
tool.smooth.screen = "Pelarasan layar";
tool.smooth.screen.help = "Gunakan pilihan ini untuk mendapatkan pelicinan yang tidak bergantung pada topologi, walaupun pada poli tinggi.";
tool.smooth.screen.samples = "Sampel layar";
tool.smooth.stable = "Melicinkan stabil";
tool.smooth.stable.help = "Mencuba untuk menjadikan topologi licin bebas.

Mod ini berfungsi paling baik dengan kepadatan topologi berbeza dan nilai intensiti pelicinan tinggi.";

tool.paint = "Lukis";
// Erase the painting
tool.paint.erase = "Padam";
// Only paint the part of the mesh that was already painted in the layer (repainting)
tool.paint.layerFilter = "Penapisan lapisan";
tool.paint.layerFilter.help = "Gunakan pilihan ini jika anda hanya mahu melukis semula kawasan yang telah dicat di dalam lapisan.";

// Clear the painted mask
tool.mask.clear = "Bersihkan";
tool.mask.clearAll = "Kosongkan semua";
// Invert the painted mask
tool.mask.invert = "Tukar";
// Mask or Unmask a region (leave other region that unconnected intact)
tool.mask.flipConnected = "Tukar topeng (bersambung)";
// Blur the painted mask
tool.mask.blur = "Kabur";
// Sharpen the edge of the painted mask area
tool.mask.sharpen = "Tajamkan";
// Transform/Matrix
tool.matrix = "..";
// The target of the transform is either the Matrix or the Vertex of the object
tool.matrix.target = "Sasaran";
// Automatic
tool.matrix.target.auto = "Auto";
tool.matrix.target.auto.help = "Secara lalai, ini akan berfungsi secara serupa dengan pilihan Kumpulan.
Jika mesh mempunyai pe mas k, atau jika simetri diaktifkan, ia akan berfungsi sama seperti Vertex.";
// Auto apply the transform on the vertices
tool.matrix.target.vertex = "Vertek";
tool.matrix.target.vertex.help = "Cuba laksanakan perubahan pada bucu, ia tidak akan berfungsi pada primitif tidak sah.
Instance juga akan terjejas.";
// Transform the object alone (the children stands still)
tool.matrix.target.object = "Obyek";
tool.matrix.target.object.help = "Gerakkan hanya objek, mengabaikan simetri dan pem mas k an.
Hanya nod yang diedit akan bergerak, anak akan tetap diam.";
// Transform the object and its children
tool.matrix.target.group = "Kumpulan";
tool.matrix.target.group.help = "Gerak nod, mengabaikan simetri dan permaskaan.
Baki hierarki juga akan mengalami transformasi.";
// Operation on the mesh
tool.matrix.action = "Operasi";
tool.matrix.action.origin = "Pindahkan asal";
tool.matrix.action.origin.help = "Pindahkan mesh ke asal dunia.";
tool.matrix.action.bake = "Bakar";
tool.matrix.action.bake.help = "Gunakan matriks pada verteks dan tetapkan semula matriks. Secara visual, tiada apa-apa yang sepatutnya berubah.";
tool.matrix.action.reset = "Tetapkan semula";
tool.matrix.action.reset.help = "Tetapkan semula transformasi mesh kepada jati.";

// Synonym: shear, https://en.wikipedia.org/wiki/Shear_matrix or https://en.wikipedia.org/wiki/Shear_mapping
tool.matrix.skew = "Kecenderungan";
tool.matrix.translation = "Terjemahan";
tool.matrix.rotation = "Putaran";
tool.matrix.scale = "Skala";
tool.matrix.uniformScale = "Skala seragam";

tool.transform.tip = "Tekan sekali dengan jari kedua untuk bertukar mod";

// Size of the gizmo
tool.gizmo.size = "Saiz Gizmo";
// If true, there is less spacing between gizmo handlers (rotate, scale, etc)
tool.gizmo.compact = "Padat";
// When enabled, tapping one the gizmo widget will open a numerical input popup
tool.gizmo.allowInput = "Input berangka";
tool.gizmo.allowInput.help = "Benarkan input berangka apabila menekan salah satu widget gizmo";
// Angle threshold
tool.gizmo.linearRollThreshold = "Ambang gulung tangent";
tool.gizmo.linearRollThreshold.help = "Ambang sudut untuk memilih antara kaedah gulung linear atau bulat.

Nilai di atas ambang ini akan menggunakan gulung bulat.

Jika anda lebih suka gulung linear (arah tangent), tetapkan nilai ini kepada 90°.";
// Partially hide/fade the gizmo when we interact with it
tool.gizmo.autoHide = "Sembunyi semasa interaksi";
tool.gizmo.tap = "Pada ketukan";
tool.gizmo.tap.help = "Pilihan ini mengawal cara menggerakkan pivot apabila mengetik sekali pada permukaan mesh.";
tool.gizmo.tap.none = "Tiada";
tool.gizmo.tap.none.help = "Tidak ada yang berlaku apabila mengetik pada mesh.";
tool.gizmo.tap.normal = "Biasa";
tool.gizmo.tap.normal.help = "Gerakkan gizmo pada persilangan pertama dan jajarkannya mengikut normal permukaan.";
tool.gizmo.tap.first = "Pertama";
tool.gizmo.tap.first.help = "Gerakkan gizmo pada persilangan pertama.";
tool.gizmo.tap.medial = "Median";
tool.gizmo.tap.medial.help = "Gerakkan gizmo di tengah dua persilangan pertama.";

// The lathe generator is a vertical line and cannot be rotated
tool.lathe.axisFixed = "Tetap";
tool.lathe.axisOnly = "Hanya Paksi";
tool.lathe.stable = "Stabil";
tool.lathe.axis = "Paksi";

// Fill the object's hole
tool.hole = "Pengisian lubang";
tool.hole.fillHoles = "Isi lubang";
// synonym: Alternative method
tool.hole.method.fill = "Isi";
tool.hole.method.legacy = "Warisan";
tool.hole.method.boolean = "Boolean";
tool.hole.bridges = "Boolean ruang skrin";
tool.hole.bridges.help = "Jika pilihan ini diaktifkan, anda boleh melubangi volume.
Lereng potong juga akan lebih hampir mengikuti bentuk potongan.";
tool.hole.threshold = "Ambang epsilon";
tool.hole.threshold.help = "Menyesuaikan nilai ini mungkin membantu dengan algoritma pengisian lubang.";
tool.hole.smoothing = "Pelicinan lubang";

tool.smudge.quality = "Kualiti";
tool.smudge.quality.help = "Ia mengubah resolusi piksel yang diproyeksikan, nilai lebih rendah bermaksud strok lebih pantas.";

// Shape for the tools: Trim / Split / Project / SelMask
tool.shape = "Bentuk";
// Auto-validate the drawn shape
tool.shape.autoValidate = "Pengesahan automatik";
// Force the rectangle selection to be a square
tool.shape.rectangleSquare = "Segi empat tepat";
// The selection rectangle will be centered around the cursor
tool.shape.rectangleCentered = "Berpusat";
// Force the ellipse selection to be a circle
tool.shape.ellipseCircle = "Bulat";
// The selection ellipse will be centered around the cursor
tool.shape.ellipseCentered = "Berpusat";
// Rotate by step (angle value)
tool.shape.lineRotateStep = "Putaran langkah";

// Show a yellow dot on the golden ratio point
tool.measure.goldenRatio = "Nisbah emas";
// volume of a mesh
tool.measure.volume = "Isipadu";
// Surface of a mesh
tool.measure.surface = "Permukaan";

// Always display the camera shortcut buttons on the viewport
tool.view.stickyCamera = "Jalan pintas Kamera (sentiasa)";

// Topology
topology = "Topologi";
// Synynom: detail value, density
topology.dynamic.detail = "Perincian";
// See glossary
topology.multires = "Multiresolusi";
topology.multires.help = "Pastikan pelbagai resolusi mesh.

Jika anda membuat perubahan pada resolusi yang lebih rendah, perincian dari resolusi yang lebih tinggi akan ditempatkan semula apabila anda beralih kembali.

Lapisan boleh didapati di setiap resolusi.";
// Synonym: Unsubdivide, Un-subdivide
topology.multires.reverse = "Terbalikkan";
topology.multires.reverse.confirm = "Tidak dapat mencipta pembahagian asas.

Topologi sedia ada mungkin bukan hasil daripada pembahagian.";
topology.multires.subdivide = "Perbahagikan";
topology.multires.subdivide.confirm = "Mesh akan mempunyai $0M simpul, anda pasti?";
// Prevents the user from subdivide the object again, a warning is displayed (with a UI link to increase this limit)
topology.multires.subdivide.limit = "Had pembahagian melebihi, lihat $0";
topology.multires.deleteLower = "Padam lebih rendah";
topology.multires.deleteHigher = "Padam lebih tinggi";
topology.multires.keepTriangles = "Simpan segitiga";
topology.multires.lock = "Kunci (LV0)";
// Navigate toward multiple resolutions (go to higher level)
topology.multires.up = "Tahap multires →";
// Navigate toward multiple resolutions (go to lower level)
topology.multires.down = "Tahap multires ←";
// Synonym: Flat subdivision
topology.multires.linear = "Pembahagian linear";
topology.multires.linear.help = "Perbahagikan mesh secara langsung tanpa mengaplikasi sebarang pelembutan";
// Only show the lowest resolution wireframe
topology.multires.minWireframe = "Hanya Tahap 0";
// Create a new object by recomputing a new topology
topology.remesh = "Remes";
// Create a new object by recomputing a new topology, by using voxels (see Glossary)
topology.voxel = "Remes voxel";
topology.voxel.help = "Remesh dengan mengambil sampel mesh pada grid.

Jika objek tidak ditutup (kedap air), algoritma pengisian ruang akan diterapkan dahulu.

Lapisan akan diproyeksikan semula selepas remeshing tetapi kualitinya akan terjejas.";
topology.voxel.resolution = "Resolusi";
topology.voxel.sharp = "Teruskan tepi yang tajam";
topology.voxel.sharp.help = "Pilihan ini berguna terutamanya untuk operasi boolean primitif mudah.

Ia akan memperkenalkan distorsi di beberapa area karena titik yang dipetik pada perbatasan.";
topology.voxel.subLevel = "Bina multiresolusi";
topology.voxel.subLevel.help = "Anda boleh membina semula hierarki multiresolusi daripada output remesh voxel.

Ia juga akan berfungsi lebih cepat dan menggunakan lebih sedikit memori, terutamanya jika nilai butiran voxel tinggi.
Walau bagaimanapun, jika nilai butiran voxel adalah rendah dan anda meminta banyak tahap multires, anda akan kehilangan butiran.";
// Dynamic topology (DynTopo)
topology.surface.remesh = "Remes";
topology.surface.detail = "Perincian";
topology.surface.detail.help = "Berbeza dengan peletakan semula voxel, peletakan semula permukaan tidak memerlukan mesh ditutup.

Ia juga boleh menyokong masking supaya anda boleh melindungi sebahagian mesh daripada perubahan topologi.

Layers dikemaskini dengan betul.";
topology.surface.method = "Kaedah";
// Uniformisation means we can both add and remove triangles/quads
topology.surface.method.uniformisation = "Penyeragaman";
// We can only add triangles/quads (synonym: Refine)
topology.surface.method.subdivision = "Pecahan";
// We can only remove triangles/quads (synonym: Simplify)
topology.surface.method.decimation = "Pengurangan";
topology.surface.method.help = "Perilaku topologi dinamik:
• Penyelerakan: tambah dan keluarkan butiran
• Subdivision: tambah butiran
• Decimation: keluarkan butiran";
topology.surface.useMasking = "Lindung kawasan yang bertopeng";
topology.surface.useMasking.help = "Kawasan bertopeng akan melindungi topologi daripada diubah.";
topology.surface.extrapolate = "Ekstrapolasi vertek";
// DynTopo
topology.dynamic = "Topologi dinamik";
topology.dynamic.activate = "Didayakan";
topology.dynamic.activate.help = "Dengan topologi dinamik, alat pahatan boleh membahagikan atau memudahkan mesh secara lokal dalam masa nyata.

Ciri ini boleh memberi kesan yang nyata terhadap prestasi.

Layers dikemaskini dengan betul.";
topology.dynamic.method = "Perincian berdasarkan...";
topology.dynamic.method.screen = "Skrin";
topology.dynamic.method.radius = "Jejari";
topology.dynamic.method.constant = "Tetap";
topology.dynamic.method.help = "• Zum
Tahap perincian adalah berdasarkan sejauh mana anda dari permukaan.

• Radius
Radius alat menentukan jumlah perincian.

• Tetap
Perincian adalah tetap, dan nilai perincian dikongsi dengan slaid voksel juga.";
topology.dynamic.quality = "Keutamaan...";
topology.dynamic.quality.help = "Jika anda memilih Kualiti, terdapat 2 perbezaan utama:
• penyelarasan digunakan sebelum operator pengukiran, anda akan mendapat kurang artifak interpolasi apabila melukis atau memahat perincian yang sangat kecil
• penyelarasan tidak diterapkan secara berulang, jika anda memahat perincian kecil atau melakukan strok cepat, topologi akan sentiasa diperbetulkan dengan betul";
topology.dynamic.quality.speed = "Kelajuan";
topology.dynamic.quality.quality = "Kualiti";
// Whether the pencil pressure can impact the level of detail
topology.dynamic.usePressure = "Guna tekanan pada jejari";
topology.dynamic.usePressure.help = "Gunakan pilihan ini jika anda mahu tekanan pen pada jejari alat mempengaruhi tahap perincian.";
topology.dynamic.useFalloff = "Guna jatuhan strok";
// Decimate
topology.decimate.title = "Pengurangan";
topology.decimate.title.help = "Kurangkan bilangan poligon dengan berusaha mengekalkan sebanyak mungkin perincian.

Ciri ini berguna jika anda ingin mengeksport untuk cetakan 3D.
Namun, anda mungkin tidak mahu menggunakannya jika ingin terus memahatnya, kerana ia boleh menghasilkan segi tiga yang tidak sekata.

Perhatikan bahawa kawasan bertopeng tidak akan dikurangkan.";
// Synonym: Simplify (Decimate reduce the number of triangles/quads while retaining details as much as possible)
topology.decimate = "Kurangkan";
topology.decimatePaintWeight = "Kekalkan lukisan";
topology.decimatePaintWeight.help = "Nilai yang lebih tinggi akan berusaha untuk mengekalkan lukisan.

Tetapkan nilai ini kepada 0 jika anda tidak peduli tentang lukisan.";
topology.decimateUniform = "Muka seragam";
topology.decimateUniform.help = "Nilai yang lebih tinggi akan menghasilkan tiga segi yang bersaiz serupa.";
topology.decimatePreserveBorders = "Kekalkan sempadan";
topology.decimatePreserveBorders.help = "Jangan kurangkan sempadan mesh.";
// Target a certain number of triangles, faces and vertices
topology.target.triangles = "Sasaran tiga segi";
topology.target.faces = "Sasaran muka";
topology.target.quads = "Sasaran quad";
topology.target.points = "Titik sasaran";
// Quad remesher
topology.qremesh = "Pengulangan Quads";
topology.qremesh.angle = "Sudut lipatan";
topology.qremesh.border = "Kekalkan sempadan";
topology.qremesh.onlyQuad = "Hanya quad";
topology.qremesh.hole = "Mengisi lubang maksimum";
topology.qremesh.hole.help = "Algoritma kadang-kadang boleh menghasilkan lubang yang tidak diingini.

Sekiranya lubang mempunyai lebih sedikit verteks daripada nilai ini, maka ia akan diisi.";

// Unwrapping means compute UV (texture coordinates), with uvs you can appliy (wrap) a texture onto the model
topology.uv.title = "Pembuka UV";
// UV Unwrap but as a Verb
topology.uv.unwrap = "Buka";
// The operation can be very slow
topology.uv.atlas.warning = "Boleh menjadi sangat perlahan, sasaran <100k verteks!";
// Handles are topological holes (synonym: genus, hole)
topology.uv.bff.warning = "Boleh ada pertindihan jika mesh mempunyai pemegang!";
// Solo patch
topology.uv.bff.seamless = "Tampalan lancar";
topology.uv.bff.seamless.help = "Pilihan ini boleh memperkenalkan distorsi yang penting.

Secara tipikalnya, ia boleh digunakan apabila kumpulan wajah telah disediakan dengan teliti.";
// Synonym: Point count? Singularity count ?
topology.uv.bff.cones = "Kiraan kon";
topology.uv.bff.help = "Nilai yang lebih tinggi akan mengurangkan herotan untuk objek kompleks.

Nilai yang lebih tinggi bermaksud masa pengiraan lebih lama.";
topology.uv.delete = "Padamkan UVs";

// Transfer the vertex painting in the texture, bake means "create texture (from mesh data)"
topology.bake.title = "Bakar";
// Bake here means "create texture (from mesh data)"
topology.bake.title.help = "Baku tekstur akan mencipta tekstur dengan memproyeksikan objek lain yang kelihatan dalam pemandangan.

Berikut adalah aliran kerja biasa untuk pembakaran:
• Anda mempunyai mesh dengan perincian dan lukisan halus
• Klonkan ia
• Decimate ia (tetapkan 'Preserve painting' kepada 0!)
• UV unwrap ia
• Bakar ia!

Nomad akan mengambil kira setiap mesh yang kelihatan dalam pemandangan.
Anda juga boleh menggunakan mod Solo untuk menyembunyikan kebanyakan mesh lain dengan cepat.
Jika tiada objek lain yang kelihatan, ia akan mengambil kira keseluruhan pemandangan.

Anda kini harus mempunyai mesh resolusi rendah yang mengekalkan kebanyakan lukisan dan perincian objek sebelumnya anda.

Selepas operasi, warna perincian akan dipindahkan ke lapisan baru yang dinyahdayakan, supaya ia diabaikan daripada didarabkan dengan tekstur berwarna.";
// Bake here means "create texture (from mesh data)"
topology.bake.self = "Daripada dirinya sendiri";
// Bake here means "create texture (from another mesh data)"
topology.bake.other = "Daripada resolusi tinggi";
topology.bake.resolution = "Resolusi";
// Cage is a specific term, synonyom: "Bake offset"
topology.bake.offset = "Ofset sinar";
topology.bake.radius = "Radius sangkar";
// Bake opacity (from mask data)
topology.bake.opacityFromMask = "Topeng -> Ketelusan";
topology.bake.backup = "Sandarkan";

// project a high resolution mesh details onto another
topology.reproject.title = "Projek semula";
topology.reproject.title.help = "Projekkan perincian berukir, lukisan dan lapisan dari objek yang kelihatan paling dekat.

Ini kebanyakannya bertujuan untuk digunakan pada mesh resolusi tinggi juga, biasanya dengan topologi bersih.";
// tweaking value
topology.reproject.rayBias = "Berat pancaran";
topology.reproject.rayBias.help = "Dua kaedah digunakan untuk reprojeksi:
• paling hampir: titik terdekat pada permukaan
• rasuk: titik persilangan melalui arah normal

Nilai bias yang lebih tinggi akan memberikan keutamaan kepada persilangan rasuk berbanding permukaan yang paling hampir.";
topology.reproject.normalOffset = "Offset biasa";
topology.reproject.shpereCast = "Lintasan sfera sandaran";
topology.reproject.shpereCast.help = "Jika perintisan semula ray normal gagal, Nomad akan beralih kepada persilangan permukaan terdekat.";
// number of iteration the algorithm will take
topology.reproject.iterations = "Ulangi";
topology.reproject.relax = "Santai";
topology.reproject.relax.help = "Pelepasan harus diutamakan apabila jala adalah poli rendah.";
topology.reproject.layers.help = "Pemindahan lapisan lain ke mesh terpilih.";

topology.manifold = "Pelbagai";
topology.nonManifold = "Bukan manifold";
topology.manifold.clean = "Bersihkan";
topology.manifold.collapse = "Padamkan muka kecil";
topology.manifold.title = "Paksakan manifold";
topology.manifold.title.help = "Cuba membersihkan tepi bukan manifold.

Ini mungkin berguna untuk perisian luaran yang tidak menyokong tepi yang mempunyai lebih daripada 2 muka yang sama.";

// Reset key-bindings/shortcuts
binding.reset = "Tetapkan semula pengikatan";
// Binding option
binding.context.toggle = "Tukar konteks";
binding.toggleTool = "Togol pintasan alatan";
binding.toggleTool.help = "Apabila menggunakan salah satu pintasan alat, alat sebelumnya akan dipilih jika alat pintasan semasa aktif.";
// When the key is tap once, the value will be toggled
binding.tapToggle = "Togol pintasan pada ketukan kekunci";
// The binding force camera movement
binding.forceCamera = "Paksi kamera paksa";
binding.forceCamera.help = "Paksa interaksi kamera sekiranya terdapat konflik dengan pengikatan lain.

Ia biasanya boleh berlaku jika pengikatan yang sama diberikan sebagai pintasan alat atau Tambah/Tolak.";
// Same as Color Picker but it pick the material (color, roughness, metalness, etc)
binding.pickMaterial = "Pilih Bahan";
// Same as Color Picker but it pick the material (color, roughness, metalness, etc)
binding.pickFaceGroup = "Pilih Kumpulan Muka";
// Edit the tool brush size/radius
binding.editRadius = "Jejari Alatan";
// Edit the tool brush size/radius
binding.editIntensity = "Keamatan Alatan";
// Snap the camera
binding.view.front = "Pemandangan Hadapan";
binding.view.left = "Pemandangan Kiri";
binding.view.top = "Pandangan Atas";
// Move/Translate the view
binding.pan.left = "Pan Kiri";
binding.pan.right = "Pan Kanan";
binding.pan.forward = "Pan Ke Hadapan";
binding.pan.backward = "Pan Ke Belakang";
binding.pan.up = "Pan Ke Atas";
binding.pan.down = "Pan Ke Bawah";
// Snap the view (while rotating)
binding.snapViewOnRotate = "Tangkapan pandangan (semasa memutar)";
// Open a Nomad internal project (replace current scene)
binding.project.open = "Buka (projek)";
// Open a Nomad internal project (add it to the current scene)
binding.project.add = "Tambah (projek)";
// Select all the objects in the scene
binding.selectAll = "Pilih Semua";
// Rotate environment and the lighting
binding.rotateLighting = "Putarkan pencahayaan";
// The Camera pivot is the point around which the camera rotates
binding.updatePivot = "Kemas kini pangsi...";

quadremesh.adaptQuadCount = "Kiraan Kuad Adaptif";
quadremesh.curvatureAdaptivness = "Saiz Adaptif";
quadremesh.curvatureAdaptivness.help = "Pada 100%, saiz kuad akan berbeza mengikut keluk objek, membolehkan kuad lebih kecil pada lengkungan tinggi.
Pada 0%, saiz kuad akan seragam.";
quadremesh.autoDetectHardEdges = "Auto-Kesan Tepi Keras";
quadremesh.useVertexColors = "Kekalkan lukisan";

// Privacy policy
privacyPolicy.title = "Dasar Privasi";
privacyPolicy.reject = "Tolak";
// Hexanomad is the company name
privacyPolicy = "Hexanomad tidak mengumpul sebarang data dari Nomad Sculpt.";

sonar.disconnect = "Putuskan sambungan SonarPen";
sonar.connect = "Sambungkan SonarPen";
sonar.connect.confirm = "Sambungkan SonarPen?";
sonar.connect.confirm.warning = "Sonar Pen akan menggunakan mikrofon (audio loopback) untuk mengesan tekanan pen.";

// Color disc mode
widget.color.disc = "Cakera";
widget.color.ring = "Cincin";
widget.color.square = "Segi Empat";

nomad.mainFolder = "Folder utama Nomad";
nomad.mainFolder.warning = "Fail dibiarkan tidak terubah.
Mereka tidak disalin, dihapus atau dipindahkan.";
nomad.mainFolder.error = "Setelah anda memilih ya, Nomad akan ditutup dan anda boleh melancarkannya semula.";

// version trial
version.restore = "Pulihkan pembelian";
version.buyWeb = "Versi web hanyalah demo";
version.buyFull = "Naik taraf ke versi penuh";
version.buyQR = "Pembelian";
version.buyQR.promo = "
Quad Remesher adalah algoritma yang menghasilkan mesh mendominasi kuadratik.
Sebaran kuadratik akan cuba mengikuti kelengkungan semula jadi objek.

Algoritma ini juga boleh menyesuaikan saiz kuadratik berdasarkan kelengkungan tempatan.

Anda juga boleh membimbing topologi hasil dengan:

• Kumpulan Muka $0 (pastikan untuk melicinkan tepi mereka untuk hasil yang lebih baik!)

• Simetri Planar X/Y/Z $1

• Panduan Lengkung $2

• Lukisan Ketumpatan $3

Quad Remesher dibangunkan oleh https://exoside.com/.";

version.trialHistory = "Versi percubaan: 4 undo/redo boleh dilakukan";
version.trialLayer = "Versi percubaan: 1 lapisan setiap objek";
version.trialNoImport = "Versi percubaan: Tiada import";
version.trialNoExport = "Versi percubaan: Tiada eksport";

version.fullFeatures = "• Pembelian satu kali
• Batalkan/ulangi tanpa had
• Lapisan tanpa had
• Eksport & import";

version.demo.purpose = "Versi ini dibuat khusus untuk tujuan demonstrasi.";
version.demo.disable = "Ciri tidak diaktifkan untuk demo.";

// app store main page
store.name = "Nomad Sculpt";
store.headline = "Mengukir, melukis dan mencipta dalam 3D";
store.tag = "mengukir, 3d, nomad, melukis, pemodelan";
// ----------------------------------------------
store.description.sculpt = "• Alat pemodelan
Tanah liat, ratakan, licin, tutup dan banyak berus lain akan membolehkan anda membentuk ciptaan anda.
Anda juga boleh menggunakan alat pemotong boolean trim dengan lasso, segi empat tepat dan bentuk lain, untuk tujuan permukaan keras.";
// ----------------------------------------------
store.description.stroke = "• Penyesuaian Strok
Falloff, alpha, tiling, tekanan pensel dan parameter strok lain boleh disesuaikan.
Anda juga boleh menyimpan dan memuatkan tetapan alat anda.";
// ----------------------------------------------
store.description.paint = "• Alat melukis
Lukisan vertex dengan warna, kekasaran dan metalness.
Anda juga boleh mengurus semua pratetap bahan anda.";
// ----------------------------------------------
store.description.layer = "• Lapisan
Rekod operasi mengukir dan melukis anda dalam lapisan berasingan untuk pengulangan yang lebih mudah semasa proses penciptaan.
Kedua-dua perubahan mengukir dan melukis dicatatkan.";
// ----------------------------------------------
store.description.multires = "• Pemodelan multiresolusi
Pergi ke depan dan belakang antara pelbagai resolusi mesh anda untuk aliran kerja yang fleksibel.";
// ----------------------------------------------
store.description.voxel = "• Voxel remeshing
Remesh dengan cepat mesh anda untuk mendapatkan tahap perincian seragam.
Ia boleh digunakan untuk melakar bentuk kasar dengan cepat pada permulaan proses penciptaan.";
// ----------------------------------------------
store.description.dynamic = "• Topologi dinamik
Perbaiki secara tempatan mesh anda di bawah berus anda untuk mendapatkan tahap perincian automatik.
Anda boleh mengekalkan lapisan anda, kerana ia akan dikemas kini secara automatik!";
// ----------------------------------------------
store.description.topology = "• Decimate
Kurangkan bilangan poligon dengan mengekalkan sebanyak mungkin perincian.";
// ----------------------------------------------
store.description.group = "• Kumpulan Muka
Segmentasikan mesh anda menjadi subkumpulan dengan alat kumpulan muka.";
// ----------------------------------------------
store.description.unwrap = "• Pemukaan UV automatik
Pemukaan UV automatik boleh menggunakan kumpulan muka untuk mengawal proses pembukaan.";
// ----------------------------------------------
store.description.baking = "• Baking
Anda boleh memindahkan data bucu seperti warna, kekasaran, metalness dan perincian berskala kecil ke dalam tekstur.
Anda juga boleh melakukan sebaliknya, memindahkan data tekstur ke dalam data bucu atau lapisan.";
// ----------------------------------------------
store.description.primitive = "• Bentuk Primitif
Silinder, torus, tiub, mesen bubut dan primitif lain boleh digunakan untuk memulakan bentuk baru dengan cepat.";
// ----------------------------------------------
store.description.rendering = "• Rendering PBR
Rendering PBR yang cantik secara lalai, dengan pencahayaan dan bayang-bayang.
Anda sentiasa boleh bertukar kepada matcap untuk shading yang lebih standard untuk tujuan mengukir.";
// ----------------------------------------------
store.description.postprocess = "• Pemprosesan Pasca
Cerapan Ruang Skrin, Kedalaman Medan, Sekatan Ambien, Pemetaan Ton, dll.";
// ----------------------------------------------
store.description.files = "• Mengeksport dan Mengimport
Format yang disokong termasuk fail glTF, OBJ, STL atau PLY.";
// ----------------------------------------------
store.description.interface = "• Antaramuka
Antaramuka mudah digunakan, direka untuk pengalaman mudah alih.
Penyesuaian juga mungkin!";
// ----------------------------------------------
store.description.remesher = "• Quad Remesher (pembelian dalam aplikasi berasingan sahaja)
Remesh objek anda secara automatik dengan mesh dominan quad yang mengikuti kelengkungan mesh.
Ia menyokong panduan, kumpulan muka dan lukisan ketumpatan.";
// ----------------------------------------------