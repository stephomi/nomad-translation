// Generic confirmation (Confirm? [yes/ok/delete, cancel])
confirm = "Bestätigen?";
// Answer to a question (Are you sure you want to do that? [yes, cancel])
confirm.yes = "Ja";
// The generic ok in a confirm box (The next operation is dangerous. [ok, cancel])
confirm.ok = "OK";
// Cancel something after being asked (Question? [answer, cancel])
confirm.cancel = "Abbrechen";

// Experimental feature
experimental = "Experimentell!";

// On single tap (should be short)
ontap = "Tap";

clipboard = "Zwischenablage";
clipboard.copy = "Kopieren";
clipboard.paste = "Einfügen";

// memory size
bytes = "Bytes";
kB = "kB";
MB = "MB";
GB = "GB";
TB = "TB";

// Noun
instance = "Instanz";

// Same value (usually for axis, e.g: x == y == z)
uniform = "Gleichmäßig";

sync = "Synchronisieren";

// position
position.top = "Oben";
position.bottom = "Unten";
position.left = "Links";
position.right = "Rechts";
position.center = "Zentriert";
// direction
direction.up = "Oben";
direction.down = "Unten";
direction.left = "Links";
direction.right = "Rechts";
// 3d cube
cube.top = "Oben";
cube.bottom = "Unten";
cube.left = "Links";
cube.right = "Rechts";
cube.front = "Vorne";
cube.back = "Hintent";

// Name of an item (object, tool, etc)
item.name = "Name";
// Add a new item (object, tool, etc)
item.new = "Erstellen";
// Rename an item (object, tool, etc)
item.rename = "Umbenennen";
// Add a new item (object, tool, project, etc)
item.add = "Hinzufügen";
// Update an item image with a new image (synonym: Update)
item.replace = "Ersetzen";
// Save an item (object, tool, etc)
item.save = "Speichern";
item.save.confirm = "Speichern bestätigen?";
// Update an item (update camera view point, etc)
item.update = "Update";
// Reload last save of an item (object, tool, etc)
item.lastSave = "Letzte Speicher";
// Reload last save of an item (object, tool, etc)
item.lastSave.confirm = "Letzte Speicherung laden?";
// Reset an item to its initial value (object, tool, etc)
item.reset = "Zurücksetzen";
item.reset.confirm = "Zurücksetzen bestätigen?";
// Make an item instance, similar to clone but keeps the underlying geometry (Synonym: link? soft clone?)
item.instance = "Instanz";
// Uninstance the object, make the object real
item.uninstance = "Instanz aufheben";
// Clone an item (object, tool, etc)
item.clone = "Klonen";
// Delete an item (object, tool, etc)
item.delete = "Löschen";
item.delete.confirm = "Löschen bestätigen?";
item.delete.confirm.yes = "JA, löschen";
// When we delete the item but the image is used somewhere
item.delete.used = "Bild verwendet";
// Convert the item type (mesh, light) to a simple Node type
item.toNode = "Als Knoten";
// Item visibility (object, layer, etc)
item.visible = "Sichtbar";
// Show an item (object, layer, etc)
item.show = "Einblenden";
// Hide an item (object, layer, etc)
item.hide = "Ausblenden";
// Select an item (object, layer, etc)
item.select = "Auswählen";
// Unselect an item (object, layer, etc)
item.unselect = "Abwählen";
// Merge an item with another one below (layer)
item.mergeDown = "Abwärts zusammenfügen";
// The order of an item in a list
item.order = "Reihenfolge";
// Focus on previous item
item.previous = "Vorheriges";
// Focus on next item
item.next = "Weiter";
// The item is locked (either it cannot be selected, edited, or we preserve its details)
item.lock = "Sperren";
// No item selected
item.none = "Kein";

// Search something (text entry to filter item)
search = "Suchen";

// Three-state toggle button (Auto, Off, On)
toggle.on = "Ein";
// Three-state toggle button (Auto, Off, On)
toggle.off = "Aus";
// Three-state toggle button (Auto, Off, On)
toggle.auto = "Auto";

// When you launch the app and we need to reprocess some resource thumbnails
loading.reprocess = "Fehlende Vorschaubilder, erstelle neu...";
loading.reprocess.cancel = "Generierung von Thumbnails überspringen?";

access.title = "Barrierefreiheit";
access.window = "Unterstützendes Fenster";
access.pinch = "Kneifen";
access.drag = "Ziehen";
access.rotate = "Drehen";
access.roll = "Rolle";

// Color of an object
material.color = "Farbe";
// Defines how blurry or sharp the reflection on a material is (opposite of glossiness)
material.roughness = "Matt";
// Defines how blurry or sharp the reflection on a material is (opposite of roughness)
material.glossiness = "Glanz";
// Whether the material is a metal or not
material.metalness = "Metallisch";
// How much light a surface will reflect
material.specular = "Spiegelnd";
// Light that the surface can emit (glow)
material.emissive = "Leuchten";
// Normal map (synonym: detail, bump)
material.normal = "Normal";
// flip y coordinate
material.normal.flipY = "Y umdrehen";
// Ambient Occlusion (AO)
material.occlusion = "Verdeckung";
// Textures, basically images wrapped on models (synonym: Maps, Texture maps)
material.textures = "Texturen";
// Textures/Image
material.texture = "Textur";
// A warning indicating that the mesh has no UVs
material.warningNoUVs = "Keine UVs!";
// Texture filtering https://en.wikipedia.org/wiki/Texture_filtering
material.texture.filter = "Filterung";
// Nearest Filtering (closest sample)
material.texture.nearest = "Nächster";
// Bilinear Filter
material.texture.linear = "Linear";
// Mipmap filtering
material.texture.mipmap = "Mipmap";
// Triplanar mapping
material.projection = "Projektion";
material.projection.triplanar = "Triplanar";

// Minify
about.minify = "Menüs ausblenden";
about.minify.help = "Sie können auch mit 4 Fingern auf den Bildschirm tippen, wenn Ihr Gerät dies unterstützt.";
// Turntable will rotate the whole scene on itself (as it if was on a turntable)
about.turntable = "Drehscheibe";
// Rotation center of the turntable
about.turntable.pivot = "Rotationszentrum";
// Keep current pivot
about.turntable.pivot.keep = "Aktuelle beibehalten";
// Turntable pivot will be at the center of the scene
about.turntable.pivot.scene = "Szene";
// Make the entire scene turn around (speed of the animation)
about.turntable.speed = "Geschwindigkeit";
// Stuffs that I used to make the app
about.credits = "Informationen";
// Link to open source projects that I used for the app
about.credits.openSource = "Open Source";
// Only translate the &
about.credits.arts = "MatCaps und HDRIs";
// Change languages of the app
about.languages = "Sprachen";
about.languages.help = "Die Übersetzung ist verfügbar unter $0";
// Link to the App Website
about.website = "Webseite";
// Link to the App Forum
about.forum = "Forum";
// Link to the App Manual
about.manual = "Handbuch";
// Link to the App Email
about.mail = "Support";
// Link to the App Twitter account
about.twitter = "Twitter";
// Link to the App Instagram account
about.instagram = "Instagram";
// Link to the App Facebook account
about.facebook = "Facebook";
// Link to the App Discord account
about.discord = "Discord";
// Link to the App Threads account
about.threads = "Threads";

// The user canceled an operation that was running
alert.aborted = "Vorgang abgebrochen!";
// Error when an algorithm needs the object to have an hole (usually to fill it)
alert.hole.nothing = "Das Objekt hat keine Löcher!";
// No operation occured because the mesh is already manifold
alert.manifold.already = "Das Mesh ist bereits manifold!";
// Visibility of the object is off (but should be on)
alert.shape.notVisible = "Das aktuelle Mesh ist unsichtbar!";
// The user tried to trim an object but the selected region didn't touch the object
alert.trim.nothing = "Nichts zu beschneiden.";
// The user tried to trim an object but the selected region completely encompassed the object
alert.trim.full = "Beschneiden abgebrochen: Das Mesh würde vollständig beschnitten werden.";
// In order to extract something, the mesh needs to have painted mask
alert.extract.none = "Nichts zum Extrahieren!";
// In order to split something, the mesh needs to have painted mask
alert.extract.split.none = "Nichts zum Teilen ausgewählt!";
// List of disabled features when View Mode is selected
alert.view.disabled = "Funktionen im Ansichtsmodus deaktiviert:";
// Primitive Widgets are small ui stuffs in the viewport that the user can interact with to modify an object
alert.view.disabled.widgetPrimitive = "Primitive Widgets";
// The object needs to have two parts disconnected
alert.separate.fail = "Kann nicht getrennt werden: Das Objekt hat nur einen Teil!";
// Remesh is when you create a new topology (mesh) on an object
alert.voxelRemesh.success = "Remeshing ausgeführt!";
alert.voxelRemesh.empty = "Remeshing abgebrochen: Das Ergebnis hätte keine Faces mehr.";
// Should not happen or very rarely, input here is an object
alert.voxelRemesh.invalidInput = "Ungültige Eingabe!";
// Helper popup to tell the users the object will cloned
alert.matrix.clone = "Das Objekt wird dupliziert";
// Helper popup to tell the users the object will cloned
alert.matrix.instance = "Das Objekt wird instanziert";
// A pivot refers the gizmo 3d position, this mode means we are moving the pivot
alert.gizmo.editPivot = "Aktueller Modus: Drehpunkt (Pivot) bearbeiten";
alert.mask.full = "Maskieren = 100%!";
// A pivot refers the gizmo 3d position
alert.gizmo.editObject = "Aktueller Modus: Objekt bearbeiten.";
// See Glossary (DynTopo)
alert.dynamic.enable = "Dynamic Topology ist aktiviert!";
// See Glossary (DynTopo)
alert.dynamic.disable = "Dynamic Topology ist deaktiviert!";
alert.colorPicker = "Ziehen Sie Ihren Finger auf das Mesh, um eine Farbe auszuwählen.";
// Transform mode is when the user can move the reference (image in the background) with its two fingers
alert.backgroundTransform = "Einfaches Antippen, um den Transformationsmodus zu verlassen.";
// Edit the symmetry plane with the gizmo
alert.editSymmetry = "Einfaches Tippen, um den Bearbeitungssymmetriemodus zu beenden.";
// Show the painted mask on the mesh
alert.mask.show = "Maske anzeigen";
// Hide the painted mask on the mesh
alert.mask.hide = "Maske ausblenden";
// Selection refers to the objects that are currently selected
alert.selection.lock = "Auswahl sperren";
// Selection refers to the objects that are currently selected
alert.selection.unlock = "Auswahl entsperren";
// Hide the objects that are not selected
alert.selection.isolate = "Auswahl isolieren";
// Show the objects that are hidden
alert.selection.showAll = "Alles anzeigen";
// Project quick saving
alert.quickSave = "Speichere...";
// Painting on the object was hidden but the user did paint the object
alert.forcePainting.fill = "Painting anzeigen aktiviert, [Paint all] wurde verwendet.";
// Painting on the object was hidden but the user started to paint on the object
alert.forcePainting.tool = "Painting anzeigen aktiviert, Objekt painted.";
// See Glossary (Multiresolution)
alert.multiresLost = "Multiresolution geht verloren!";
// Boolean cut mode will ignore some features
alert.booleanIgnored = "Boolean wird Maskierung oder verdeckte Bereiche ignorieren!";
// The user is starting an operation that can lead to a crash
alert.range.warning = "Der Detailgrad ist hoch und kann viel Speicherplatz erfordern!";
// Autosave popup
alert.autoSave.auto = "Automatisches Speichern in... $0s";
// The selected object doesn't have any layers
alert.needLayer = "Das aktuelle Werkzeug erfordert eine aktive Ebene.";
// The user decided to hide the painting on the objects
alert.paintingHidden = "Painting ausgeblendet!";
// The user decided to hide the masking on the objects
alert.maskingHidden = "Maske ist versteckt!";
// The user decided to display hidden faces
alert.hideIgnored = "Ausblenden wird ignoriert!";
// The selected object doesn't have any layers
alert.noPartialWireframe = "Das partielle Zeichnen ist deaktiviert, wenn das Drahtgitter (Wireframe) eingeblendet ist.";
// The user has selected a tool that is more intuitive to use when the camera is in orthographic mode
alert.shapeOrthographic = "Erwägen Sie die Verwendung einer orthografischen Kamera, wenn Sie perspektivische Verzerrungen bei der Verwendung von Screen Project vermeiden möchten.";
// Trial version has a limited number of undo
alert.state.trial = "Rückgängig abgebrochen: Sie benutzen die Testversion!";

background = "Hintergrund";
// A flat color will be displayed in the background of the scene
background.color = "Farbe";
// 2 color with rotation
background.gradient = "Farbgradient";
// The environment (HDRI) will be displayed in the background
background.environment = "Umgebung";
background.blur = "Unschärfe";
background.exposure = "Belichtung";

// Image that the artist uses as a reference
background.imageEnable = "Referenzbild";
// The image will be displayed in overlay (used as a reference by the artist)
background.imageOverlay = "Ineinanderkopieren";
// Opposite of transparency (Alpha)
background.imageAlpha = "Alpha";
background.imageReset = "Reset Einstellungen";
background.imageTransform = "Umwandeln";
// X screen coordinate of the image reference
background.imageX = "X-Position";
// Y screen coordinate of the image reference
background.imageY = "Y-Position";
// Rotation of the reference image
background.imageRotation = "Rotation";
// Scale of the reference image
background.imageScale = "Skalierung";

// Blend: normal
blend.normal = "Normal";
// Blend: darker
blend.darker = "Dunkler";
blend.darker.darken = "Verdunkeln";
blend.darker.multiply = "Multiplizieren";
blend.darker.linearBurn = "Linear Verbrennen";
blend.darker.colorBurn = "Farbe Verbrennen";
// Blend: lighter
blend.lighter = "Heller";
blend.lighter.lighten = "Erhellen";
blend.lighter.screen = "Bildschirm";
blend.lighter.linearDodge = "Linear Entleeren";
blend.lighter.colorDodge = "Farbe Entleeren";
// Blend: contrast
blend.contrast = "Kontrast";
blend.contrast.hardLight = "Hartes Licht";
blend.contrast.softLight = "Weiches Licht";
blend.contrast.overlay = "Ineinanderkopieren";
blend.contrast.hardMix = "Harte Mischung";
blend.contrast.linearLight = "Lineares Licht";
blend.contrast.vividLight = "Lebhaftes Licht";
blend.contrast.average = "Durchschnitt";
// Blend: inversion
blend.inversion = "Umkehrung";
blend.inversion.exclusion = "Ausschluss";
blend.inversion.difference = "Unterschied";
// Blend: cancelation
blend.cancelation = "Stornierung";
blend.cancelation.divide = "Teilen";
blend.cancelation.subtract = "Subtrahieren";
// Blend: component
blend.component = "Komponente";
blend.component.luminosity = "Leuchtkraft";

// Camera (point of view in 3d)
camera = "Kamera";
cameras = "Kameras";
camera.view = "Ansicht";
// Copy the views
camera.updateView = "Ansicht updaten?";
// Add a new camera
camera.addView = "Ansicht hinzufügen";
// Focus on the camera
camera.focus = "Fokus";
// Add on the camera camera
camera.focusOn = "Fokus auf";
// Camera projection, Orthographic or Perspective
camera.projection = "Projektion";
// Camera projection, Orthographic or Perspective
camera.projection.orthographic = "Orthographisch";
// Camera projection, Orthographic or Perspective
camera.projection.perspective = "Perspektivisch";
// camera Vertical Field of View
camera.fov = "Vertikales FoV";
// Camera Field of View hint
camera.focal = "Brennweite $0mm (35mm Sensor)";
// Rotation mode controls how the user will interact with the camera rotation
camera.rotation = "Rotation";
// Camera interaction mode, 2 degrees of freedom (synonym: Orbit)
camera.rotation.orbit = "Drehscheibe";
// Camera interaction mode, 3 degrees of freedom
camera.rotation.trackball = "Trackball";
camera.rotation.trackball.help = "Trackball gibt mehr einem mehr Spielraum, man kann die Kamera auch mit 2 Fingern drehen.";
// Camera interaction mode, 1st person view
camera.firstPerson = "Erste Person";
// How sensitive the camera is (synonym: sensitivity)
camera.speed = "Geschwindigkeit";
// Camera rotation sensitivity
camera.speed.rotation = "Rotation";
// Camera translation sensitivity
camera.speed.panning = "Schwenken (Pan)";
// Camera zooming sensitivity
camera.speed.zooming = "Zoomen";
// Reset camera position
camera.resetView = "Reset Ansicht";
// Align the view (snap to nearest 90° angle)
camera.snapView = "Snap Ansicht";
// Warning (camera is snapped and it switched to orthographic)
camera.snapOrthographic.warning = "Kamera ausgerichtet (orthografisch)";
// Switch to orthographic view when the view is snapped
camera.snapOrthographic = "Orthografisch ausrichten";
camera.snapOrthographic.help = "Diese Option funktioniert auch mit dem Ansichten-Würfel in der Ecke.";
// The Camera pivot is the point around which the camera rotates
camera.pivot = "Drehpunkt";
// When we double tap on the object with the finger/stylus
camera.doubleTapMesh = "Doppel-Tap Mesh";
// When we double tap on the background with the finger/stylus
camera.doubleTapBackground = "Auf Hintergrund doppeltippen";
// When we double tap on the background with the finger/stylus
camera.doubleTapBackgroundFocus.toggle = "Umschalten";
// Focus on the selection
camera.doubleTapBackgroundFocus.selection = "Auswahl";
// Focus on the entire scene
camera.doubleTapBackgroundFocus.scene = "Szene";
// When double tapping with the finger/stylus, the camera pivot will be updated
camera.doubleTapPivot = "Update bei Doppel-Tap";
camera.doubleTapPivot.help = "Aktualisieren Sie den Drehpunkt (Pivot) beim doppelten Antippen.";
// Allow new pivot even when zooming outside the object surface
camera.airPivot = "Luftdrehpunkt";
camera.airPivot.help = "Neuen Drehpunkt zulassen, wenn außerhalb der Objektoberfläche gezoomt wird.";
// Update the pivot when you start interacting with the camera
camera.autoPivot = "Bei Kamerabenutzung";
camera.autoPivot.help = "Aktualisieren Sie den Drehpunkt (Pivot), wenn Sie beginnen, mit der Kamera zu hantieren.";
// Move the camera so that it focus on the intersection point
camera.doubleTapFocus = "Fokus";
camera.doubleTapFocus.help = "Wenn Sie doppelt auf das Mesh tippen, schwenkt die Kamera und fokussiert auf den ausgewählten Punkt.";

// Toolbox context (when expanded), multiple objects are selected
context.multiselection = "Mehrfachauswahl";
// There is 0 nodes/items selected
context.noSelection = "Keine Auswahl";

// Curve type, presets lets the user chooses between predefined curves
curve.preset = "Preset";
// Quick curve x side shift
curve.shift = "Umschalttaste";
// Curve type, https://en.wikipedia.org/wiki/Centripetal_Catmull%E2%80%93Rom_spline
curve.catmull = "Catmull-Rom";
// Curve curve, https://en.wikipedia.org/wiki/Spline_(mathematics)
curve.spline = "Spline";
curve.bspline = "B-Spline";
curve.precision = "Genauigkeit";
// snap
curve.snap = "Haften";
curve.snap.offset = "Versatz";
curve.snap.offset.help = "Ein Wert von 100% entspricht dem Radius des Tubes.";
curve.snap.surface = "Oberfläche";
curve.snap.vertex = "Vertex";
curve.snap.grid = "Raster (wenn angeheftet)";
// Regular spaced sampling
curve.uniform = "Gleichmäßig";
curve.uniform.help = "Die Kurve wird in regelmäßigen Abständen abgetastet, um eine gleichmäßige Dichte zu gewährleisten.

Sie können diese Option deaktivieren, um die Kantenloops ein wenig zu steuern, indem Sie neue Kontrollpunkte auf der Kurve hinzufügen.";
// Display the falloff curve in a symmetric way
curve.symmetric.help = "Stellen Sie den Abfall symmetrisch dar.

Diese Option ist nur ein visuelles Signal, sie hat keinen Einfluss auf den Abfall selbst";
curve.radius = "Radius";
curve.twist = "Verdrehen";
curve.spiral = "Spirale";
curve.spiral.twist = "Drehwinkel";
curve.spiral.scale = "Skalierung";
curve.spiral.offset = "Versatz";
curve.spiral.angle = "Winkel-Offset";
curve.pivot = "Drehpunkt";
curve.pivot.self = "Kurve";
curve.pivot.children = "Unterknoten";

// Set the desired FPS (frame per second, refresh rate)
debug.targetFPS = "Ziel-FPS";
debug.targetFPS.help = "Wenn deaktiviert, bedeutet der Standardwert, dass er mit der Aktualisierungsrate des Displays synchronisiert wird.";

// Warning about UVs (using extra memory)
debug.uvPrimitive.warning = "Deaktivieren Sie diese Option, wenn Sie keine UVs benötigen (zusätzlicher Speicher).";
// Debug option, Normalize means transforming the data so that it fits in [0-1] the range
debug.uvNormalize = "UVs normalisieren";
debug.uvNormalize.help = "Nomad normalisiert die UVs innerhalb Tile [0-1].";
// Debug option, BFF stands for Boundary First Flattening (no need to translate)
debug.uvBFF = "BFF UVs hinzufügen";
debug.uvBFF.help = "Hinzufügen einer alternativen Unwrapping-Methode (boundary first flattening • BFF).

Beachten Sie, dass BFF zu Überschneidungen führt, wenn Ihre Mesh-Topologie nicht aus einer Scheibe oder Kugel besteht.";

// Debug option, display an window with some debugging logs
debug.logs = "Logs";
// Debug option, overrides the rendering to display the depth buffer
debug.heightmap = "Höhenkarte";
// Debug options, graphical stuffs
debug.graphics = "Grafik";
// Debug options, generate screenshots with size compatible with the iOS store
debug.thumbnails = "Vorschaubilder erstellen";

// Empty list: there is no projects
file.project.empty = "Sie haben noch kein Projekt gespeichert!";
// The current opened project has some unsaved changes
file.project.unsaved = "Nicht gespeicherte Änderungen!";
// The user will loose its project's unsaved changes
file.project.loseUnsaved = "Sie werden nicht gespeicherte Änderungen verlieren!";
// Indicates to the user that the project thumbnail corresponds to the last manual save
file.project.lastManualSave = "Vorschau der letzten manuellen Speicherung";
// The user is starting a new project but he won't be able to open the current project (because of trial version)
file.project.trialNoOpen = "Testversion: Sie können das aktuelle Projekt nicht mehr öffnen!";
// The user is trying to load a project but he can only reload the current opened project (because of trial version)
file.project.trialOnlyOpen = "Testversion: Sie können nur Ihr aktuelles Projekt wieder öffnen!";

file.project = "Projekt";
// Save current project (or overwrite if the project has already been saved once)
file.project.save = "Speichern";
// E.g: Save "my_project"?
file.project.save.confirm = "$0 speichern?";
// Overwrite another project
file.project.saveAs = "Speichern als";
// E.g: Overwrite "my_other_project"?
file.project.saveAs.confirm = "$0 überschreiben?";
// Open a project
file.project.open = "Öffnen";
// E.g: Open "my_project"?
file.project.open.confirm = "$0 öffnen?";
// Load another project and add/append all its data to the current scene
file.project.add = "Hinzufügen";
// E;g: Add "my_other_project" to the scene?
file.project.add.confirm = "$0 der Szene hinzufügen?";
// Reset the scene and create a new project
file.project.new = "Neu";
file.project.new.confirm = "Neue Szene erstellen?";
// Delete a project (not corresponding to the currently opened one)
file.project.delete.confirm = "$0 löschen?";
// Delete a project (corresponding to the currently opened one)
file.project.delete.confirmActive = "$0 löschen?

Dies ist das derzeit aktive Projekt!";

// Auto save section
file.project.autoSave = "Auto-Speichern";
file.project.autoSave.confirm = "Automatisches Speichern deaktivieren?";
file.project.autoSave.help = "Speichert Ihr Projekt in regelmäßigen Abständen in einer separaten Datei.

Die automatisch gespeicherte Datei finden Sie in:";
// Interval in minutes in which the auto save popup will appear
file.project.autoSave.popup = "Popup-Zeitüberschreitung";
// In minutes
file.project.autoSave.minutes = "Timer Popup";
// Delete the current autoSave data
file.project.autoSave.delete = "AutoSave löschen";

// color space (linear or srgb), do not translate linear/srgb if there is a doubt
file.colorSpace = "Farbraum";
file.colorSpace.help = "Versuchen Sie diese Option umzuschalten, wenn die Farben falsch erscheinen.";
file.colorSpace.linear = "Linear";
file.colorSpace.srgb = "sRGB";

// Configure imports option
file.importSettings = "Importoptionen";

// Load interface preference settings when opening a scene file
file.import.guiSettings = "GUI-Einstellungen mitladen";
file.import.guiSettings.help = "Beim Öffnen oder Importieren einer Projektdatei werden alle in das Projekt eingebetteten GUI-bezogenen Einstellungen geladen.";
// OBJ have "groups" and "objects", by default groups are ignored, use this option to consider groups as separate objects
file.import.obj.splitByGroup = "OBJ-Gruppen beibehalten";
file.import.obj.splitByGroup.help = "Wenn diese Option aktiviert ist, teilt Nomad das OBJ in jede Vertex-Gruppe in separate Objekte auf.";
// Merge all the object layers at when loading a file (deleting them in the process)
file.import.mergeLayers = "Layer zusammenführen";
// Ignore the textures present in the file to load
file.import.skipTextures = "Texturen überspringen";
// Do not fiddle with the object topology when loading the file
file.import.keepTopology = "Topologie beibehalten";
file.import.keepTopology.help = "Verwenden Sie diese Option, wenn Sie nicht möchten, dass Nomad die Topologie des importierten Meshes verändert.

Es deaktiviert das Neuanordnen von Vertices/Faces, das Entfernen von Vertex-/Face-Duplikaten und das Entfernen von unbenutzten Vertices.";

// Import file section
file.import.title = "Importieren";
file.import.title.help = "Unterstützte Formate:";
// The user imports a scene file that will replace the current scene
file.import.open = "Öffnen";
file.import.open.confirm = "Neue Datei importieren?";
// The user imports a scene file that will be added/appended the current scene
file.import.add = "Der Szene hinzufügen";
file.import.add.confirm = "Neue Datei importieren?";

// Export scene file
file.export.title = "Exportieren";

file.select.include = "Beinhalten";
file.select.all = "Alle";
file.select.visible = "Sichtbar";
file.select.selected = "Ausgewählt";
file.select.unselected = "Nicht ausgewählt";

// Export the current selected objects instead of the entire scene
file.onlySelection = "Nur Auswahl exportieren";
file.onlySelection.help = "Exportieren Sie nur das aktuell ausgewählte Mesh anstelle der gesamten Szene.";
// Tries to generate quad (rectangle polygon) from triangles
file.convertToQuad = "Vierecke wiederherstellen";
file.convertToQuad.help = "Wiederherstellen von Vierecken aus Dreiecken durch Paarung von Dreiecken (wenn sie in den Dateien benachbart sind).";
// ----------------------------------------------
// Whether we include the textures in the exported file
file.export.texture = "Texturen";
// Baking means transfering/converting
file.export.texture.help = "Mit dieser Option werden keine Vertex-Farben in die Texturen eingefügt (kein Baking).";
// ----------------------------------------------
file.export.color0 = "Vertex-Farben";
file.export.color1 = "PBR-Bemalung";
file.export.color1.help = "Exportiert „Matt“ und „Metallisch“ sowie Maskierungsbemalung. Dies wird von anderen Programmen ignoriert.";
// ----------------------------------------------
// Whether we include normals vector in the exported file
file.export.normal = "Normale";
file.export.normal.help = "Aktivieren Sie diese Option, wenn Sie die Datei in einer anderen Software öffnen möchten.

Nomad ignoriert immer die Normale, da es sie neu berechnet.";
// ----------------------------------------------
file.export.tangent = "Tangenten";
file.export.tangent.help = "Aktivieren Sie diese Option, wenn Sie die Datei in einer anderen Software öffnen möchten.

Tangenten werden nur verwendet, wenn das Modell eine Normalmap hat.

Nomad ignoriert immer die Tangenten, da es sie neu berechnet.";
// ----------------------------------------------
file.export.nomad = "Nomad exportieren";
file.export.nomad.help = "Internes Dateiformat von Nomad Sculpt.

Dieses Format wird auf anderen Software nicht geladen, es dient hauptsächlich zum erneuten Importieren.";
// ----------------------------------------------
file.export.gltf = "glTF 2.0 exportieren";
// Whether we include layers in the exported file (see glossary for layer)
file.export.gltf.layer = "Layer";
file.export.gltf.layer.help = "Exportieren Sie Ebenen als Morphs. Offiziell von glTF unterstützt, so dass es auch in anderen Programmen funktionieren sollte.";
// Whether we include painting of layers in the exported file (see glossary for layer)
file.export.gltf.layerPaint = "Zusätzliche Material-Layer";
file.export.gltf.layerPaint.help = "Exportieren Sie Roughness, Metalness, Masken und Layer-Painting. Dies wird von anderen Programmen als Nomad ignoriert werden.";
// ----------------------------------------------
file.export.obj = "OBJ exportieren";
file.export.obj.warning = "Layer und zusätzliches Painting (Roughness, Metalness, Masken) gehen verloren.";
// Whether we include the vertex color in the exported file
file.export.obj.color = "Vertex-Farben";
file.export.obj.color.help = "Einige 3D-Programme können dies importieren, aber nicht alle.";
file.export.obj.color.help.append = "Farbinformationen nach Vertices einfügen.";
file.export.obj.color.help.hexa = "Eine alternative Methode zur Farbkodierung. Sie unterstützt auch Maskendaten.";
file.export.obj.faceGroup = "Face-Gruppe";
file.export.obj.object = "Objekte schreiben";
file.export.obj.object.help = "Objekte getrennt halten.

Diese Option deaktivieren, wird alles als eine einzige Einheit exportiert.
Diese Option muss deaktiviert werden, wenn Sie die 'Mesh ID / Polygroup' Funktion in Substance Painter verwenden möchten.";
file.export.obj.archive = "Typ";
file.export.obj.archive.folder = "Ordner";
file.export.obj.archive.zip = "Zip";
file.export.obj.archive.help = "Einige Apps (Google Drive, One Drive usw.) unterstützen keinen Ordnerimport, daher können Sie stattdessen Zip verwenden.";
// ----------------------------------------------
file.export.stl = "STL exportieren";
file.export.stl.warning = "Layer und zusätzliches Painting (Roughness, Metalness, Masken) gehen verloren.";
// Whether we include the vertex color in the exported file
file.export.stl.color = "Vertex-Farben";
file.export.stl.color.help = "Einige 3D-Programme können dies importieren, aber nicht alle.";
// ----------------------------------------------
file.export.ply = "STL exportieren";
file.export.ply.warning = "Layer und zusätzliches Painting (Roughness, Metalness, Masken) gehen verloren.";
// ----------------------------------------------
file.export.fbx = "FBX exportieren";
// ----------------------------------------------
// Advanced settings
settings.advanced = "Erweitert";
// Means that all these options will be resetted when the app restarts
settings.notSaved = "Diese Optionen werden nicht in den Einstellungen gespeichert";
settings.reset.title = "Einstellungen";
settings.reset.title.help = "Hierdurch werden die App-Einstellungen zurückgesetzt.

Einige Ressourcen werden separat gesichert und werden NICHT zurückgesetzt, darunter:
• Projekte
• Tastenbelegung
• Werkzeug-Presets
• HDRs-Umgebungen
• MatCaps
• Alphas
• Texturen (Pinsel)
• Referenzbilder

Beachte, dass alle projektspezifischen Einstellungen unverändert bleiben, z. B. Beleuchtung, Nachbearbeitung oder Kamera-Ansichten.";

// Reset preference settings button
settings.reset = "Reset";
settings.reset.confirm = "Einstellungen zurücksetzen?";

// Render a screenshot of the scene
file.render = "Rendern";
// If we include the App Interface in the exported screenshot
file.render.showInterface = "Interface anzeigen";
// Resolution ratio of the exported screenshot
file.render.renderRatio = "Renderfaktor";
file.render.renderRatio.help = "Ein Wert von 1,0 bedeutet, dass Nomad mit der gleichen Auflösung rendert, wie die unten angegebene Bildgröße.

Verwenden Sie diese Option, wenn Sie bei einer bestimmten Auflösung nicht rendern können (Abstürze wegen Speichermangels).";
// Desired size of the exported screenshot
file.render.size = "Endgültige Größe";
// Desired size of the exported screenshot (custom vs predefined size)
file.render.size.custom = "Benutzerdefiniert";
// Screen resolution parameters for the export screenshot features
file.render.screenResolution = "Bildschirm";
// width of exported screenshot
file.render.width = "Breite";
// height of exported screenshot
file.render.height = "Höhe";
// export screenshot of the scene
file.render.export = "PNG exportieren";
file.render.warn = "Die Export-Auflösung ist hoch ($0x$1)!

Stellen Sie sicher, dass Sie Ihr Projekt vorher speichern, für den Fall, dass Ihr Gerät keinen VRAM mehr hat und abstürzt.";
// If true, then the exported screenshot will have transparency data in the image
file.render.transparent = "Transparenter Hintergrund";
file.render.transparent.help = "Diese Option kann nützlich sein, wenn Sie das freigestellte Mesh in eine 2D-Software importieren möchten.

Teilweise Objekttransparenz wird momentan noch nicht unterstützt.";

// Disable this option to have per-tool pressure settings (instead of shared settings)
pressure.useGlobal = "Globale Vorgabe nutzen";
pressure.useGlobal.help = "Standardmäßig haben alle Werkzeuge dieselben Pressure-Settings.

Deaktivieren Sie diese Option, wenn Sie spezielle Pressure-Settings für dieses Werkzeug wünschen.";

// Pencil pressure
pressure.title = "Druck";
// Pencil/Stylus pressure will be ignored
pressure.noTool = "Dieses Werkzeug verwendet keine Pressure-Settings für den Stift.";
// The tool can support pressure but its selected stroke type will ignore it
pressure.noGrab = "Grab ignoriert Pressure-Settings.";
// The stylus pressure will impact the tool radius (more pressure -> bigger radius)
pressure.radius = "Radius";
// The stylus pressure will impact the tool intensity (more pressure -> stronger intensity)
pressure.intensity = "Stärke";
// Average pencil pressure event to get smoother result
pressure.average = "Druckglättung";
pressure.average.help = "Mitteln Sie die Druckereignisse des Stifts für glattere Ergebnisse.";

// list of inputs allowing camera interaction
gesture.camera = "Kamera";
// list of inputs allowing sculpting interaction
gesture.sculpt = "Bearbeiten";
// Select object
gesture.select = "Objekt auswählen";
// Finger/Touch input
gesture.finger = "Finger";
// Stylus/Pencil
gesture.stylus = "Stylus";
// Mouse/Trackpad
gesture.mouse = "Maus";

// long press to pick the color/material under the cursor
gesture.dropper = "Materialauswahl";
gesture.dropper.help = "Die Farb-/Materialauswahl kann durch langes Drücken auf den Arbeitsbereich aufgerufen werden.

Dies funktioniert nur, wenn das Malen für den aktuellen Pinsel aktiviert ist.";

// Three fingers on screen
gesture.three.title = "Drei Finger";
gesture.three.light = "Beleuchtung drehen";
gesture.three.light.help = "Dreht die Umgebung, Lichter und MatCap.";
gesture.three.radius = "Werkzeugradius";
gesture.three.intensity = "Werkzeugintensität";

// If this option is enabled, finger inputs on screen will use the smoothing tool
gesture.finger.smooth = "Finger glättet immer";
gesture.finger.smooth.help = "Diese Option ist nur aktiv, wenn ein Bildhauerwerkzeug aktiv ist.";
// If enabled, the pressure will be taken into account even if it's not coming from a recognized stylus
gesture.unknownPressure = "Unerkannten Pressure zulassen";
gesture.unknownPressure.help = "Aktivieren Sie diese Option, wenn Pressure (Druck) mit Ihrem Stift nicht funktioniert oder wenn Sie einen Pressure für den Finger benötigen.";

// Action when we press an Android pencil button
gesture.pencilAction.android = "Stift: Taste";
// Action when we use the Pencil double Tap
gesture.pencilAction.ios = "Stift: Doppel-Tap";
gesture.pencilAction.ios.help = "Nur aktiv für Apple Pencil 2. Generation.";
// Pencil button (or iOS pencil double tap) action: Nothing
gesture.pencilAction.none = "Nichts";
// Pencil button (or iOS pencil double tap) action: flip adding/substracting sculpt matter setting
gesture.pencilAction.alt = "Add/Sub";

// Enable Mask gesture by tapping once on the screen
gesture.mask.oneTap = "Shortcuts mit einem Tippen";
gesture.mask.oneTap.help = "Nutze den Maskieren-Shortcut, indem du einmal auf den Bildschirm tippst. So musst du nicht die Maskieren-Taste gedrückt halten.

Du kannst folgende Gesten nutzen:
• auf den Hintergrund tippen, um die Maskierung umzukehren
• auf einen maskierten Bereich tippen, um die Maskierung unscharf zu machen
• auf einen nicht maskierten Bereich tippen, um die Maskierung schärfer zu machen";
// Hold the finger on screen to toggle between two tools: Mask and SelMask
gesture.mask.holdStroke = "Strich";
gesture.mask.holdStroke.help = "Ein langer Druck wechselt zwischen Maske und SelMaske und beginnt einen neuen Strich.

Am Ende des Strichs wird das vorherige Werkzeug wieder ausgewählt.";
gesture.mask.holdIdle = "Werkzeug";
gesture.mask.holdIdle.help = "Lange drücken und ohne Bewegung loslassen, um zwischen Maske und SelMaske zu wechseln.";

// Shortcut customization, choose the action that the shortcut will performan (select tool, etc)
gesture.shortcut = "Shortcut";

// Shortcuts to undo/redo
gesture.history = "Schnelle-Geste";
gesture.history.help = "2-Finger Tap für UnDo.
3-Finger Tap für ReDo.";
gesture.history.hold = "Lange drücken";
gesture.history.hold.help = "Halten Sie 2/3 Finger nach unten";

// Size rejection is when we try to ignore the palm of the hand when we interact with a tablet
gesture.palmRejection = "Touch-Schwelle";
gesture.palmRejection.confirm = "Wenn Sie Probleme bei der Erkennung der Touch-Eingabe haben, stellen Sie sicher, dass diese Option deaktiviert ist!";
gesture.palmRejection.help = "Die Eingabe auf dem Touchdisplay wird abgelehnt, wenn die Größe der Kontaktfläche beim Touch größer ist, als der vorgegebene Wert.

Funktioniert möglicherweise nicht auf jedem Gerät.";
// Size in pixel for the palm rejection feature
gesture.palmRejection.size = "Schwelle für maximale Größe";

// Smoothing strategy
extract.polish.all = "Alle";
extract.polish.sharp = "Scharfe Kante";
extract.polish.border = "Nur Kanten";
// Smooth the border in a way that it matches completely with its dual
extract.polish.syncBorder = "Kante synchronisieren";
// topology of extracted mesh
extract.edgeLoop = "Kantenschleife (Seite)";
extract.edgeLoop.auto = "Automatische Kantenschleife";
extract.edgeLoop.division = "Untereilung";
// The thickness of the extracted mesh (from the painted mask)
extract.thickness = "Stärke";
// Carve the mask into the surface
extract.carve = "Gravieren";
// Extract a new mesh from the painted mask
extract = "Extrahieren";
// Preview extract
extract.preview = "Vorschau";
// Extract two new mesh from the painted mask and from the unmasked area
extract.split = "Teilen";
// How should we close the topology of the extracted object
extract.action = "Closing Aktion:";
extract.action.help = "• Keine
Extrahiert einfach den Bereich und lässt das extrahierte Teil offen.

• Fill
Das Loch wird gefüllt und geglättet.
Verwenden Sie diese Option nicht für ebene Oberflächen.

• Shell
Schließt die extrahierte Form mit Hilfe des Dickenwerts.

• Layer
Extrahiert die Layer-Differenz (nur Layer-Untermenü).";
// Do not close the mesh (leave it open)
extract.action.none = "Keine";
// Close the mesh with a hole-filling algorithm
extract.action.fill = "Füllen";
// Close the mesh by adding a thickness on the surface
extract.action.shell = "Hülle";
// Close the mesh by using the layer data as a difference thickness
extract.action.layer = "Ebene";

// uv part of revolution surface
genus.main = "Luminanz";
genus.hole = "Loch";
genus.bottom = "Unten";
genus.top = "Oben";

// History, list of undo/redo
history = "Verlauf";
// First "undo" state
history.root = "Start";
history.undoConfirm = "Bestätigen Sie das UnDo (Rückgängig machen) all dieser Änderungen?";
history.undoWarning = "Wenn Sie eine nachträgliche Bearbeitung vornehmen, können viele Änderungen verloren gehen.";
// Settings concerning the history stack of undo/redo
history.stack = "Stapel";
// Actions to include in the undo/redo stack
history.include = "Aktionen einschließen";
// include lighting editing in the undo/redo
history.includeLights = "Lichter";
history.includeLights.help = "Wenn diese Option deaktiviert ist, bewegt das Gizmo die Lichter nach wie vor mit, da sich dies auf andere Objekte in der Szenenhierarchie auswirken kann.";
// include postProcess editing in the undo/redo
history.includePostProcess = "Nachbearbeitung";
// include shading parameters (MatCap & HDRIs) editing in the undo/redo
history.includeShading = "MatCaps und HDRIs";
// Can limit the stack of undo/redo size
history.limitSize = "Verlaufslimit";
history.limitSize.help = "Max. Größe des Verlaufs.

Der Verlauf wird bei der nächsten aufgezeichneten Änderung aktualisiert.";
// Limit the number of undo in the history stack
history.limitStack = "Stapel-Limit";
history.limitStack.help = "Maximale Anzahl von Änderungen, die im Verlauf bleiben.

Der Verlauf wird bei der nächsten aufgezeichneten Änderung aktualisiert.";
// Value where you define how many operations you can undo before it displays a warning
history.rangeProtect = "Schutz des Bereichs";
history.rangeProtect.help = "Wenn Sie weit in der Verlaufsliste zurückgehen, wird ein Bestätigungsdialog angezeigt, bevor viele Änderungen auf einmal rückgängig gemacht werden.";
// When enabled, each time the user undo an operation it will undo the camera position as well
history.restoreCamera = "Reset Kamera";
history.restoreCamera.help = "Aktivieren Sie diese Option, um die gespeicherte Kamera-Ansicht wiederherzustellen, wenn Sie eine Aktion rückgängig machen/wiederherstellen (UnDo/ReDo).";
// Undo
history.undo = "Rückgängig";
// Redo
history.redo = "Wiederholen";
// Shown during undo
history.state.undo = "Rückgängig: $0";
// Shown during redo
history.state.redo = "Wiederholen: $0";
// Shown during undo/redo
history.state.symmetrySplit = "Symmetrie Split";
// Shown during undo/redo
history.state.voxelRemesh = "Voxel Remesh";
// Shown during undo/redo
history.state.surfaceRemesh = "Surface Remesh";
// Shown during undo/redo
history.state.multiresLevel = "Auflösung ändern";

// Debugging/Inspect object material (view channel separately color, roughness, normal, uv, etc)
inspect = "Inspektor";
// Inspector but SHORT
inspect.short = "Inspektion";
// Display the material channel on the background
inspect.onBackground = "Auf Hintergrund";
// Display the material channel on the mesh
inspect.onMesh = "Auf dem Netz";
// Show UV seams
inspect.seams = "Nähte";

// Interface customization
interface = "Oberfläche";

// UI customization: one item row will stands on one line (synonym: Inlined)
interface.compact = "UI: Kompakt";

// UI customization: each row of the list will be bigger
interface.expandList = "UI: Liste erweitern";
// UI customization: each row of the list will be bigger
interface.expandList.help = "Nur eine UI-Option zur einfacheren Listenverwaltung.";

// Add shortcuts buttons to the bottom of the screen
interface.bottomButtons = "Shortcuts hinzufügen (unten)...";

// Interface option (main base color)
interface.colorBase = "Grundfarbe";
// Interface option (accent widget color)
interface.colorSelect = "Widget-Farbe";
// Interface option (if the menus are transparent or opaque)
interface.panelTransparent = "Panel transparent";
// Interface option (panel blurriness, if the menus are transparent)
interface.blurFactor = "Unschärfe";
// Interface option (color of panels, if the menus are transparent)
interface.colorBaseTransparent = "Panel-Farbe";

// Interface color style
interface.preset.title = "Presets";

// Reset interface settings
interface.resetAll = "Reset Interface";
interface.resetAll.confirm = "Alle Interface-Einstellungen zurücksetzen?";
// help popup when hovering
interface.hoverHelp = "Hilfs-Popup bei Hover";
// Interface option (main base color)
interface.iconSupport = "Kontrastreicher Knopf";
interface.iconSupport.help = "Ein alternativer Stil für Knöpfe, der sie sichtbarer macht, wenn sie aktiviert sind.

Wenn auf Auto eingestellt, wird Nomad diesen Modus verwenden, wenn der UI-Farbenkontrast zwischen aktiviert/deaktiviert niedrig ist.";
// Interface customization
interface.flipTop = "Oben spiegeln";
// Interface customization
interface.flipBottom = "Unten spiegeln";
// Interface customization
interface.flipMiddle = "Mitte spiegeln";
// list of tools
interface.toolbox = "Toolbox";
// hide toolbox by default
interface.toolbox.hide = "Ausgeblendet";
// Interface customization (the toolbox is a grid, we can adjust the column count)
interface.toolbox.columns = "Spalten";
// Interface customization (the toolbox is a grid, we can adjust the column count)
interface.toolbox.rows = "Reihen";
// Reset the tool's order in the toolbox
interface.toolbox.resetOrder = "Reset Anordnen";
// Colored text and icon
interface.toolbox.color = "Farbig";
// Scale the interface
interface.scale = "Gesamt-Skalierung";
// Spacing between widgets
interface.cursorStep = "Vertikale Abstände";
// Width of the interface panels
interface.panelWidth = "Panel-Breite";
// Size of fonts
interface.fontScale = "Schriftgröße";
// Inset
interface.inset.title = "Randabstand";
interface.inset.title.help = "Ändere diese Werte nur, wenn du Schwierigkeiten hast, die Tasten am Bildschirmrand zu bedienen.

Wenn der Regler deaktiviert ist, nutzt Nomad die vom Gerät selbst bereitgestellten sicheren Werte für den Bildschirmbereich.";

// (see Glossary for Layer)
layer = "Ebene";
layers.syncTransform = "Transformation synchronisieren";
layers.syncTransform.help = "Wenn aktiviert, werden alle nicht ausgewählten Ebenen abhängig von der Transformationsrotation, Skalierung und Schieflage angepasst.

Deaktivieren Sie diese Option, wenn die anderen Ebenen ohne die neue von Ihnen angewandte Transformation verwendet werden sollen.

Wenn auf Automatik gesetzt, werden nur die sichtbaren Ebenen angepasst.";
// (see Glossary for Layer)
layers.lock = "Details der oberen Ebenen erhalten";
// (see Glossary for Layer)
layers.lock.yes = "Obere Ebenen sperren?";
// (see Glossary for Layer)
layers.lock.warning = "Beim Formen wird die von den obersten Ebenen ausgehende Umformung ignoriert.

Die Details dieser Ebenen bleiben jedoch sichtbar.

Diese Option funktioniert nur, wenn die oberen Ebenen über relativ wenig Details verfügen.";
// (see Glossary for Layer)
layers.addLayer = "Layer hinzufügen";
// (see Glossary for Layer)
layer.factors = "Kanal-Werte";
// (see Glossary for Layer)
layer.factor = "Faktor";
// (see Glossary for Layer)
layer.offset = "Versatz";
// Layer blend mode
layer.blendMode = "Überblenden";
// (see Glossary for Layer)
layer.base = "Basis";
layer.base.nothing = "Nichts zum Extrahieren!";
layer.base.background = "Hintergrundmaterial";
layer.base.background.help = "Wenn aktiv, werden nur die Materialwerte, die sich vom Hintergrundmaterial unterscheiden, extrahiert.";
// (see Glossary for Layer)
layers.title = "Layer";
// (see Glossary for Layer)
layers.title.help = "Ebenen (Layer) können Positionsverschiebungen und Painting aufzeichnen, was für einen nicht-linearen Arbeitsablauf nützlich sein kann.
Zum Beispiel durch das Experimentieren mit verschiedenen Gesichtsausdrücken, ohne sich auf den Verlauf zurückzugreifen, um die Änderungen rückgängig zu machen.

Beim Painting werden die Ebenen von oben nach unten sortiert, d. h. die obersten Ebenen verdecken die unteren.

Sie können einen Teil dieser Maske (und damit den Einfluss dieser Ebene) zurücksetzen, indem Sie das Werkzeug `DelLayer` verwenden.";
layers.primitive = "Ebenen sind für Grundobjekte (Primitives) nicht verfügbar.";
// When there is no layer selected (see Glossary for Layer)
layers.baseSelected = "Nichts";

light = "Licht";
lights = "Lichter";
// Intensity of light
light.intensity = "Stärke";
// Color of light
light.color = "Farbe";
// Kelvin (the temperature unit)
light.kelvin = "Kelvin";
// Temperature in Kelvin (Alternative way to compute the color of the light)
light.temperature = "Temperatur";
// The attachment of a light defines how it will move when the user moves the camera
light.attachment = "Anordnung";
// The light will stay still even if the user moves the camera
light.attachment.fixed = "Fixiert";
// The light will move along the camera
light.attachment.camera = "Kamera";
light.attachment.help = "• Fixiert
Die Ausrichtung des Lichts ändert sich nicht.

• Kamera
Die Ausrichtung des Lichts hängt von der Kamera-Ausrichtung ab.";
// Light type (directional, spot, point)
light.type = "Typ";
// Directional light (synonym: sun light)
light.type.directional = "Direktional";
light.type.sun = "Sonne";
// Directional light (synonym: sun light)
light.type.environment = "Umgebung";
light.type.hdri = "HDRI";
// Spot light emits light in a single direction, restricted by a cone shape.
light.type.spot = "Spot";
// Point light emits lights everywhere (synonym: omni, omnidirectional)
light.type.point = "Punkt";
// For directional light (angle jitter)
light.angle = "Winkel";
// For point/spot light (offset jitter)
light.size = "Maße";
// Cone angle for spot angles
light.spot.angle = "Winkel Lichtkegel";
// Softness of the spot light
light.spot.softness = "Sanftheit";
// Position of the light
light.position = "Position";
// Enable or disable shadows for a light
light.shadow.cast = "Schatten";
// Point light only works with "screenspace" shadow type (not "shadow map")
light.shadow.pointTip = "Punktlicht unterstützt nur Schatten des Typs „Bildschirmbereich“.";
light.shadow.type = "Schattentyp";
// https://en.wikipedia.org/wiki/Shadow_mapping
light.shadow.type.shadowMap = "Schattenkarte";
// Shadows computed with only the information visible on screen
light.shadow.type.screenspace = "Bildschirmbereich";
light.shadow.type.screenspace.help = "Experimentelle Funktion, könnte in zukünftiger Version entfernt werden.

Diese Option sollte zusammen mit der Funktion für Schatten-Sanftheit verwendet werden.";
// Adjustment to fix artefacts
light.shadow.bias = "Verzerrung";
// How blurry the shadow is
light.shadow.softness = "Sanftheit";
// Contact shadows are more precise shadows on small distance (synonym: cavity shadows?)
light.contact = "Kontakt";
light.contact.help = "Ist „Auto“ ausgewählt, erzeugt nur das dominanteste Licht einen Kontaktschatten.";
// Thickness threshold for screen-space shadows (synonym: threshold, bias)
light.shadow.tolerance = "Toleranz";
// Activated the light
light.visible = "Zeigen";
// Move the light in front of the camera (but keeps its inner orientation)
light.resetPosition = "Zentrieren";

// Object's material
material = "Material";
// See glossary
material.pbrRoughnessMetalness.warning = "Roughness und Metalness werden im aktuellen Shading-Modus irgnoriert.";
// See glossary
material.pbrReflectance.warning = "„Reflexionsgrad“ erfordert den Shading-Modus „PBR“.";
// See glossary
material.pbrRefraction.warning = "„Refraktion“ erfordert den Shading-Modus „PBR“.";
// See glossary
material.pbrSubsurface.warning = "„Unter Oberfläche“ erfordert den Shading-Modus „PBR“.";
// Value that says how much light will change direction when hitting the surface
material.ior = "Lichtbrechungsindex (Refraction)";
// an object-level value that overrides the roughness interior/surface of the mesh
material.paintingOverride = "Painting aufheben";
// The roughness in the inside is turbidity
material.paintingOverride.help = "Zwei Werte für Mattheit spielen eine Rolle – der an der Oberfläche und der im Inneren.

Beim Bemalen ist jedoch nur eine Mattheit relevant, die beiden Matt-Werte sind also identisch.";
// Glossiness is simply the opposite of roughness
material.refraction.surface = "Oberfläche";
// Synonym: turbidity
material.refraction.interior = "Innen";
// Set the roughness of the object with a value of 0
material.paintGlossy = "Paint Glossy";
material.paintGlossy.help = "Painting mit Wert Roughness und Metalness von jeweils 0, für eine eine scharfe Brechung.

Dies entspricht der Nutzung des Paint All-Features aus dem Paint-Menü  mit deaktivierten color.";
// Simulate the light being absorbed when it travels through the volume.
material.absorptionEnable = "Absorption";
material.absorptionEnable.help = "Simulieren Sie die Absorption des Lichts, wenn es das Volumen durchbricht.

Dünne Teile werden hell, da sie mehr Licht durchlassen, während dicke Bereiche dunkler sind..

Der Effekt hängt stark von der Mesh-Geometrie ab, es wird nur eine Annäherung an die Mesh-Dicke verwendet.";
material.absorptionFactor = "Faktor";
// Depth means how far the light can travel under the surface
material.subsurfaceDepth = "Tiefe";
// Enable translucency (same as subsurface but only affect lights that enter a solid and escape from the other side)
material.translucency = "Durchscheinend";
material.translucency.help = "Du benötigst ein Licht, das Schatten erzeugt, um zu sehen, dass ein Objekt durchscheinend ist.";
// Opacity factor, the opposite of transparency (synonym: Alpha)
material.opacity = "Deckkraft";
// Fully opaque material
material.type.opaque = "Opak";
// See glossary
material.type.subsurface = "Unter Oberfläche";
material.type.subsurface.help = "Wechsle für beste Ergebnisse zum Shading-Modus „PBR“ und nutze mindestens ein direktionales Licht, idealerweise in einer relativ dunklen Umgebung.";
// Transparency mode, alpha blending
material.type.blending = "Überblenden";
material.type.blending.help = "Mach das Objekt halbdurchsichtig, indem du den Deckkraft-Wert einstellst.

Aufgrund der Darstellung in Echtzeit können bei komplexen Formen merkliche visuelle Artefakte entstehen.";
// Transparency mode
material.type.additive = "Additiv";
material.type.additive.help = "Mach das Objekt halbdurchsichtig, indem du den Deckkraft-Wert einstellst.

Diese Methode führt tendenziell zu weniger Artfakten als „Mischen“, das Objekt wird jedoch heller.";
// Transparency mode based on dithering
// https://en.wikipedia.org/wiki/Dither
material.type.dithering = "Dithering";
material.type.dithering.help = "Das Dithering (Fehlerdiffusion) ist eine Technik um bei Bildern die Illusion einer größeren Farbtiefe zu erzeugen. Dithering ist eine Art des Rasterns.";
// Simulate glass-like material
material.type.refraction = "Refraktion";
material.type.refraction.help = "Mit diesem Modus kann Glas simuliert werden.

Aufgrund der Darstellung in Echtzeit sind die Selbstrefraktion und die mehrschichtige Refraktion begrenzt.";
material.castShadows = "Wirft Schatten";
material.receiveShadows = "Empfängt Schatten";
// Lights are ignored, the object will be displayed with color only
material.alwaysUnlit = "Immer Unlit";
// Inverse the side of the object triangles
// https://en.wikipedia.org/wiki/Back-face_culling
material.flipCulling = "Umgekehrtes Culling";
// How much light a surface will reflect (synonym: specular)
material.reflectance = "Reflexionsgrad";
material.reflectance.help = "Kontrollieren Sie den Grad der Reflexion, den das Material bei nicht-metallischen Materialien erhält.

In den meisten Fällen sollte der Standardwert verwendet werden (was dem Standardwert von 4% reflektiertem Licht bei normalem Winkel entspricht).";
// Material preview in the viewport
material.preview = "Material-Picker Vorschau";
material.preview.help = "Wenn Sie ein Material ändern, wird eine Vorschau im Viewport auf dem ausgewählten Objekt angezeigt.

Die Vorschau wird angezeigt, während Sie mit den Reglern für Farbe, Roughness, Metalness, Opazität und Intensität interagieren.";
// Menu name
menu.files = "Dateien";
// Menu name
menu.scene = "Szene";
// Menu name
menu.multires = "Multiaufl.";
// Menu name
menu.voxel = "Voxel";
// Menu name
menu.dynamic = "Dyntopo";
// Menu name (Synonym: Misc, Other)
menu.topology = "Verschiedenes";
// Menu name
menu.primitive = "Grundformen";
// Menu name
menu.render = "Render";
// Menu name
menu.material = "Material";
// Menu name
menu.postprocess = "Nachbearbeitung";
// Menu name
menu.camera = "Kamera";
// Menu name
menu.background = "Hintergrund";
// Menu name
menu.tool = "Werkzeug";
// Menu name
menu.stroke = "Strich";
// Menu name
menu.alpha = "Alpha";
// Menu name
menu.filter = "Filter";
// Menu name
menu.falloff = "Falloff";
// Menu name
menu.paint = "Zeichnen";
// Menu name
menu.symmetry = "Symmetrie";
// Menu name
menu.operation = "Aktion";
// Menu name (pencil pressure)
menu.pressure = "Druck";
// Menu name
menu.gesture = "Gesten";
// Menu name
menu.layers = "Layer";
// Menu name
menu.settings = "Einstellungen";
// Menu name
menu.interface = "Oberfläche";
// Menu name
menu.bindings = "Tastenbelegung";
// Menu name
menu.history = "Verlauf";
// Menu name
menu.historySettings = "Einstellungen";
// Menu name
menu.about = "Über";
// Menu name
menu.debug = "Bereinigen";

// Operation on the object (action)
mesh.holes = "Löcher";
// If the object has holes, the algorithm will close them
mesh.holes.close = "Löcher schließen";
// Says how dense (number of triangles) the algorithm will use in order to fill holes
mesh.holes.detail = "Detailgrad";
// If the mesh has disconnected parts, it will be split/separated into objects
mesh.separate = "Trennen";
// When converting the object to a triplanar primitive, some object features will be lost
mesh.triplanar.warning = "Layer, Painting und Multiresolution geht verloren!";
// Resolution of the triplanar grid
mesh.triplanar.resolution = "Auflösung";
// Make the triplanar a regular cube (all 3 dimension equal)
mesh.triplanar.cubic = "Würfelform erzwingen";
// Covnert an object to a triplanar primitive
mesh.triplanar.convert = "Konvertieren";
// Static object means "static topology"
mesh.static = "Gitter";
// See glossary
mesh.multires = "Multiauflösung";
// Dynamic topology
mesh.dynamic = "Dyntopo";

// Disable this option to have per-tool material settings (instead of shared settings)
paint.useGlobal = "Globales Material";
paint.useGlobal.help = "Wenn diese Option aktiviert ist, ist das ausgewählte Material dasselbe wie bei den anderen Werkzeugen.

Beachte, dass hier nur die Einstellungen „Matt“, „Metallisch“ und „Farbe“ berücksichtigt werden.";
// The current tool will paint the object if this option is enabled
paint.usePainting = "Striche malen";
// If true save the textures data into
paint.preset.embed = "Texturen einbetten";
paint.preset.embed.help = "Die Texturen befinden sich im Ordner Nomad textures/.
Die Materialvoreinstellungen finden Sie im Ordner Nomad materials/.

Wenn diese Option deaktiviert ist, verweist die Materialvoreinstellung nur auf die Textur im Ordner textures/.

Diese Option kann aktiviert werden, um eine Kopie der Texturen innerhalb der Materialvoreinstellung zu erstellen.
Das kann nützlich sein, wenn Sie ein texturiertes Voreinstellungspaket teilen möchten, ohne die zugehörigen Texturen bereitzustellen.";
paint.preset.embed.apply = "Auf alle Materialien anwenden";
// Factor/Opacity of paint tool
paint.intensity = "Paint Stäke";
// Apply the paint on the object
paint.paintAll = "Füllen";
paint.paintAll.help = "Wendet das aktuelle Material auf das gesamte Mesh ohne maskierte Bereiche an (Paint all).";
paint.paintAll.help.mask = "Maskierter Bereich wird nicht beeinflusst.";
paint.paintAll.help.hide = "Versteckter Bereich wird nicht beeinflusst.";
paint.paintAll.help.opacity = "Verwende den oben angegebenen Werkzeug-Malfaktor.";
paint.paintAll.help.layer = "Unbemalter Bereich einer Ebene wird nicht beeinflusst.";
paint.strokePainting.title = "Malen";
// Brush stroke texture
paint.texture.warningEnable = "Stroke Painting muss aktiviert sein, um Texturprojektion zu ermöglichen (Kontrollkästchen oben)!";
paint.texture.warningIgnored = "Das aktuelle Werkzeug kann keine Texturen verwenden!";
// use stencil mode
paint.stencil = "Schablone";
// Inherit stroke falloff option for the painting
paint.tool.help = "Verwenden Sie das Werkzeug Alpha, Ausfallen und Randomisierer, um die Intensität des Malstrichs zu modulieren.

Diese Optionen werden für die Funktion 'Alles malen' ignoriert, aber das Alpha wird für die triplanare Variante berücksichtigt.";
// when the user choose a new item name (through iOS/Android virtual keyboard)
input.name = "Name";
// when the user choose a new number value (through iOS/Android virtual keyboard)
input.number = "Wert";
// when the user choose a new color (through iOS/Android virtual keyboard)
input.hexcolor = "Neue Farbe (Hex-Format)";

// Post process effect
postprocess = "Nachbearbeitung (Post)";
// Quality vs performance
postprocess.quality = "Qualität";
postprocess.quality.help = "Aktivieren Sie diese Optionen, um die Qualität auf Kosten der Leistung zu verbessern.";
// More samples means better quality but slower performance
postprocess.maxSamples = "Max. Samples";
// Full resolution (1:1 resolution) instead of half resolution
postprocess.fullResolution = "Volle Auflösung";
// Number of frames that we accumulate (higher value means better quality)
postprocess.accumulateCount = "Max. Frame Sampling";
postprocess.accumulateCount.help = "Die maximale Anzahl von Bildern, die akkumuliert werden, bevor das Rendern beendet wird.

Wird das Rendern beendet, wird Nomad inaktiv, um die Batterie zu schonen.

Viele Render-Funktionen profitieren von akkumulierten Bildern, darunter:
• Schatten-Sanftheit
• Globale Illumination
• Reflexion (SSR)
• Umbegungsverdeckung
• Unter Oberfläche
• Schärfentiefe

Eine hohe Anzahl von Bildern wird in erster Linie für Schatten-Sanftheit und Globale Illumination benötigt.
Nomad kann schneller rendern, wenn oben stehende Funktionen deaktiviert sind.";
// The value is a ratio (0.5 means half resolution 2 means twice the resolution)
postprocess.renderRatio = "Render-Auflösung";
postprocess.renderRatio.warning = "Wird durch den Effekt „Pixel-Art“ aufgehoben.";
postprocess.renderRatio.help = "Diese Option ist sehr rechenintensiv.
Es ist ratsam, den Wert unter x1.25 zu halten.

Diese Option wird in den Einstellungen nicht gesichert.";
// Temporal Anti-Aliasing (no need to translate "TAA")
postprocess.taa = "Anti-Aliasing (TAA)";
postprocess.taa.help = "Verringert das Flackern, wenn Sie die Kamera bewegen.";
// Ditherhing pixel
postprocess.dithering = "Dithering";
postprocess.dithering.help = "Dither-Pixel verwenden, um Banding-Artefakte zu reduzieren.";
// Screen-Space Reflection (no need to translate "SSR")
postprocess.ssr = "Reflektion (SSR)";
postprocess.ssr.warning = "SSR ist nur im PBR-Shading-Modus wirksam.";
// Screen-Space Global Illumination (no need to translate "SSGI")
postprocess.ssgi = "Globale Illumination (SSGI)";
// Thickness threshold for ssgi tracing algorithm (synonym: threshold, bias)
postprocess.ssgi.tolerance = "Toleranz";
postprocess.ssgi.warning = "SSGI ist nur im Shading-Modus „PBR“ verfügbar.";
// Screen-space ambient occlusion (SSAO)
// https://en.wikipedia.org/wiki/Ambient_occlusion
postprocess.ssao = "Ambient Occlusion (AO)";
// How far the effect spreads
postprocess.ssao.radius = "Größe";
// How strong the effect is
postprocess.ssao.factor = "Stärke";
// Adjustment to fix artefacts
postprocess.ssao.bias = "Wölbungs-Bias";
postprocess.ssao.bias.help = "Wie empfindlich der Effekt ist, hängt von der Oberflächenwölbung ab.";
// Depth of Field (bokeh)
// https://en.wikipedia.org/wiki/Depth_of_field
postprocess.dof = "Depth Of Field (DoF)";
// The blur factor behind the focused point
postprocess.dof.blurFar = "Ferne Unschärfe";
// The blur factor in front of the focused point
postprocess.dof.blurNear = "Nahe Unschärfe";
postprocess.dof.focusTip = "Tippen Sie auf ein Objekt, um den Fokuspunkt zu ändern.";
// Bloom (light bleeding)
// https://en.wikipedia.org/wiki/Bloom_(shader_effect)
postprocess.bloom = "Leuchten (Bloom)";
// Intensity of the effect
postprocess.bloom.intensity = "Stärke";
// How far the effect spreads
postprocess.bloom.radius = "Radius";
postprocess.bloom.radius.help = "Wie ausgedehnt das Leuchten ist.";
// Luminosity threshold (below this value, no bloom is generated)
postprocess.bloom.threshold = "Schwellenwert";
postprocess.bloom.threshold.help = "Schwellenwert für die Leuchtkraft (Luminosity), um zu entscheiden, ob ein Pixel das Leuchten (Bloom) emittiert oder nicht.
Steht der Wert auf 0, leuchtet alles.";
// https://en.wikipedia.org/wiki/Tone_mapping
postprocess.tone = "Tone-Mapping";
postprocess.tone.exposure = "Belichtung";
postprocess.tone.contrast = "Kontrast";
postprocess.tone.saturation = "Sättigung";
postprocess.tone.hue = "Farbton";
// No tonemapping operator is used
postprocess.tone.mapping.none = "Nichts";
// A neutral tonemapping is used
postprocess.tone.mapping.neutral = "Neutral";
// Color curves
postprocess.curve = "Color-Grading";
// Curve for pixel luminance
postprocess.curve.luminance = "Luminanz";
postprocess.curve.red = "Rot";
postprocess.curve.green = "Grün";
postprocess.curve.blue = "Blau";
// Reset color grading curves
postprocess.curve.resetAll = "Alles neutral";
// https://en.wikipedia.org/wiki/Chromatic_aberration
postprocess.chromatic = "Chromatische Aberration";
postprocess.chromatic.factor = "Stärke";
// Darking on the edges
postprocess.vignette = "Vignette";
// How far the effect spreads
postprocess.vignette.size = "Größe";
// How sharp the edge of the effect is
postprocess.vignette.hardness = "Ausprägung";
// Unblur the image (sharpening)
// https://en.wikipedia.org/wiki/Unsharp_masking
postprocess.sharpness = "Schärfe";
postprocess.sharpness.factor = "Stärke";
// Filmic Grain
// https://en.wikipedia.org/wiki/Film_grain
postprocess.grain = "Körnung (Grain)";
postprocess.grain.factor = "Stärke";
// Accentuate the edges of the model
postprocess.curvature = "Krümmung";
// main strength of curvatre
postprocess.curvature.factor = "Faktor";
// Color/Strength of concave curvature
postprocess.curvature.cavity = "Hohlraum";
// Color/Strength of convex curvature
postprocess.curvature.bump = "Ausbeulung";
// https://en.wikipedia.org/wiki/Pixel_art
postprocess.pixelArt = "Pixel-Art";
// Override frame accumulation feature
postprocess.pixelArt.allowAccumulate = "Frame Sampling zulassen";
// Simulate scanline rendering (horizontal line)
postprocess.scanline = "Bildzeilen";
postprocess.scanline.factor = "Faktor";
// Spacing between lines
postprocess.scanline.spacing = "Abstand";

// Geometry Primitive (box, sphere, cylinder, etc)
primitive = "Grundformen";
primitive.box = "Box";
primitive.sphereCube = "Kugel";
primitive.sphereUV = "UV-Kugel";
primitive.icosahedron = "Ikosaeder";
primitive.cylinder = "Zylinder";
primitive.cone = "Kegel";
primitive.torus = "Torus";
primitive.lathe = "Drehbank";
primitive.tube = "Röhre";
primitive.plane = "Ebene";
primitive.triplanar = "Triplanar";
primitive.faceXYZ = "Fläche XYZ";
primitive.faceXYZ.help = "Von https://texturing.xyz/ bereitgestelltes UV-berechnetes Basisnetz";
primitive.needValidate = "Grundformen müssen validiert werden!";

// If enabled, we can edit primitive inside the viewport
primitive.edit = "Bearbeiten";
primitive.edit.help = "3D-Bearbeitung im Ansichtsfenster zulassen.

Sie können diese Funktion deaktivieren, wenn Sie mit dem Gizmo oder dem Transformieren-Werkzeug arbeiten möchten, ohne das Grundelement zu ändern.";

// Primitive configuration
primitive.mainConfig = "Parameter";
// Interface section where we change the topology (number of triangles/polygons)
primitive.topology = "Topologie";
// Interface section where we change the geometry (shape of the primitive)
primitive.geometry = "Geometrie";

// Validating the primitive (then it can be sculpted)
primitive.validate = "Validieren";
// Maximum number of faces of the primitives
primitive.maxFaces = "Max. Faces";
primitive.maxFaces.help = "Die maximale Anzahl an Face (Flächen), die eine Grundform haben kann.

Das Limit ist nur aktiv, solange das Primitiv nicht validiert ist, danach ist der Schutz nicht mehr gegeben.";
// Synonym: Flat subdivision
primitive.linear = "Scharfe Kanten";
// Post as "subdivision that occurs after the primitive computation"
primitive.subdivision = "Post Subdivision";

// Radius (of a sphere, torus, etc)
primitive.radius = "Radius";
// Make sure the two end-point of a primitive (cylinder, tube, etc) have the same size
primitive.radius.sync = "Gleicher Radius";
primitive.radius.start = "Anfangsradius";
primitive.radius.end = "Endradius";
// Size (of cube x dimension)
primitive.size = "Maße";
primitive.sizeX = "Größe X";
primitive.sizeY = "Größe Y";
primitive.sizeZ = "Größe Z";
// Division only impacts the topology (synonym: resolution)
primitive.division = "Untereilung";
primitive.divisionX = "Untereilung X";
primitive.divisionY = "Untereilung Y";
primitive.divisionZ = "Untereilung Z";
// Angle of torus, etc
primitive.angleX = "Winkel X";
primitive.angleY = "Winkel Y";
primitive.angleZ = "Winkel Z";
// It means we try to keep regular sized quad (square) instead of highly distorted rectangule
primitive.constantDensity = "Konstante Dichte";
// Make sure the shape is perfectly spherical
primitive.projectOnSphere = "Auf Sphere projizieren";
primitive.projectOnSphere.help = "Rastet die Punkte auf einer perfekten Kugel (Sphere) ein.";

// triplanar
primitive.triplanar.title = "Triplanar";
primitive.triplanar.title.help = "Triplanar verwendet die Maskeninformationen von 3 Ebenen, um ein Voxelgitter zu füllen, das dann in Polygone umgewandelt wird.

Wenn Sie die Regler für Division oder Größe benutzen, werden die Painting-Informationen zurückgesetzt (Smoothness kann verwendet werden).

Sie sollten möglichst Symmetrie deaktivieren, da sie wahrscheinlich nicht so funktioniert, wie Sie es erwarten würden.

Sie können die Option `Topologisch connected` im Maskenfenster verwenden, um eine Plane zu painten, die die anderen Planes beeinflusst.";
// Make sure the box is a regular cube (same 3 dimension)
primitive.triplanar.sameSize = "Gleiche Größe (Würfel)";
primitive.triplanar.polish = "Glätte";
// Mask refers to the painted mask on the triplanar planes
primitive.triplanar.resetMask = "Reset Maske";
// One side of a cube (the back plane)
primitive.isolate.back = "Hinten";
// One side of a cube (the right plane)
primitive.isolate.right = "Rechts";
// One side of a cube (the bottom plane)
primitive.isolate.bottom = "Unten";
// Plane
primitive.planeSameSize = "Gleiche Größe  (quadratisch)";
// Make the plane a disk/ellipse instead of a rectangle
primitive.planeDisk = "Diskus";
// Box
primitive.boxRegular = "Gleiche Größe  (Würfel)";
// Torus
primitive.torus.radiusOuter = "Außen-Radius";
primitive.torus.radiusInner = "Innen-Radius";
primitive.torus.angle = "Winkel";
primitive.torus.angleOffset = "Winkel-Offset";
// Cylinder
primitive.cylinder.height = "Höhe";
// Cone
primitive.cone.radius = "Radius";
primitive.cone.height = "Höhe";
// Hole sub menu (cylinder, tube, etc)
primitive.hole = "Loch";
// Make a hole in the primitive to make it hollow
primitive.hasHole = "Hat ein Loch";
// Curve profile (synonym: profile, curve)
primitive.profile = "Profil";
primitive.profile.viewport = "Im Viewport anzeigen";
// If the revolution surface has caps (E.g: cylinder)
primitive.cap = "Kappe";

// Singular of Repeaters (Nodes that make many copies of its children (type of mirror/curve/array/radial))
repeater = "Repeater";
// All the new items will be inserted inside the bound rather than outside
repeater.array.fitInside = "Innerhalb einpassen";
// The object will follow the curve
repeater.curve.align = "Ausrichten";

// Import resource (Alpha, Textures, MatCaps, etc)
resource.import = "Import";
// iOS Photos gallery
resource.import.ios.photos = "Fotos";
// iOS Files App
resource.import.ios.files = "Dateien";

scene.title = "Szene";
scene.title.help = "Wenn Sie das Auswahlkästchen verwenden, halten Sie Ihren Finger gedrückt und ziehen Sie ihn, um andere Objekte einfach auszuwählen.";
// The view will focus on the item when we click on it
scene.focus = "UI: Element bei Doppeltippen fokussieren";
// Add new object on gizmo position
scene.addOnGizmo = "Am Gizmo";
scene.addOnGizmo.help = "Verschieben Sie den Knoten auf die Gizmo-Position (wenn das Gizmo-Werkzeug ausgewählt ist)";
// Select the gizmo tool after adding a new object
scene.addSelectGizmo = "Gizmo auswählen";
scene.addSelectGizmo.help = "Wählen Sie das Gizmo-Werkzeug beim Hinzufügen eines neuen Knotens";
// Icon size in pixel (min/max)
scene.iconSize = "Symbolgröße";
// Min size of icon
scene.iconSize.min = "Min.";
// Max size of icon
scene.iconSize.max = "Max.";
// display hierarchy lines (visibility helper)
scene.showHierarchy = "Hierarchielinien";
scene.showHierarchy.help = "Eine Linie zwischen Eltern und ihren Kindern im Viewport anzeigen.";
scene.showHierarchyNomadPivot = "Nomad-Pivot verwenden";
scene.showHierarchyNomadPivot.help = "Das Nomad-Pivot ist das Pivot, das von den Werkzeugen Transformieren und Gizmo verwendet wird.

Wenn diese Option deaktiviert ist, wird das natürliche Basis-Pivot verwendet.
In manchen Fällen kann dieses Basis-Pivot weit entfernt vom eigentlichen Objektzentrum sein!";
// The view will focus on the item when we click on it
scene.syncVisible = "Sichtbarkeit synchronisieren";
scene.syncVisible.help = "Wenn aktiviert, wird die Verwendung des Sichtbarkeits(Sichtbarkeits-Symbol) alle ausgewählten Elemente beeinflussen.";
// Merge 2 objects without modifying the geometry or the topology
scene.join = "Kombinieren";
// Group the selected object with a new created Empty Node as a parent
scene.group = "Gruppe";
// Move the item outside its parent (synonym: ungroup)
scene.unparent = "Entgruppieren";
// Mirror node type, a node that make many copies of its children (mirror symmetry)
scene.mirror = "Spiegeln";
// Curve node type, a node that make many copies of its children (along a curve)
scene.curve = "Kurve";
// Array node type, a node that make many copies of its children (grid repetition pattern)
scene.array = "Raster";
// Radial node type, a node that make many copies of its children (radial symmetry)
scene.radial = "Radial";
// Nodes that make many copies of its children (type of mirror/curve/array/radial)
scene.repeaters = "Repeater";
scene.repeaters.help = "Repeater-Knoten, die Instanzen aller Geometrien unterhalb davon in der Szenenhierarchie erstellen.";
// Validate button
scene.validateGroup = "Validieren";
// Keep instances in the scene
scene.validateGroup.keepInstances = "Instanzen beibehalten";
// If we should join children
scene.validateGroup.joinChildren = "Unterknoten kombinieren";
// Merge/weld 2 objects by recomputing all the topology and creating a new object
scene.mergeVoxel = "Voxel Merge";
scene.voxelResolution = "Auflösung";
// The hidden objects will be "substracted" (the object will carve the other object)
scene.subtractionTip = "Subtraction  : Mesh ausblenden";
// If all the objects are hidden, only the parts where they intersect (collide) will be kep
scene.intersectionTip = "Intersection : Alle Meshes ausgeblendet";

// Need at least to select one object
scene.noneButNeedAtLeastOne = "Kein Mesh ausgewählt";
// Need to select one object only
scene.noneButNeedOne = "Kein Objekt ausgewählt, bitte wähle ein Objekt aus.";
// Need to select one object only
scene.onlyOneObject = "Mehrere Meshes sind ausgewählt, bitte nur ein Mesh auswählen.";
// Boolean operation
scene.boolean = "Boolean";
scene.boolean.help = "Führen Sie eine boolsche Operation durch, um Objekte zu verbinden, zu subtrahieren oder zu schneiden.

Die Operation kann fehlschlagen, wenn einige Objekte nicht vielfältig oder nicht wasserdicht sind.

Wenn die Boolesche Operation fehlschlägt, können Sie immer den Voxel-Remesher am problematischen Objekt verwenden, um sicherzustellen, dass es ein wasserdichtes Manifold ist.";
// Weld intersection
scene.boolean.mergeIntersection = "Schnittstelle verschweißen";

// General scene display settings
settings.display.title = "Display Einstellungen";
// Wireframe (show triangles and quad edges)
settings.wireframe = "Drahtgitter";
// Display the material texture
settings.debugChannel = "Textur anzeigen";
// Display the material texture in the background
settings.debugChannel.onBackground = "Im Hintergrund";
// Display the material texture on the mesh
settings.debugChannel.onMesh = "Auf dem Netz";
// If the object is opened (a simple plane for example), two sided means we'll be able to see if from the two sides of the planes
settings.twoSided = "Backface";
settings.twoSided.help = "Faces sind vomn beiden Seiten sichtbar.";
// If we colorize the inverted side of faces
settings.backface.color = "Backface-Farbe";
// Color of the inverted side of faces
settings.backface.colored = "Backfaces einfärben";
// Outline (contour highlight around the selected object)
settings.outline = "Umriss";
// Outline (contour highlight around the selected object)
settings.outline.help = "Ausgewählte Objekte werden mit Umriss hervorgehoben.";
settings.outline.thickness = "Stärke";
// Navigation cube (easy to snap/align the view)
settings.snapCube = "Ansichten-Würfel";
// Move the navigation cube to the bottom of the screen
settings.snapCube.bottom = "Unten";
// Move the navigation cube on the left side of the screen
settings.snapCube.left = "Links";
// Flip the camera (rotate 180° to see the other side)
settings.snapCube.flip = "180° umdrehen";
settings.snapCube.flip.help = "Die Ansicht umdrehen, wenn sie bereits ausgerichtet ist.";
// Alignment (can be auto/on/off)
settings.snapCube.align = "Ausrichtung einschränken";
settings.snapCube.align.help = "Die Ansichten an den Weltachsen ausrichten. Wenn aktiviert, sind nur 6 Rastansichten möglich.

Bei Auto wird die Einschränkung nur erfolgen, wenn die Kamera im Orbit-Modus ist.";
// Stats (information logs about the scene displayed on screen)
settings.stats = "Statistik";
settings.stats.right = "Rechts";
settings.stats.all = "Gesamte Szene anzeigen";
// Grid
settings.grid = "Raster";
// Cursor
settings.cursor.title = "Cursor";
settings.cursor.whileSculpting = "Kreis anzeigen beim Sculpten";
// A small indicator dot
settings.cursor.showDot = "Kleinen Punkt anzeigen";
settings.cursor.showDot.help = "Der Punkt kann als Kameradrehpunkt erscheinen oder wenn Sie sculpten.";
settings.cursor.showRope = "Rope-Stabilisator anzeigen";
// indicator
settings.indicator.title = "Indikator";
settings.indicator.title.help = "Ein visuelles Indikator anzeigen (Tutorials, Bildschirmaufnahme, etc.).";
settings.indicator.size = "Maße";
// Highlight (the object glows when we select it)
settings.highlight.selection = "Auswahl hervorheben";
// Highlight settings
settings.highlight = "Hervorheben";
settings.highlight.duration = "Dauer";
// Mesh that are not selected will be dark
settings.darkenUnselected = "Nicht gewählte Meshes abdunkeln";
// https://en.wikipedia.org/wiki/Shading
settings.smoothShading = "Smooth Shading";
// Experimental feature
settings.partialDraw = "Partial Drawing";
settings.partialDraw.help = "Feature noch nicht ausgereift!

Verwenden Sie es, wenn Sie einen relativ kleinen Teil eines High-Poly-Meshes sculpten.

Es sollte das Sculpten snoother machen, aber Sie sollten Wireframe deaktivieren!

Außerdem könnte es bei den Brush-Strokes zu visuellen Artefakten kommen.";
settings.partialDraw.warning = "Vergessen Sie nicht, diese Option zu deaktivieren, wenn die visuellen Artefakte zu sehr stören!";
// Disable this option to force a white uniform paint instead of showing the objects painting
settings.showPainting = "Pinting anzeigen";
// Show and use the masking on the mesh
settings.showMasking = "Maske anzeigen";
// Disable this option to force show the hidden faces
settings.showDiscard = "Ausblenden verwenden";
// Display the light icons in the viewport
settings.lightIcon = "Licht-Icon";
// Display the camera icons in the viewport
settings.cameraIcon = "Kamera-Icons";
// Show icon on the canvas
settings.icon = "Icon";
// Show icons on the canvas
settings.icons = "Icons";
// Tooltip
settings.icons.help = "Zeigt im Arbeitsbereich ein Icon für direktes Auswählen und Bearbeiten an.";
// Hole filling settings
settings.hole = "Löcher füllen";
// Allow the hole filling algorithm to handle non-manifold (non regular topology)
settings.hole.nonManifold = "Non-Manifold füllen";
settings.hole.nonManifold.help = "Versucht, ein non-manifold Loch zu füllen.
Diese Option ist nicht in den Einstellungen gespeichert.";
// Maximum number of vertices (points)
settings.multires.maxVertices = "Max. Anzahl an Vertices";
settings.multires.maxVertices.help = "Nomad führt vor der Unterteilung keine Speicherprüfung durch, eine hohe Polyanzahl kann leicht zu Abstürzen führen.";
settings.multires.lowResVertices = "Low Resolution Schwelle";
settings.multires.lowResVertices.help = "Eine geringere Auflösung des Meshes wird angezeigt, wenn Sie die Kamera bewegen.

Sie können diesen Wert erhöhen, wenn Sie eine höhere Auflösung des Meshes anzeigen möchten.";

// The main rendering mode
shading = "Shading";
// Main rendering mode (PBR stands for Physically Based Rendering)
shading.pbr = "PBR";
shading.pbr.help = "In diesem Modus kannst du Lichter (mit Schatten) zusammen mit einer HDR-Umgebung hinzufügen.

Für die Bemalung kannst du auch „Metallisch“ und „Matt“ einstellen, um das Material präziser zu gestalten.";
// Fast rendering mode for sculpting purpose (do not translate)
shading.matcap = "MatCap";
shading.matcap.help = "MatCap steht für MATerial CAPture und bildet sowohl Beleuchtung als auch Materialinformation in einem einzigen Bild ab.

Dies ist ein schneller Rendermodus, der sich in erster Linie für den groben Formgebungsprozess eignet.";
// Unlit rendering mode, it simply displays a solid/flat color
shading.unlit = "Unbeleuchtet";
shading.unlit.help = "Modus für einfarbiges Shading, ohne Beleuchtung.";
// Helper rendering mode that display a (do not translate)
shading.object = "Objekt ID";
shading.object.help = "Beim Rendering-Modus „Unbeleuchtet“ wird jedem Objekt eine zufällige Farbe zugewiesen.

Dies kann sinnvoll sein, wenn sich in einer Szene viele Objekte befinden.";
// Helper rendering mode that display a (do not translate)
shading.instance = "Instanz ID";
shading.instance.help = "Gleich wie Objekt-ID, aber Instanzen haben dieselbe Farbe.";
// Randomize colors
shading.id.randomize = "ID randomisieren";
shading.textures = "Texturen verwenden";
shading.textures.help = "Derzeit können in Nomad keine Texturen erstellt oder bearbeitet werden.

Jedoch kann eine Datei mit Texturen importiert werden.

• Unterstützte Texturen
Deckkraft: PBR, MatCap, Unbeleuchtet
Normal: PBR, MatCap
Farbe: PBR, Unbeleuchtet
Leuchten: PBR
Matt: PBR
Metallisch: PBR";
// Lights
shading.lights = "Lichter";
shading.lights.addLight = "Licht hinzufügen";
shading.lights.warning = "Lichter werden in den Modi MatCap und Unlit generell ignoriert.";
// Environment based lighting (synonym: HDRI)
shading.environment = "Umgebung";
shading.environment.import = "HDR importieren";
shading.environment.exposure = "Belichtung";
shading.environment.backgroundBlur = "Unschärfe (Hintergrund)";
shading.environment.rotation = "Rotation";
shading.environment.rotation.help = "Sie können die Umgebung drehen, indem Sie 3 Finger horizontal (von links nach rechts oder umgekehrt) auf dem Touchbildschirm bewegen.";
// The environment will always be aligned with the camera (so that the lighting is consistent)
shading.environment.attachedToCamera = "Mit der Kamera verbunden";
shading.environment.attachedToCamera.help = " Verbinden Sie die Umgebung mit der Kamera.

Dadurch wird eine gleichmäßige Beleuchtung erzwungen, was für das Sculpting hilfreich sein kann.";
shading.matcap.rotation = "Rotation";
shading.matcap.rotation.help = "Sie können das MatCap drehen, indem Sie 3 Finger horizontal (von links nach rechts oder umgekehrt) auf dem Touchbildschirm bewegen.";
shading.matcap.global = "Globales MatCap verwenden";
shading.matcap.global.help = "Deaktivieren Sie diese Option, um ein separates MatCap für dieses Mesh zu verwenden.";

// bottom shortcut buttons (should be SHORT)
shortcut.maskVisible = "Maskieren";
shortcut.maskVisible.short = "Maskieren";
// bottom shortcut buttons (should be SHORT)
shortcut.solo = "Solo";
shortcut.solo.short = "Solo";
// bottom shortcut buttons (should be SHORT)
shortcut.xray = "Röntgen";
shortcut.xray.short = "Röntgen";
// bottom shortcut buttons (should be SHORT)
shortcut.voxelRemesh = "Voxel Remesh";
shortcut.voxelRemesh.short = "Voxel";
// bottom shortcut buttons (should be SHORT)
shortcut.wireframe = "Drahtgitter";
shortcut.wireframe.short = "Draht";
// bottom shortcut buttons (should be SHORT)
shortcut.cameraReset = "Kamera-Reset";
shortcut.cameraReset.short = "Kanal neutral";
// bottom shortcut buttons (should be SHORT)
shortcut.cameraSnap = "Kamera-Snap";
shortcut.cameraSnap.short = "Sicht";
// bottom shortcut buttons (should be SHORT)
shortcut.lockSelection = "Selektion einfrieren";
shortcut.lockSelection.short = "Sperren";
shortcut.lockSelection.help = "Wenn diese Funktion aktiviert ist, können Sie die Auswahl nicht ändern, indem Sie auf ein Mesh tippen.";
// bottom shortcut buttons (should be SHORT)
shortcut.perspective = "Perspektive";
shortcut.perspective.short = "Persp";
// bottom shortcut buttons (should be SHORT)
shortcut.grid = "Raster";
shortcut.grid.short = "Raster";

// Memory taken by the scene
stat.ramScene = "Szene";
// Vram = Video RAM (Video Memory, the memory of the graphic card)
stat.vramScene = "VRAM Szene";
// Vram = Video RAM (Video Memory, the memory of the graphic card)
stat.vramRender = "VRAM Render";
// Vram = Video RAM (Video Memory, the memory of the graphic card)
stat.vramTextures = "VRAM Texturen";
// Memory taken by the undo/redo history
stat.ramHistory = "Verlauf";
// Memory taken by other stuffs
stat.ramOther = "Anderes";
// Memory used by the app (RAM, not storage!)
stat.usedMemory = "RAM benutzt";
// Memory available for the app (RAM, not storage!)
stat.freeMemory = "RAM frei";
// RAM, not storage!
stat.ram = "RAM";
stat.used = "Benutzt: $0";
stat.free = "Frei: $0";
stat.faces = "Flächen";
stat.triangles = "Dreiecke";
stat.vertices = "Vertices";
// quadrangular polygon (polygon with 4 sides)
stat.quads = "Vierecke";
stat.vertex = "Vertex";
stat.scene.face = "Faces in Szene";
stat.scene.vertex = "Vertices in Szene";

// Brush stroke
stroke = "Strich";
// The brush radius is either screen-space (fixed size on the screen) or world-space (fixed size in the scene)
stroke.useWorldRadius = "World-Space Radius";
// The settings is shared among every tools
stroke.useWorldRadius.help = "Das wird von allen Werkzeugen geteilt.";
// Share the radius value among every tools.
stroke.useShareRadius = "Radius teilen";
stroke.useShareRadius.help = "Teilen Sie den Wert des Radius auf mit allen Werkzeugen.";
// When doing a brush stroke, the spacing is the distance between 2 sculpt operations
stroke.spacing = "Stroke Spacing";
// Adjust the brush intensity to ensure consistent deformation depending on the stroke spacing.
stroke.spacing.adjust = "Intensität der Abstände anpassen";
stroke.minSpacingAdjustIntensity.help = "Passen Sie die Brush-Intensität an, um eine gleichmäßige Verformung in Abhängigkeit von den Stroke-Abständen zu gewährleisten.";
stroke.minSpacing.help = "Abstand zwischen den einzelnen Strokes (Strichen), relativ zum Werkzeugradius.

Ein niedrigerer Wert ermöglicht einen gleichmäßigeren Stroke, aber die Leistung nimmt ab.";
// Brush stroke smoothing
stroke.lazySmooth = "Stroke Smoothing";
stroke.lazySmooth.help = "Mittlere Position des Pointers, um einen gleichmäßigeren Stroke zu erhalten.

Bei hohen Werten hinkt der Strich dem Pointer hinterher, holt aber schließlich auf.";
// Make the brush stroke lags behind the pointer cursor
stroke.lazyRadius = "Lazy Rope Stabilisator";
stroke.lazyRadius.help = "Die Strokes bleiben in einem bestimmten Abstand hinter der Pointer-Position.

Damit kann man geglättete Linien zeichnen.";
// It is not a per-tool settings
stroke.globalSettings = "Dies ist eine globale Einstellung";
// Start the brush stroke from the last sculpted position to ensure there is no discontinuity
stroke.snapRadius = "Snap Radius";
stroke.snapRadius.help = "Rastet den Stroke ein, wenn der Pointer in der Nähe des letzten aufgezeichneten Strokes liegt.

Das kann nützlich sein, wenn man lange, durchgehende Linien zeichnet und dabei häufig Pausen macht.";
// offset between the cursor and the brush stroke (for fat finger on small screen)
stroke.sculptOffset = "Stroke-Offset";
stroke.sculptOffset.help = "Wendet einen konstanten Offset auf den Stroke an.

Diese Option ist für kleine Bildschirme gedacht, wenn man mit den Fingern arbeitet, damit der Finger nicht den Stroke verdecken.";
stroke.accumulate = "Strokes kumulieren";
stroke.accumulate.help = "Wenn diese Option aktiviert ist, gibt es keine Begrenzung für die Menge an Material, die Sie je Stroke hinzufügen/entfernen können.";
// The tool can use DynTopo
stroke.useDynamic = "Dynamic Topology erlauben";
// Only sculpt the part that are linked topologically
stroke.connect = "Connected Topology";
stroke.connect.help = "Mit dieser Option werden nur die Vertices gesculptet, die mit der ausgewählten Oberfläche verbunden sind.

Dies wird in der Regel für das Move-Werkzeug verwendet, zum Beispiel, wenn Sie ausschließlich ein Teil verschieben möchten, das sich mit einem anderen Teil überschneidet.";
stroke.connect.short = "Connected";
// sculpt on hide or mask
stroke.protect = "Maskierten Bereich schützen";
stroke.protect.hide.help = "Wenn auf automatisch eingestellt, werden verdeckte Flächen bearbeitet, wenn das Drahtgitter auf verdeckten Flächen sichtbar ist (siehe Drahtgittermenü).";
// Only sculpt the vertex that points toward the camera
stroke.culling = "Nur Front-Facing Vertex";
stroke.culling.help = "Diese Option ignoriert Back Face Vertices.

Dies kann nützlich sein, wenn Sie einen Teil einer dünnen Geometrie painten wollen, ohne die andere Seite zu beeinträchtigen.

Dies funktioniert auch für das Sculpting, aber es kann zu Artefakten kommen.";
// Infinite depth, move everything under the circle, disregarding depth
stroke.silhouette = "Silhouette";
stroke.silhouette.view = "Ansicht";
stroke.silhouette.snapped = "Wenn ausgerichtet";
stroke.silhouette.closest = "Nächste";
// Only sculpt the vertex that points toward the direction of the deformation
stroke.sameSide = "Vertices gleicher Ausrichtung";
stroke.sameSide.help = "Vertices, die in die entgegengesetzte Richtung der Deformation zeigen, werden ignoriert";
stroke.onlyLasso = "Einstellungen nur für das Lasso-Werkzeug aktiv.";

// Here sampling refers to the app gathering information under the mouse
stroke.area = "Bereichssampling";
stroke.area.help = "Einige Pinsel oder Strichoptionen benötigen eine zur Oberfläche normale Ebene, um zu funktionieren.
Sie können steuern, wie diese durchschnittliche Ebene berechnet wird, indem Sie den Sampling-Bereich als Verhältnis des Werkzeugradius einstellen.

Bei 100% wird jeder Punkt innerhalb des Auswahlkreises berücksichtigt.
Bei 0% wird nur der nächstgelegene Vertex oder Dreieck berücksichtigt.";
// Sampling radius size (percent)
stroke.area.normal.radius = "Normalenradius";
// Sampling radius size (percent)
stroke.area.point.radius = "Positionsradius";
// Sampling averaging
stroke.area.normal.average = "Normalenmittelung";
// Sampling averaging
stroke.area.point.average = "Positionsmittelung";
// Keep sharp edges
stroke.keepSharp = "Scharfe Kanten beibehalten";
stroke.keepSharp.help = "
Depth Filter";

// Only paint the part of the mesh above a certain height
stroke.depthFilter = "Tiefenmaskierung";
stroke.depthFilter.help = "Punkte ausschließen, die oberhalb oder unterhalb eines bestimmten Abstands von der berechneten Ebene liegen (Bereichssampling).

Als Beispiel kann es verwendet werden, um Erhebungen oder Vertiefungen zu malen.";
stroke.depthFilter.max = "Oberer Bereich";
stroke.depthFilter.min = "Unterer Bereich";
stroke.depthFilter.offset = "Höhenversatz";

// Invert the pixel (black <-> white)
stroke.alpha.invert = "Alpha invertieren";
// Repeat the alpha image (pattern)
stroke.alpha.wrap = "Kacheln";
// No repeat pattern
stroke.alpha.wrap.none = "Kein";
// Repeat the alpha in a regular manner (tiles with seams)
stroke.alpha.wrap.repeat = "Wiederholen";
// Repeat the alpha in a mirrored (seamless tiling)
stroke.alpha.wrap.mirror = "Spiegeln";
// Tight fit when using tiling
stroke.alpha.fit = "Innerhalb einpassen";
stroke.alpha.fit.help = "Diese Option ist nur relevant, wenn das Alpha und die Pinseltexturen nicht quadratisch sind.

Wenn aktiviert, wird jedes Bild unabhängig ohne Abstände gekachelt.
Sie können diese Option deaktivieren, wenn Sie das Alpha und andere Bilder synchron halten möchten, falls deren Verhältnisse nicht gleich sind.";
// Alpha rotation
stroke.alpha.rotation = "Rotation";
stroke.alpha.rotation.lock.help = "Die Alpha-Orientierung sperren.

Wenn die Rotation entsperrt ist, wird die Orientierung der Strichrichtung in Echtzeit folgen.";
// Repeat the image
stroke.alpha.tiling = "Kacheln";
// Scale the image (make it bigger or smaller)
stroke.alpha.scale = "Skalierung";
stroke.alpha.scale.help = "Beim Minimalwert liegt das Alpha-Quadrat innerhalb des Werkzeugkreisradius";
// Middle-point value at which no deformation occurs
stroke.alpha.midValue = "Mittelwert";
stroke.alpha.midValue.help = "Mittelwert, bei dem keine Verformung auftritt.

(Mittelwert = 0)
• Schwarz: Kein Displacement
• Weiß: Positives Displacement

(Mittelwert = 0.5)
• Schwarz: Negatives Displacement
• Weiß: Positives Displacement

(Mittelwert = 1)
• Schwarz: Negatives Displacement
• Weiß: Kein Displacement";
// Synonymous: Scatter/Jitter/Randomize
stroke.jitter = "Randomisieren";
// Sculpt and paint along the brush stroke at regular spacing
stroke.type.dot = "Punkt";
// Sculpt and paint along with alpha spaced by brush radius
stroke.type.roll = "Rolle";
// Sculpt and paint with alpha projected on screen stencil
stroke.type.tile = "Kachel";
// Sculpt and paint with alpha projected on 3 axis
stroke.type.triplanar = "Triplanar";
// Sculpt continuously
stroke.type.drag = "Ziehen";
// Lock a region and move it around
stroke.type.grab = "Greifen";
// Lock a point of interest and sculpt it by changing the tool radius
stroke.type.grabRadius = "Grab • Dynamischer Radius";
// Lock a region and sculpt it by changing the tool intensity
stroke.type.grabIntensity = "Grab • Dynamische Intensität";

stroke.falloffProject = "Einfluss";
stroke.falloffProject.help = "• Kugel (3D)
Der Einfluss wird berechnet, indem der Abstand vom Vertex zum Zentrum des Pinsels genommen wird.

• Kreis (2D)
Der Vertex wird zuerst auf die Flächenebene projiziert, bevor sein Abstand zum Zentrum des Pinsels genommen wird.
Das ist ähnlich wie Alphas abgetastet werden.";
stroke.falloffProject.sphere = "Kugel";
stroke.falloffProject.circle = "Kreis";

// Symmetry
symmetry = "Symmetrie";
symmetry.enable = "Aktiviert";
symmetry.primitiveWarning = "Pinsel-Symmetrie ist nur für validierte Grundformen verfügbar (außer „Triplanar“).";
symmetry.plane.title = "Ebenen";
symmetry.toolIgnore = "Das aktuelle Werkzeug ignoriert Symmetrie.";
// Instead of planar symmetry, use a radial symmetry
symmetry.radial.title = "Radial";
symmetry.radialX = "Radial X";
symmetry.radialY = "Radial Y";
symmetry.radialZ = "Radial Z";
// A warning indicating that we limit the number of repetitions ($0 is a number)
symmetry.limited = "Anzahl der Wiederholungen auf $0 begrenzt!";
// Synonym: Offset
symmetry.offset.title = "Versatz";
symmetry.offsetX = "Versatz X";
symmetry.offsetY = "Versatz Y";
symmetry.offsetZ = "Versatz Z";
// Number of clones
symmetry.count.title = "Anzahl";
symmetry.countX = "Anzahl X";
symmetry.countY = "Anzahl Y";
symmetry.countZ = "Anzahl Z";
// method
symmetry.method = "Methode:";
symmetry.method.help = "• Lokal
Die Symmetrieebene wird entlang des Meshes verschoben, wenn Sie eines der Transformationswerkzeuge (Transform oder Gizmo) verwenden.


• Welt
The symmetry plane is fixed and will not move.";
// Local means: in the coordinate of the scene (synonym: absolute)
symmetry.method.world = "Welt";
// Local means: in the coordinate of the object (synonym: relative)
symmetry.method.local = "Lokal";
// Move the object to the other side of the symmetry (mirror it as well)
symmetry.flip = "Objekt umdrehen";
// Mirror the mesh
symmetry.mirror = "Spiegelung";
symmetry.mirror.help = "Versuchen Sie, die Symmetrie wiederherzustellen, ohne die Topologie zu beeinträchtigen.

Radiale Symmetrie wird ignoriert.

Wenn die Topologie nicht beibehalten werden kann, weil sie nicht als symmetrisch angesehen wird, erhalten Sie die Möglichkeit, die Spiegelung dennoch zu erzwingen.";
symmetry.mirrorFail = "Versuch die Symmetrie anzuwenden fehlgeschlagen.

Wollen Sie die Symmetrie durch Spiegelung des Meshes erzwingen?";
symmetry.mirrorUseMasking = "Maskierte bBereiche schützen";
symmetry.mirrorUseMasking.help = "Lässt den maskierten Bereich intakt.

Diese Option wird bei nicht-symmetrischer Topologie (oder unzusammenhängender Oberfläche, wie einem Augenpaar) ignoriert.";
symmetry.apply = "Spiegel
(Topologie beibehalten)";
symmetry.splitMirror = "Teilen & Spiegeln
(neue Topologie)";
// Reset the symmetry plane position
symmetry.reset = "Kanal neutral";
// Reset the symmetry plane positon to the object center
symmetry.reset.centerMesh = "Mesh Zentrum";
// Reset the symmetry plane positon to the scene (world) center
symmetry.reset.centerWorld = "Welt Zentrum";
// Reset the symmetry plane orientation
symmetry.reset.direction = "Orientierung";
// Display a line on the object (to show where the symmetry lies)
symmetry.showLine = "Line anzeigen";
// Display the symmetry plane in 3d
symmetry.showPlane = "Plane anzeigen";
// Allow the editing of the symmetry plane with the gizmo
symmetry.edit = "Gizmo bearbeiten";
symmetry.edit.warning = "Symmetriebearbeitung ist experimentell";
symmetry.edit.help = "Sie können die Symmetrieebene frei festlegen.

Diese Funktion ist ein wenig experimentell und Sie sollten sie vermutlich nicht verwenden.";

// Ideally <10 chars
tool.dynamic = "Dyntopo";
// Ideally <10 chars (Symmetry)
tool.symmetry = "Sym";
// Ideally <10 chars (Mirror primitive)
tool.mirror = "Spiegeln";
// Ideally <10 chars
tool.clay = "Ton";
// Ideally <10 chars (Subtract)
tool.clay.sub = "Sub";
// Ideally <10 chars
tool.brush = "Pinsel";
// Ideally <10 chars
tool.move = "Bewegen";
// Ideally <10 chars (Normal vector, perpendicular to surface)
tool.move.normal = "Normal";
// Ideally <10 chars
tool.drag = "Ziehen";
// Ideally <10 chars (Smooth the surface by erasing the details)
tool.smooth = "Glätten";
// Ideally <10 chars (Tries to smooth the topology by making the polygons more regular)
tool.smooth.relax = "Entspannen";
// Ideally <10 chars (Paint mask)
tool.mask = "Maskieren";
// Ideally <10 chars
tool.mask.unmask = "Demask.";
// Ideally <10 chars (Selector Mask, use lasso/ellipse,etc shape to mask the mesh)
tool.maskSelector = "AuswMask";
// Ideally <10 chars (Smudge the paint of the object)
tool.smudge = "Wischfinger";
// Ideally <10 chars (Flatten the surface)
tool.flatten = "Reduzieren";
// Ideally <10 chars (Flatten the surface, more strongly than Flatten)
tool.planar = "Planar";
// Ideally <10 chars (Flatten the surface by offsetting the surface in the opposite direction)
tool.flatten.fill = "Füllen";
// Ideally <10 chars (Layer brush)
tool.layer = "Ebene";
// Ideally <10 chars
tool.crease = "Falte";
// Ideally <10 chars (Cut part of the mesh cleanly)
tool.trim = "Trimmen";
// Ideally <10 chars (Cut part of the mesh cleanly into two separate meshes)
tool.split = "Teilen";
// Ideally <10 chars (Project part of the object onto a curve)
tool.project = "Projekt";
// Ideally <10 chars
tool.inflate = "Aufblähen";
// Ideally <10 chars
tool.pinch = "Kneifen";
// Ideally <10 chars
tool.nudge = "Stupsen";
// Ideally <10 chars
tool.stamp = "Stempel";
// Ideally <10 chars (Delete Layer, a tool that can cancel the Layer deformation/paint)
tool.clearLayer = "EbeneEntf";
// Ideally <10 chars (Select multiple objects with a lasso tool)
tool.select = "Auswählen";
// Ideally <10 chars (Rotate, Translate and Scale the object)
tool.gizmo = "Gizmo";
// Ideally <10 chars
tool.gizmo.editPivot = "Drehpunkt";
// Ideally <10 chars (Snap angle)
tool.gizmo.rotateSnap = "Ausricht.";
// Ideally <10 chars (Snap translation)
tool.gizmo.moveSnap = "Ausricht.";
// Ideally <10 chars (Local/Relative space)
tool.gizmo.local = "Lokal";
// Ideally <10 chars (Align/Snap the gizmo to world axis)
tool.gizmo.align = "Ausrichten";
// Ideally <10 chars (Pin the gizmo, so that it stays in place when switching between objects)
tool.gizmo.pin = "Fixieren";
// Ideally <10 chars (Rotate, Translate and Scale the object)
tool.transform = "Umwandeln";
// Ideally <10 chars (Translate the object)
tool.transform.move = "Bewegen";
// Ideally <10 chars (Rotate the object)
tool.transform.rotate = "Drehen";
// Ideally <10 chars (Scale the object)
tool.transform.scale = "Skalierung";
// Ideally <10 chars (Snap the object on another object surface)
tool.transform.snap = "Anheften";
// Ideally <10 chars (Measure distance between 2 points)
tool.measure = "Messen";
// Ideally <10 chars (Lattice, deformer)
tool.lattice = "Gitter";
// If an option is shared among the tools
tool.all = "Alle";
// Ideally <10 chars (Quad Remesher)
tool.remesh = "Quad Remesher";
tool.remesh.guides = "Leitlinien";
tool.remesh.density = "Dichte";
tool.remesh.same = "Identisch";
tool.remesh.half = "Halb";
// Ideally <10 chars (FaceGroup)
tool.faceGroup = "Face-Gruppe";
tool.faceGroup.autoPick = "Auto-Auswahl";
tool.faceGroup.flush = "Ungenutzte entfernen";
tool.faceGroup.skip = "Kleine Gruppen basierend auf folgenden überspringen:";
tool.faceGroup.skipFace = "Anzahl der Flächen";
tool.faceGroup.skipFace.help = "Erstellen Sie keine neue Gruppe, wenn die Anzahl der Flächen kleiner oder gleich diesem Schwellenwert ist.";
tool.faceGroup.skipArea = "Oberflächenbereich";
tool.faceGroup.skipArea.help = "Erstellen Sie keine neue Gruppe, wenn die Fläche der neuen Gruppe diesen Schwellenwert unterschreitet.

Der Schwellenwert wird als Prozentsatz der Gesamtfläche des Objekts angegeben.";
// Ideally <10 chars (Hide)
tool.hide = "Ausblenden";
// Ideally <10 chars (View tool, do nothing in particular)
tool.view = "Ansicht";
// Ideally <10 chars (Revolving surface along a line)
tool.lathe = "Drehbank";
// Ideally <10 chars (Revolving surface along a curve)
tool.tube = "Röhre";
// Ideally <10 chars (Insert object into the scene)
tool.insert = "Einfügen";
// Ideally <10 chars (Flip/Invert/Negate the shape)
tool.shape.flip = "Umdrehen";
// Ideally <10 chars (No shape selected, same as Camera mode, does nothing in particular)
tool.shape.view = "Ansicht";
// Ideally <10 chars (Lasso selection)
tool.shape.lasso = "Lasso";
// Ideally <10 chars (Curve selection, same as Lasso and it's an open shape)
tool.shape.curve = "Kurve";
// Ideally <10 chars (Polygon selection, same as Lasso but with more precision)
tool.shape.polygon = "Polygon";
// Ideally <10 chars (Path selection, same as Lasso but with more precision and it's an open shape)
tool.shape.path = "Pfad";
// Ideally <10 chars (Rectangular selection)
tool.shape.rectangle = "Rechteck";
// Ideally <10 chars (Ellipse selection)
tool.shape.ellipse = "Ellipse";
// Ideally <10 chars (Line selection, split the screen in half)
tool.shape.line = "Linie";
// Ideally <10 chars (Whether a shape is closed or not, a tube is open, a torus is closed)
tool.shape.closed = "Geschl.";

// Radius of the tool (size)
tool.radius = "Radius";
// Intensity of the tool (force)
tool.intensity = "Stärke";

tool.settings = "Werkzeugeinstellungen";
tool.settings.none = "Dieses Werkzeug hat keine besonderen Einstellmöglichkeiten.";

tool.crease.pinchFactor = "Pinch Kraft";
tool.crease.offsetFactor = "Versatzfaktor";

tool.layer.removeInfluence = "Aktuellen Layer Offset verwenden";
tool.layer.removeInfluence.help = "Diese Option ist nur aktiv, wenn ein aktueller Layer ausgewählt ist.

Es wird der aktuelle Layer Offset verwendet, um das Displacement über Strokes zu begrenzen.";
tool.layer.noLayerSelected = "Diese Option ist nur verfügbar, wenn ein aktueller Layer ausgewählt ist";

tool.flatten.planeLockOrigin = "Plane Origin sperren";
tool.flatten.planeLockNormal = "Plane Ausrichtung sperren";

// Option for Tube, Lathe and Insert tool
tool.syncInstance = "Synchronisieren";
tool.syncInstance.message = "Das neue Objekt wird zu allen anderen Instanzen hinzugefügt!";

// The vertex on the border of the mesh will stay still even if we try to smooth the border
tool.smooth.stickyBorder = "Sticky Vertex am Rand";
tool.smooth.screen = "Bildschirmglättung";
tool.smooth.screen.help = "Verwenden Sie diese Option, um eine topologieunabhängige Glättung zu erzielen, selbst bei hoher Poly-Zahl.";
tool.smooth.screen.samples = "Bildschirm-Samples";
tool.smooth.stable = "Stabiles Glätten";
tool.smooth.stable.help = "Versucht das Glätten topologieunabhängig zu machen.

Dieser Modus funktioniert am besten mit variierender Topologiedichte und mit hohem Wert für Glättungsintensität.";

tool.paint = "Zeichnen";
// Erase the painting
tool.paint.erase = "Löschen";
// Only paint the part of the mesh that was already painted in the layer (repainting)
tool.paint.layerFilter = "Layer Filter";
tool.paint.layerFilter.help = "Verwenden Sie diese Option, wenn Sie nur den bereits gepainteten Bereich eines Layers erneut painten wollen.";

// Clear the painted mask
tool.mask.clear = "Löschen";
tool.mask.clearAll = "Alles löschen";
// Invert the painted mask
tool.mask.invert = "Umkehren";
// Mask or Unmask a region (leave other region that unconnected intact)
tool.mask.flipConnected = "Flip Connected";
// Blur the painted mask
tool.mask.blur = "Unschärfe";
// Sharpen the edge of the painted mask area
tool.mask.sharpen = "Schärfen";
// Transform/Matrix
tool.matrix = "Matrix";
// The target of the transform is either the Matrix or the Vertex of the object
tool.matrix.target = "Ziel";
// Automatic
tool.matrix.target.auto = "Auto";
tool.matrix.target.auto.help = "Dies funktioniert standardmäßig wie die Option „Gruppe“.
Wenn das Netz Maskierung enthält oder wenn Symmetrie aktiviert ist, funktioniert sie wie „Vertex“.";
// Auto apply the transform on the vertices
tool.matrix.target.vertex = "Vertex";
tool.matrix.target.vertex.help = "Versucht, die Transformation auf die Vertices anzuwenden, funktioniert nicht bei nicht validierten Grundformen.
Wird auch auf Instanzen angewendet.";
// Transform the object alone (the children stands still)
tool.matrix.target.object = "Objekt";
tool.matrix.target.object.help = "Bewegt nur das Objekt, ignoriert Symmetrie und Maskierung.
Nur der bearbeitete Knoten wird bewegt, die Unterknoten bleiben stehen.";
// Transform the object and its children
tool.matrix.target.group = "Gruppe";
tool.matrix.target.group.help = "Bewegt nur das Objekt, ignoriert Symmetrie und Maskierung.
Der Rest der Hierarchie wird ebenfalls transformiert.";
// Operation on the mesh
tool.matrix.action = "Aktion";
tool.matrix.action.help = "• Move Origin
Bewegt das Mesh zum Welt Origin (Ursprung).

• Reset
Setzt die Mesh-Transformation auf Identität zurück.

• Bake
Wendet die Matrix auf den Vertex an und setzt die Matrix zurück. Visuell sollte sich nichts ändern.";
tool.matrix.translation = "Translation";
tool.matrix.rotation = "Rotation";
tool.matrix.scale = "Skalierung";
// Synonym: shear, https://en.wikipedia.org/wiki/Shear_matrix or https://en.wikipedia.org/wiki/Shear_mapping
tool.matrix.skew = "Verbiegen";
tool.matrix.uniformScale = "Gleichmäßige Skalierung";
tool.matrix.moveToOrigin = "Move Origin";
tool.matrix.resetTransform = "Kanal neutral";
// Synonym: Apply (transform)
tool.matrix.bakeTransform = "Backen";

tool.transform.tip = "Einzelnes Tippen mit dem zweiten Finger, um den Modus zu wechseln";

// Size of the gizmo
tool.gizmo.size = "Widget-Größe";
// If true, there is less spacing between gizmo handlers (rotate, scale, etc)
tool.gizmo.compact = "Kompakt";
// When enabled, tapping one the gizmo widget will open a numerical input popup
tool.gizmo.allowInput = "Numerische Eingabe";
tool.gizmo.allowInput.help = "Ermöglicht numerische Eingabe, wenn auf ein Gizmo-Widget getippt wird";
// Angle threshold
tool.gizmo.linearRollThreshold = "Tangentiales Rollen";
tool.gizmo.linearRollThreshold.help = " Schwellenwert des Winkels für die Wahl zwischen linearer und kreisförmiger Roll-Methode.

Bei Werten über diesem Schwellenwert wird die kreisförmige Roll-Methode verwendet.

Wenn Sie die lineare Drehung (Richtung der Tangente) bevorzugen, setzen Sie diesen Wert einfach auf 90°.";
// Partially hide/fade the gizmo when we interact with it
tool.gizmo.autoHide = "Ausblenden bei Interaktion";
tool.gizmo.tap = "Einfach-Tap";
tool.gizmo.tap.help = "Diese Option ist nur im benutzerdefinierten Pivot-Modus wirksam (Auto deaktiviert).";
tool.gizmo.tap.none = "Keiner";
tool.gizmo.tap.none.help = "Beim Antippen des Meshes passiert nichts.";
tool.gizmo.tap.normal = "Normal";
tool.gizmo.tap.normal.help = "Verschieben Sie das Gizmo an den ersten Schnittpunkt und richten Sie es entsprechend der Oberflächennormalen aus.";
tool.gizmo.tap.first = "Erster Treffer";
tool.gizmo.tap.first.help = "Bewegt das Gizmo auf die erste Schnittstelle.";
tool.gizmo.tap.medial = "Mittlerer";
tool.gizmo.tap.medial.help = "Bewegt das Gizmo auf den Durchschnitt der ersten beiden Schnittpunkte.";

// The lathe generator is a vertical line and cannot be rotated
tool.lathe.axisFixed = "Fixiert";
tool.lathe.axisOnly = "Nur Achse";
tool.lathe.stable = "Stabil";
tool.lathe.axis = "Achse";

// Fill the object's hole
tool.hole = "Füllen von Löchern";
tool.hole.fillHoles = "Löcher füllen";
// synonym: Alternative method
tool.hole.method.fill = "Füllen";
tool.hole.method.legacy = "Legacy";
tool.hole.method.boolean = "Boolean";
tool.hole.bridges = "Screen-Space Boolean";
tool.hole.bridges.help = "Wenn diese Option aktiviert ist, können Sie Löcher in das Volumen stechen.
Auch die Schnittneigung wird sich stärker an der Schnittform orientieren.";
tool.hole.threshold = "Schwellenwert Epsilon";
tool.hole.threshold.help = "Eine Optimierung dieses Wertes könnte den Algorithmus zum Füllen von Löchern unterstützen.";
tool.hole.smoothing = "Loch-Glättung";

tool.smudge.quality = "Qualität";
tool.smudge.quality.help = "Es ändert die Auflösung der projizierten Pixel, niedrigere Werte bedeuten schnellere Striche (Strokes).";

// Shape for the tools: Trim / Split / Project / SelMask
tool.shape = "Form";
// Auto-validate the drawn shape
tool.shape.autoValidate = "Automatisch bestätigen";
// Force the rectangle selection to be a square
tool.shape.rectangleSquare = "Quadrat";
// The selection rectangle will be centered around the cursor
tool.shape.rectangleCentered = "Zentriert";
// Force the ellipse selection to be a circle
tool.shape.ellipseCircle = "Kreis";
// The selection ellipse will be centered around the cursor
tool.shape.ellipseCentered = "Zentriert";
// Rotate by step (angle value)
tool.shape.lineRotateStep = "Rotate Schritt";

// Show a yellow dot on the golden ratio point
tool.measure.goldenRatio = "Goldenen Schnitt";
// volume of a mesh
tool.measure.volume = "Volumen";
// Surface of a mesh
tool.measure.surface = "Oberfläche";

// Always display the camera shortcut buttons on the viewport
tool.view.stickyCamera = "Kamera-Shortcut (immer)";

// Topology
topology = "Topologie";
// Synynom: detail value, density
topology.dynamic.detail = "Detail";
// See glossary
topology.multires = "Multiauflösung";
topology.multires.help = "Behalten Sie die mehrfache Auflösung eines Netzes bei.

Wenn Sie Änderungen in einer niedrigeren Auflösung vornehmen, werden die Details aus der höheren Auflösung beim Zurückschalten erneut projiziert.

Layer sind in jeder Auflösung verfügbar.";
// Synonym: Unsubdivide, Un-subdivide
topology.multires.reverse = "Umkehren";
topology.multires.reverse.confirm = "Konnte keine Basis-Subdivision erstellen.

Die derzeitige Topologie ist wahrscheinlich nicht das Ergebnis einer Subdivision";
topology.multires.subdivide = "Unterteilen";
topology.multires.subdivide.confirm = "Das Mesh wird $0M Vertices aufweisen, sind Sie sicher?";
// Prevents the user from subdivide the object again, a warning is displayed (with a UI link to increase this limit)
topology.multires.subdivide.limit = "Unterteilungslimit überschritten, siehe $0";
topology.multires.deleteLower = "Niedriger löschen";
topology.multires.deleteHigher = "Höher löschen";
topology.multires.keepTriangles = "Dreiecke behalten";
topology.multires.lock = "Sperren (LV0)";
// Navigate toward multiple resolutions (go to higher level)
topology.multires.up = "Multires-Ebene →";
// Navigate toward multiple resolutions (go to lower level)
topology.multires.down = "Multires-Ebene ←";
// Synonym: Flat subdivision
topology.multires.linear = "Linear Subdivision";
topology.multires.linear.help = "Unterteilt einfach das Netz ohne jegliches Glätten";
// Only show the lowest resolution wireframe
topology.multires.minWireframe = "Nur Ebene 0";
// Create a new object by recomputing a new topology
topology.remesh = "Netz neu berechnen";
// Create a new object by recomputing a new topology, by using voxels (see Glossary)
topology.voxel = "Voxel Remeshing";
topology.voxel.help = "Remeshing durch Abtasten des Meshes auf einem Raster.

If the object is not closed (watertight), an hole-filling algorithm will be applied first.

Die Layer werden nach dem Remeshing neu projiziert, aber die Qualität verschlechtert sich.";
topology.voxel.resolution = "Auflösung";
topology.voxel.sharp = "Scharfe Kanten beibehalten";
topology.voxel.sharp.help = "Diese Option ist vor allem für einfache boolesche Operationen nützlich.

Es wird in einigen Bereichen zu Verzerrungen kommen, da die Punkte an den Kanten gefangen werden.";
topology.voxel.subLevel = "Rebuild Multires";
topology.voxel.subLevel.help = "Sie können eine Multiresolution-Hierarchie aus der Voxel-Remesher-Ausgabe wiederherstellen.

Wird schneller ausgeführt und weniger Speicher verbrauchen, besonders wenn der Voxel-Detailwert hoch ist.
Wenn jedoch der Voxel-Detailwert niedrig ist und Sie viele Multires-Level benötigen, werden Sie Details verlieren.";
// Dynamic topology (DynTopo)
topology.surface.remesh = "Netz neu berechnen";
topology.surface.detail = "Detail";
topology.surface.detail.help = "Anders als bei der Voxel-Remeshing-Methode ist es bei der Surface-Remeshing-Methode nicht erforderlich, dass das Mesh geschlossen ist.

Maskierung wird unterstützt, so dass Sie Teile des Meshes mit Masken vor Topologieänderungen schützen können.

Layer werden einwandfrei aktualisiert.";
topology.surface.method = "Methode";
// Uniformisation means we can both add and remove triangles/quads
topology.surface.method.uniformisation = "Uniformisation";
// We can only add triangles/quads (synonym: Refine)
topology.surface.method.subdivision = "Unterteilung";
// We can only remove triangles/quads (synonym: Simplify)
topology.surface.method.decimation = "Dezimierung";
topology.surface.method.help = "Das Verhalten der dynamischen Topologie:
• Uniformisation: Hinzufügen und Entfernen von Details
• Subdivision: Details hinzufügen
• Decimation: Details entfernen";
topology.surface.useMasking = "Maskierte Bereiche schützen";
topology.surface.useMasking.help = "Die Topologie in den maskierten Bereichen wird von Änderungen ausgenommen.";
topology.surface.extrapolate = "Vertex Extrapolation";
// DynTopo
topology.dynamic = "Dynamische Topologie";
topology.dynamic.activate = "Aktiviert";
topology.dynamic.activate.help = "Mit dynamischer Topologie können Sculpting-Werkzeuge das Mesh lokal in Echtzeit unterteilen oder vereinfachen, je nach aktuellem Bedarf.

Diese Funktion kann sich spürbar auf die Leistung auswirken.

Layer werden einwandfrei aktualisiert.";
topology.dynamic.method = "Detailgrad basierend auf...";
topology.dynamic.method.screen = "Bildschirm";
topology.dynamic.method.radius = "Radius";
topology.dynamic.method.constant = "Konstant";
topology.dynamic.method.help = "• Zoom
Der Detailgrad hängt davon ab, wie weit man von der Oberfläche entfernt ist.

• Radius
Der Radius des Werkzeugs bestimmt den Grad der Detaillierung.

• Constant
Der Detailgrad ist festgelegt, der Detailwert wird auch mit dem Voxel-Schieberegler geteilt.";
topology.dynamic.quality = "Bevorzuge...";
topology.dynamic.quality.help = "Wenn Sie sich für Qualität entscheiden, sind die 2 wichtigsten Unterschiede:
• die Verfeinerung wird vor dem Sculpting-Operator angewandt, so dass Sie beim Painting oder Sculpting sehr kleiner Details weniger interpolierende Artefakte erhalten.
• die Verfeinerung (refinement) wird nicht inkrementell angewandt. Wenn Sie sehr kleine Details modellieren oder schnelle Strokes (Striche) setzen, wird die Topologie immer korrekt verfeinert.";
topology.dynamic.quality.speed = "Geschwindigkeit";
topology.dynamic.quality.quality = "Qualität";
// Whether the pencil pressure can impact the level of detail
topology.dynamic.usePressure = "Druck auf Radius anwenden";
topology.dynamic.usePressure.help = "Verwenden Sie diese Option, wenn Sie möchten, dass sich der Stiftdruck (pen pressure) auf den Radius des Werkzeugs auswirkt und die Detailgenauigkeit beeinflusst.";
topology.dynamic.useFalloff = "Strich-Falloff verwenden";
// Decimate
topology.decimate.title = "Dezimierung";
topology.decimate.title.help = "Verringert die Anzahl der Polygone, wobei versucht wird, so viele Details wie möglich zu erhalten.

Diese Funktion kann nützlich sein, wenn Sie für den 3D-Druck exportieren möchten.
Sie sollten diese Funktion jedoch nicht verwenden, wenn Sie mit Sculpting fortfahren wollen, da sie ungleichmäßige Dreiecke erzeugen kann.

Beachten Sie, dass der maskierte Bereich nicht dezimiert wird.";
// Synonym: Simplify (Decimate reduce the number of triangles/quads while retaining details as much as possible)
topology.decimate = "Dezimieren";
topology.decimatePaintWeight = "Painting erhalten";
topology.decimatePaintWeight.help = "Ein höherer Wert wird versuchen, Painting zu erhalten.

Setzen Sie diesen Wert auf 0, wenn Painting keine Rolle spielt.";
topology.decimateUniform = "Uniform Faces";
topology.decimateUniform.help = "Ein höherer Wert führt zur Ausgabe von Dreiecken mit ähnlicher Größe.";
topology.decimatePreserveBorders = "Grenzen bewahren";
topology.decimatePreserveBorders.help = "Reduzieren Sie nicht den Rand des Netzes.";
// Target a certain number of triangles, faces and vertices
topology.target.triangles = "Ziel Dreiecke";
topology.target.faces = "Zielflächen";
topology.target.quads = "Zielvierecke";
topology.target.points = "Zielpunkte";
// Quad remesher
topology.qremesh = "Quad-Neuvernetzung";
topology.qremesh.angle = "Faltenwinkel";
topology.qremesh.border = "Grenzen bewahren";
topology.qremesh.onlyQuad = "Nur Vierecke";
topology.qremesh.hole = "Maximale Lochfüllung";
topology.qremesh.hole.help = "
UV-berechnung";

// Unwrapping means compute UV (texture coordinates), with uvs you can appliy (wrap) a texture onto the model
topology.uv.title = "UV Auto-Unwrap";
// UV Unwrap but as a Verb
topology.uv.unwrap = "Berechnen";
// The operation can be very slow
topology.uv.atlas.warning = "Kann sehr langsam sein, Ziel: <100k Vertices!";
// Handles are topological holes (synonym: genus, hole)
topology.uv.bff.warning = "Es kann zu Überschneidungen kommen, wenn das Mesh Handles aufweist!";
// Solo patch
topology.uv.bff.seamless = "Nahtlose Patches";
topology.uv.bff.seamless.help = "Diese Option kann bedeutende Verzerrungen verursachen.

Typischerweise kann sie verwendet werden, wenn Gesichtsgruppen sorgfältig eingerichtet sind.";
// Synonym: Point count? Singularity count ?
topology.uv.bff.cones = "Kegel-Anzahl";
topology.uv.bff.help = "Ein höherer Wert verringert die Verzerrung bei komplexen Objekten.

Ein höherer Wert bedeutet aber auch eine längere Berechnungszeit.";
topology.uv.delete = "UVs löschen";

// Transfer the vertex painting in the texture, bake means "create texture (from mesh data)"
topology.bake.title = "Backen";
// Bake here means "create texture (from mesh data)"
topology.bake.title.help = "Das Texturenbaking erstellt Texturen, indem es andere sichtbare Objekte in der Szene projiziert.

Hier ist der typische Workflow für das Baking:
• Sie haben ein Netz mit feinen Details und Bemalung
• Klonen Sie es
• Reduzieren Sie es (setzen Sie `Bemalung bewahren` auf 0!)
• Entwickeln Sie es UV
• Backen Sie es!

Nomad wird jedes sichtbare Netz in der Szene berücksichtigen.
Sie können auch den Solo-Modus verwenden, um die meisten anderen Netze schnell auszublenden.
Wenn keine anderen sichtbaren Objekte vorhanden sind, wird die gesamte Szene berücksichtigt.

Sie sollten jetzt ein Netz mit niedriger Auflösung haben, das die meisten Farben und Details Ihres vorherigen Objekts beibehält.

Nach der Operation werden die Scheitelfarben in eine neue deaktivierte Ebene verschoben, damit sie ignoriert statt gegen die farbige Textur multipliziert zu werden.";
// Bake here means "create texture (from mesh data)"
topology.bake.self = "Von sich selbst";
// Bake here means "create texture (from another mesh data)"
topology.bake.other = "Von hochauflösend";
topology.bake.resolution = "Auflösung";
// Cage is a specific term, synonyom: "Bake offset"
topology.bake.offset = "Strahlenversatz";
topology.bake.radius = "Käfigradius";
// Bake opacity (from mask data)
topology.bake.opacityFromMask = "Maske -> Deckkraft";
topology.bake.backup = "Sicherung";

// project a high resolution mesh details onto another
topology.reproject.title = "Reprojizieren";
topology.reproject.title.help = "Projizieren Sie modellierte Details, Bemalung und Schichten von den nächstgelegenen sichtbaren Objekten.

Das ist meistens auch für ein Netz mit hoher Auflösung gedacht, typischerweise mit einer sauberen Topologie.";
// tweaking value
topology.reproject.rayBias = "Strahlenverzerrung";
topology.reproject.rayBias.help = "Zwei Methoden werden für die Reprojektion verwendet:
• nächstgelegen: der nächstgelegene Punkt auf der Oberfläche
• Strahl: Schnittpunkt durch die Normalenrichtung

Höhere Verzerrungswerte bevorzugen den Strahlschnitt statt der nächstgelegenen Oberfläche.";
topology.reproject.normalOffset = "Normalenversatz";
topology.reproject.shpereCast = "Sphere Cast Fallback";
topology.reproject.shpereCast.help = "Wenn die normale Strahlreprojektion fehlschlägt, wird Nomad auf den nächsten Oberflächenschnitt zurückgreifen.";
// number of iteration the algorithm will take
topology.reproject.iterations = "Iterationen";
topology.reproject.relax = "Entspannen";
topology.reproject.relax.help = "Entspannen sollte bevorzugt werden, wenn das Netz geringe Polygone hat.";
topology.reproject.layers.help = "Übertragen Sie andere Schichten auf das ausgewählte Netz.";

topology.manifold = "Manifold";
topology.nonManifold = "Non-Manifold";
topology.manifold.clean = "Reinigen";
topology.manifold.collapse = "Kleine Flächen löschen";
topology.manifold.title = "Manifold erzwingen";
topology.manifold.title.help = "Versucht, nicht manifold Kanten zu reinigen.

Das kann nützlich sein für externe Software, die Kanten, die mehr als 2 gemeinsame Flächen haben, nicht unterstützt.";

// Reset key-bindings/shortcuts
binding.reset = "Tastenbelegung zurücksetzen";
// Binding option
binding.context.toggle = "Kontext umschalten";
binding.toggleTool = "Werkzeugkürzel umschalten";
binding.toggleTool.help = "Wenn eines der Werkzeugkürzel verwendet wird, wird das vorherige Werkzeug ausgewählt, wenn das aktuelle Kürzelwerkzeug aktiv ist.";
// When the key is tap once, the value will be toggled
binding.tapToggle = "Schalterkürzel bei Tastendruck umschalten";
// The binding force camera movement
binding.forceCamera = "Kamera erzwingen";
binding.forceCamera.help = "Erzwingen Sie die Kamera-Interaktion, falls es einen Konflikt mit einer anderen Bindung gibt.

Dies kann typischerweise passieren, wenn die gleiche Bindung einer Werkzeugverknüpfung oder Hinzufügen/Abziehen zugewiesen ist.";
// Same as Color Picker but it pick the material (color, roughness, metalness, etc)
binding.pickMaterial = "Materialauswahl";
// Same as Color Picker but it pick the material (color, roughness, metalness, etc)
binding.pickFaceGroup = "Flächengruppe auswählen";
// Edit the tool brush size/radius
binding.editRadius = "Werkzeugradius";
// Edit the tool brush size/radius
binding.editIntensity = "Werkzeugintensität";
// Snap the camera
binding.view.front = "Frontansicht";
binding.view.left = "Linksansicht";
binding.view.top = "Draufsicht";
// Move/Translate the view
binding.pan.left = "Nach links schwenken";
binding.pan.right = "Nach rechts";
binding.pan.forward = "Vorwärts";
binding.pan.backward = "Rückwärts";
binding.pan.up = "Aufwärts";
binding.pan.down = "Abwärts";
// Snap the view (while rotating)
binding.snapViewOnRotate = "Ansicht ausrichten (beim Drehen)";
// Open a Nomad internal project (replace current scene)
binding.project.open = "Öffnen (Projekt)";
// Open a Nomad internal project (add it to the current scene)
binding.project.add = "Hinzufügen (Projekt)";
// Select all the objects in the scene
binding.selectAll = "Alle auswählen";
// Rotate environment and the lighting
binding.rotateLighting = "Beleuchtung drehen";
// The Camera pivot is the point around which the camera rotates
binding.updatePivot = "Drehpunkt";

quadremesh.adaptQuadCount = "Adaptive Quad-Anzahl";
quadremesh.curvatureAdaptivness = "Adaptive Größe";
quadremesh.curvatureAdaptivness.help = "Bei 100% wird die Quad-Größe je nach Objektkrümmung variieren, was kleinere Quads bei hoher Krümmung ermöglicht.
Bei 0% wird die Quad-Größe einheitlich sein.";
quadremesh.autoDetectHardEdges = "Harte Kanten automatisch erkennen";
quadremesh.useVertexColors = "Painting erhalten";

// Privacy policy
privacyPolicy.title = "Datenschutzrichtlinie";
privacyPolicy.reject = "Ablehnen";
// Hexanomad is the company name
privacyPolicy = "Hexanomad erfasst keinerlei Daten von Nomad Sculpt.";

sonar.disconnect = "SonarPen trennen";
sonar.connect = "SonarPen verbinden";
sonar.connect.confirm = "SonarPen verbinden?";
sonar.connect.confirm.warning = "Der SonarPen wird das Mikrofon (Audio-Loopback) verwenden, um den Druck des Stifts zu erkennen.";

// Color disc mode
widget.color.disc = "Scheibe";
widget.color.ring = "Ring";
widget.color.square = "Quadrat";

nomad.mainFolder = "Hauptordner von Nomad";
nomad.mainFolder.warning = "Dateien bleiben unberührt.
Sie werden nicht kopiert, gelöscht oder verschoben.";
nomad.mainFolder.error = "Nachdem Sie Ja auswählen, wird Nomad geschlossen und Sie können es einfach neu starten.";

// version trial
version.restore = "Kauf wiederherstellen";
version.buyWeb = "Die Web-Version ist nur eine Demo";
version.buyFull = "Upgrade auf Vollversion";
version.buyQR = "Kaufen";
version.buyQR.promo = "
Der Quad Remesher ist ein Algorithmus, der ein quad-dominantes Netz ausgibt.
Die Quad-Verteilung wird versuchen, der natürlichen Krümmung des Objekts zu folgen.

Der Algorithmus kann auch die Größe der Quads je nach lokaler Krümmung anpassen.

Sie können auch die resultierende Topologie mit folgenden Elementen steuern:

• Flächengruppe $0 (stellen Sie sicher, dass ihre Ränder für ein besseres Ergebnis geglättet sind!)

• Planare X/Y/Z-Symmetrie $1

• Kurvenführungen $2

• Dichtemalerei $3

Der Quad Remesher wird von https://exoside.com/ entwickelt.";

version.trialHistory = "Trial version: Nur 4 UnDo/Redo möglich";
version.trialLayer = "Trial version: Nur 1 Layer pro Mesh";
version.trialOneProject = "Trial version: Nur 1 aktives Projekt";
version.trialNoImport = "Trial version: Kein Import";
version.trialNoExport = "Trial version: Kein Export";

version.fullFeatures = "• UnDo/ReDo unbegrenzt
• Unbegrenzte Layer
• Speichern  & Laden
• Export & Import";

version.demo.purpose = "Diese Version wurde speziell für Demozwecke entwickelt.";
version.demo.disable = "Das Feature ist für diese Demo nicht verfügbar.";

// app store main page
store.name = "Nomad Sculpt";
store.headline = "Modellieren und malen in 3D";
store.tag = "sculpt, 3d, nomad, paint, modeling, modellieren, malen, modellierung";
// ----------------------------------------------
store.description.sculpt = "• Modellierungswerkzeuge
Ton, abflachen, glätten, Mask und viele andere Bürsten lassen Sie Ihre Kreation formen.
Sie können auch das Trim-Boolean-Schneidewerkzeug mit Lasso, Rechteck und anderen Formen für Hartoberflächenzwecke verwenden.";
// ----------------------------------------------
store.description.stroke = "• Strichanpassung
Falloff, Alphas, Fliesen, Bleistiftdruck und andere Strichparameter können angepasst werden.
Sie können Ihre Werkzeugvoreinstellungen auch speichern und laden.";
// ----------------------------------------------
store.description.paint = "• Malwerkzeuge
Vertex-Malerei mit Farbe, Roughness und Metalness.
Sie können auch alle Ihre Materialvoreinstellungen leicht verwalten.";
// ----------------------------------------------
store.description.layer = "• Layer
Zeichnen Sie Ihre Modellier• und Maloperationen in separaten Layern auf, um den Erstellungsprozess einfacher zu iterieren.
Sowohl die Modellier• als auch die Maländerungen werden aufgezeichnet.";
// ----------------------------------------------
store.description.multires = "• Mehrfachauflösungs-Sculpting
Wechseln Sie zwischen mehreren Auflösungen Ihres Meshs für einen flexiblen Workflow.";
// ----------------------------------------------
store.description.voxel = "• Voxel-Remeshing
Remeshen Sie Ihr Mesh schnell, um ein einheitliches Detailniveau zu erhalten.
Es kann verwendet werden, um schnell eine grobe Form am Anfang des Erstellungsprozesses zu skizzieren.";
// ----------------------------------------------
store.description.dynamic = "• Dynamische Topologie
Verfeinern Sie lokal Ihr Mesh unter Ihrem Pinsel, um ein automatisches Detailniveau zu erhalten.
Sie können sogar Ihre Layer behalten, da sie automatisch aktualisiert werden!";
// ----------------------------------------------
store.description.topology = "• Dezimieren
Reduzieren Sie die Anzahl der Polygone, während so viele Details wie möglich beibehalten werden.";
// ----------------------------------------------
store.description.group = "• Gesichtsgruppe
Segmentieren Sie Ihr Mesh in Untergruppen mit dem Werkzeug für Gesichtsgruppen.";
// ----------------------------------------------
store.description.unwrap = "• Automatisches UV-Unwrapping
Der automatische UV-Unwrapper kann Gesichtsgruppen verwenden, um den Unwrapping-Prozess zu steuern.";
// ----------------------------------------------
store.description.baking = "• Baking
Sie können Vertex-Daten wie Farbe, Roughness, Metalness und kleinskalige Details in Texturen übertragen.
Sie können auch das Gegenteil tun, Texturdaten in Vertex-Daten oder Layer übertragen.";
// ----------------------------------------------
store.description.primitive = "• Primitive Form
Zylinder, Torus, Rohr, Drehbank und andere Primitive können verwendet werden, um schnell neue Formen von Grund auf zu beginnen.";
// ----------------------------------------------
store.description.rendering = "• PBR-Rendering
Schönes PBR-Rendering standardmäßig, mit Beleuchtung und Schatten.
Sie können jederzeit zu MatCap wechseln, um ein standardmäßigeres Shading für Modellierungszwecke zu erhalten.";
// ----------------------------------------------
store.description.postprocess = "• Post-Processing
Screen Space Reflection, Depth of Field, Ambient Occlusion, Tone Mapping usw.";
// ----------------------------------------------
store.description.files = "• Export und Import
Unterstützte Formate umfassen glTF, OBJ, STL oder PLY Dateien.";
// ----------------------------------------------
store.description.interface = "• Schnittstelle
Einfach zu bedienende Schnittstelle, entwickelt für mobile Erfahrung.
Anpassung ist ebenfalls möglich!";
// ----------------------------------------------
store.description.remesher = "• Quad-Remesher (nur als separater In-App-Kauf)
Remeshen Sie Ihr Objekt automatisch mit einem quad-dominanten Mesh, das den Mesh-Kurven folgt.
Es unterstützt Guides, Gesichtsgruppen und Dichte-Painting.";
// ----------------------------------------------